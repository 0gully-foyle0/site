/* MooTools: the javascript framework. license: MIT-style license. copyright: Copyright (c) 2006-2016 [Valerio Proietti](http://mad4milk.net/).*/ 
/*!
Web Build: http://mootools.net/core/builder/e426a9ae7167c5807b173d5deff673fc
*/
!function(){function t(t,e,n){if(i)for(var s=i.length;s--;){var o=i[s];r.call(t,o)&&e.call(n,o,t[o])}}this.MooTools={version:"1.6.0",build:"529422872adfff401b901b8b6c7ca5114ee95e2b"};var e=this.typeOf=function(t){if(null==t)return"null";if(null!=t.$family)return t.$family();if(t.nodeName){if(1==t.nodeType)return"element";if(3==t.nodeType)return/\S/.test(t.nodeValue)?"textnode":"whitespace"}else if("number"==typeof t.length){if("callee"in t)return"arguments";if("item"in t)return"collection"}return typeof t},n=this.instanceOf=function(t,e){if(null==t)return!1;for(var n=t.$constructor||t.constructor;n;){if(n===e)return!0;n=n.parent}return t.hasOwnProperty?t instanceof e:!1},r=Object.prototype.hasOwnProperty,i=!0;for(var s in{toString:1})i=null;i&&(i=["hasOwnProperty","valueOf","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","constructor"]);var o=this.Function;o.prototype.overloadSetter=function(e){var n=this;return function(r,i){if(null==r)return this;if(e||"string"!=typeof r){for(var s in r)n.call(this,s,r[s]);t(r,n,this)}else n.call(this,r,i);return this}},o.prototype.overloadGetter=function(t){var e=this;return function(n){var r,i;if("string"!=typeof n?r=n:arguments.length>1?r=arguments:t&&(r=[n]),r){i={};for(var s=0;s<r.length;s++)i[r[s]]=e.call(this,r[s])}else i=e.call(this,n);return i}},o.prototype.extend=function(t,e){this[t]=e}.overloadSetter(),o.prototype.implement=function(t,e){this.prototype[t]=e}.overloadSetter();var a=Array.prototype.slice;Array.convert=function(t){return null==t?[]:u.isEnumerable(t)&&"string"!=typeof t?"array"==e(t)?t:a.call(t):[t]},o.convert=function(t){return"function"==e(t)?t:function(){return t}},Number.convert=function(t){var e=parseFloat(t);return isFinite(e)?e:null},String.convert=function(t){return t+""},Array.from=Array.convert,o.from=o.convert,Number.from=Number.convert,String.from=String.convert,o.implement({hide:function(){return this.$hidden=!0,this},protect:function(){return this.$protected=!0,this}});var u=this.Type=function(t,n){if(t){var r=t.toLowerCase(),i=function(t){return e(t)==r};u["is"+t]=i,null!=n&&(n.prototype.$family=function(){return r}.hide(),n.type=i)}return null==n?null:(n.extend(this),n.$constructor=u,n.prototype.$constructor=n,n)},c=Object.prototype.toString;u.isEnumerable=function(t){return null!=t&&"number"==typeof t.length&&"[object Function]"!=c.call(t)};var l={},h=function(t){var n=e(t.prototype);return l[n]||(l[n]=[])},f=function(t,n){if(!n||!n.$hidden){for(var r=h(this),i=0;i<r.length;i++){var s=r[i];"type"==e(s)?f.call(s,t,n):s.call(this,t,n)}var o=this.prototype[t];null!=o&&o.$protected||(this.prototype[t]=n),null==this[t]&&"function"==e(n)&&p.call(this,t,function(t){return n.apply(t,a.call(arguments,1))})}},p=function(t,e){if(!e||!e.$hidden){var n=this[t];null!=n&&n.$protected||(this[t]=e)}};u.implement({implement:f.overloadSetter(),extend:p.overloadSetter(),alias:function(t,e){f.call(this,t,this.prototype[e])}.overloadSetter(),mirror:function(t){return h(this).push(t),this}}),new u("Type",u);var d=function(t,e,n){var r=e!=Object,i=e.prototype;r&&(e=new u(t,e));for(var s=0,o=n.length;o>s;s++){var a=n[s],c=e[a],l=i[a];c&&c.protect(),r&&l&&e.implement(a,l.protect())}if(r){var h=i.propertyIsEnumerable(n[0]);e.forEachMethod=function(t){if(!h)for(var e=0,r=n.length;r>e;e++)t.call(i,i[n[e]],n[e]);for(var s in i)t.call(i,i[s],s)}}return d};d("String",String,["charAt","charCodeAt","concat","contains","indexOf","lastIndexOf","match","quote","replace","search","slice","split","substr","substring","trim","toLowerCase","toUpperCase"])("Array",Array,["pop","push","reverse","shift","sort","splice","unshift","concat","join","slice","indexOf","lastIndexOf","filter","forEach","every","map","some","reduce","reduceRight","contains"])("Number",Number,["toExponential","toFixed","toLocaleString","toPrecision"])("Function",o,["apply","call","bind"])("RegExp",RegExp,["exec","test"])("Object",Object,["create","defineProperty","defineProperties","keys","getPrototypeOf","getOwnPropertyDescriptor","getOwnPropertyNames","preventExtensions","isExtensible","seal","isSealed","freeze","isFrozen"])("Date",Date,["now"]),Object.extend=p.overloadSetter(),Date.extend("now",function(){return+new Date}),new u("Boolean",Boolean),Number.prototype.$family=function(){return isFinite(this)?"number":"null"}.hide(),Number.extend("random",function(t,e){return Math.floor(Math.random()*(e-t+1)+t)}),Array.implement({forEach:function(t,e){for(var n=0,r=this.length;r>n;n++)n in this&&t.call(e,this[n],n,this)},each:function(t,e){return Array.forEach(this,t,e),this}}),Object.extend({keys:function(e){var n=[];for(var i in e)r.call(e,i)&&n.push(i);return t(e,function(t){n.push(t)}),n},forEach:function(t,e,n){Object.keys(t).forEach(function(r){e.call(n,t[r],r,t)})}}),Object.each=Object.forEach;var m=function(t){switch(e(t)){case"array":return t.clone();case"object":return Object.clone(t);default:return t}};Array.implement("clone",function(){for(var t=this.length,e=new Array(t);t--;)e[t]=m(this[t]);return e});var v=function(t,n,r){switch(e(r)){case"object":"object"==e(t[n])?Object.merge(t[n],r):t[n]=Object.clone(r);break;case"array":t[n]=r.clone();break;default:t[n]=r}return t};Object.extend({merge:function(t,n,r){if("string"==e(n))return v(t,n,r);for(var i=1,s=arguments.length;s>i;i++){var o=arguments[i];for(var a in o)v(t,a,o[a])}return t},clone:function(t){var e={};for(var n in t)e[n]=m(t[n]);return e},append:function(t){for(var e=1,n=arguments.length;n>e;e++){var r=arguments[e]||{};for(var i in r)t[i]=r[i]}return t}}),["Object","WhiteSpace","TextNode","Collection","Arguments"].each(function(t){new u(t)});var g=Date.now();String.extend("uniqueID",function(){return(g++).toString(36)});var y=this.Hash=new u("Hash",function(t){"hash"==e(t)&&(t=Object.clone(t.getClean()));for(var n in t)this[n]=t[n];return this});y.implement({forEach:function(t,e){Object.forEach(this,t,e)},getClean:function(){var t={};for(var e in this)this.hasOwnProperty(e)&&(t[e]=this[e]);return t},getLength:function(){var t=0;for(var e in this)this.hasOwnProperty(e)&&t++;return t}}),y.alias("each","forEach"),Object.type=u.isObject;var b=this.Native=function(t){return new u(t.name,t.initialize)};b.type=u.type,b.implement=function(t,e){for(var n=0;n<t.length;n++)t[n].implement(e);return b};var x=Array.type;Array.type=function(t){return n(t,Array)||x(t)},this.$A=function(t){return Array.convert(t).slice()},this.$arguments=function(t){return function(){return arguments[t]}},this.$chk=function(t){return!(!t&&0!==t)},this.$clear=function(t){return clearTimeout(t),clearInterval(t),null},this.$defined=function(t){return null!=t},this.$each=function(t,n,r){var i=e(t);("arguments"==i||"collection"==i||"array"==i||"elements"==i?Array:Object).each(t,n,r)},this.$empty=function(){},this.$extend=function(t,e){return Object.append(t,e)},this.$H=function(t){return new y(t)},this.$merge=function(){var t=Array.slice(arguments);return t.unshift({}),Object.merge.apply(null,t)},this.$lambda=o.convert,this.$mixin=Object.merge,this.$random=Number.random,this.$splat=Array.convert,this.$time=Date.now,this.$type=function(t){var n=e(t);return"elements"==n?"array":"null"==n?!1:n},this.$unlink=function(t){switch(e(t)){case"object":return Object.clone(t);case"array":return Array.clone(t);case"hash":return new y(t);default:return t}}}(),Array.implement({every:function(t,e){for(var n=0,r=this.length>>>0;r>n;n++)if(n in this&&!t.call(e,this[n],n,this))return!1;return!0},filter:function(t,e){for(var n,r=[],i=0,s=this.length>>>0;s>i;i++)i in this&&(n=this[i],t.call(e,n,i,this)&&r.push(n));return r},indexOf:function(t,e){for(var n=this.length>>>0,r=0>e?Math.max(0,n+e):e||0;n>r;r++)if(this[r]===t)return r;return-1},map:function(t,e){for(var n=this.length>>>0,r=Array(n),i=0;n>i;i++)i in this&&(r[i]=t.call(e,this[i],i,this));return r},some:function(t,e){for(var n=0,r=this.length>>>0;r>n;n++)if(n in this&&t.call(e,this[n],n,this))return!0;return!1},clean:function(){return this.filter(function(t){return null!=t})},invoke:function(t){var e=Array.slice(arguments,1);return this.map(function(n){return n[t].apply(n,e)})},associate:function(t){for(var e={},n=Math.min(this.length,t.length),r=0;n>r;r++)e[t[r]]=this[r];return e},link:function(t){for(var e={},n=0,r=this.length;r>n;n++)for(var i in t)if(t[i](this[n])){e[i]=this[n],delete t[i];break}return e},contains:function(t,e){return-1!=this.indexOf(t,e)},append:function(t){return this.push.apply(this,t),this},getLast:function(){return this.length?this[this.length-1]:null},getRandom:function(){return this.length?this[Number.random(0,this.length-1)]:null},include:function(t){return this.contains(t)||this.push(t),this},combine:function(t){for(var e=0,n=t.length;n>e;e++)this.include(t[e]);return this},erase:function(t){for(var e=this.length;e--;)this[e]===t&&this.splice(e,1);return this},empty:function(){return this.length=0,this},flatten:function(){for(var t=[],e=0,n=this.length;n>e;e++){var r=typeOf(this[e]);"null"!=r&&(t=t.concat("array"==r||"collection"==r||"arguments"==r||instanceOf(this[e],Array)?Array.flatten(this[e]):this[e]))}return t},pick:function(){for(var t=0,e=this.length;e>t;t++)if(null!=this[t])return this[t];return null},hexToRgb:function(t){if(3!=this.length)return null;var e=this.map(function(t){return 1==t.length&&(t+=t),parseInt(t,16)});return t?e:"rgb("+e+")"},rgbToHex:function(t){if(this.length<3)return null;if(4==this.length&&0==this[3]&&!t)return"transparent";for(var e=[],n=0;3>n;n++){var r=(this[n]-0).toString(16);e.push(1==r.length?"0"+r:r)}return t?e:"#"+e.join("")}}),Array.alias("extend","append");var $pick=this.$pick=function(){return Array.convert(arguments).pick()};Function.extend({attempt:function(){for(var t=0,e=arguments.length;e>t;t++)try{return arguments[t]()}catch(n){}return null}}),Function.implement({attempt:function(t,e){try{return this.apply(e,Array.convert(t))}catch(n){}return null},bind:function(t){var e=this,n=arguments.length>1?Array.slice(arguments,1):null,r=function(){},i=function(){var s=t,o=arguments.length;this instanceof i&&(r.prototype=e.prototype,s=new r);var a=n||o?e.apply(s,n&&o?n.concat(Array.slice(arguments)):n||arguments):e.call(s);return s==t?a:s};return i},pass:function(t,e){var n=this;return null!=t&&(t=Array.convert(t)),function(){return n.apply(e,t||arguments)}},delay:function(t,e,n){return setTimeout(this.pass(null==n?[]:n,e),t)},periodical:function(t,e,n){return setInterval(this.pass(null==n?[]:n,e),t)}}),delete Function.prototype.bind,Function.implement({create:function(t){var e=this;return t=t||{},function(n){var r=t.arguments;r=null!=r?Array.convert(r):Array.slice(arguments,t.event?1:0),t.event&&r.unshift(n||window.event);var i=function(){return e.apply(t.bind||null,r)};return t.delay?setTimeout(i,t.delay):t.periodical?setInterval(i,t.periodical):t.attempt?Function.attempt(i):i()}},bind:function(t,e){var n=this;return null!=e&&(e=Array.convert(e)),function(){return n.apply(t,e||arguments)}},bindWithEvent:function(t,e){var n=this;return null!=e&&(e=Array.convert(e)),function(r){return n.apply(t,null==e?arguments:[r].concat(e))}},run:function(t,e){return this.apply(e,Array.convert(t))}}),Object.create==Function.prototype.create&&(Object.create=null);var $try=Function.attempt;Number.implement({limit:function(t,e){return Math.min(e,Math.max(t,this))},round:function(t){return t=Math.pow(10,t||0).toFixed(0>t?-t:0),Math.round(this*t)/t},times:function(t,e){for(var n=0;this>n;n++)t.call(e,n,this)},toFloat:function(){return parseFloat(this)},toInt:function(t){return parseInt(this,t||10)}}),Number.alias("each","times"),function(t){var e={};t.each(function(t){Number[t]||(e[t]=function(){return Math[t].apply(null,[this].concat(Array.convert(arguments)))})}),Number.implement(e)}(["abs","acos","asin","atan","atan2","ceil","cos","exp","floor","log","max","min","pow","sin","sqrt","tan"]),String.implement({contains:function(t,e){return(e?String(this).slice(e):String(this)).indexOf(t)>-1},test:function(t,e){return("regexp"==typeOf(t)?t:new RegExp(""+t,e)).test(this)},trim:function(){return String(this).replace(/^\s+|\s+$/g,"")},clean:function(){return String(this).replace(/\s+/g," ").trim()},camelCase:function(){return String(this).replace(/-\D/g,function(t){return t.charAt(1).toUpperCase()})},hyphenate:function(){return String(this).replace(/[A-Z]/g,function(t){return"-"+t.charAt(0).toLowerCase()})},capitalize:function(){return String(this).replace(/\b[a-z]/g,function(t){return t.toUpperCase()})},escapeRegExp:function(){return String(this).replace(/([-.*+?^${}()|[\]\/\\])/g,"\\$1")},toInt:function(t){return parseInt(this,t||10)},toFloat:function(){return parseFloat(this)},hexToRgb:function(t){var e=String(this).match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);return e?e.slice(1).hexToRgb(t):null},rgbToHex:function(t){var e=String(this).match(/\d{1,3}/g);return e?e.rgbToHex(t):null},substitute:function(t,e){return String(this).replace(e||/\\?\{([^{}]+)\}/g,function(e,n){return"\\"==e.charAt(0)?e.slice(1):null!=t[n]?t[n]:""})}}),String.prototype.contains=function(t,e){return e?(e+this+e).indexOf(e+t+e)>-1:String(this).indexOf(t)>-1},function(){var t=this.document,e=t.window=this,n=function(t,e){t=t.toLowerCase(),e=e?e.toLowerCase():"";var n=t.match(/(edge)[\s\/:]([\w\d\.]+)/);return n||(n=t.match(/(opera|ie|firefox|chrome|trident|crios|version)[\s\/:]([\w\d\.]+)?.*?(safari|(?:rv[\s\/:]|version[\s\/:])([\w\d\.]+)|$)/)||[null,"unknown",0]),"trident"==n[1]?(n[1]="ie",n[4]&&(n[2]=n[4])):"crios"==n[1]&&(n[1]="chrome"),e=t.match(/ip(?:ad|od|hone)/)?"ios":(t.match(/(?:webos|android)/)||t.match(/mac|win|linux/)||["other"])[0],"win"==e&&(e="windows"),{extend:Function.prototype.extend,name:"version"==n[1]?n[3]:n[1],version:parseFloat("opera"==n[1]&&n[4]?n[4]:n[2]),platform:e}},r=this.Browser=n(navigator.userAgent,navigator.platform);"ie"==r.name&&t.documentMode&&(r.version=t.documentMode),r.extend({Features:{xpath:!!t.evaluate,air:!!e.runtime,query:!!t.querySelector,json:!!e.JSON},parseUA:n}),r[r.name]=!0,r[r.name+parseInt(r.version,10)]=!0,"ie"==r.name&&r.version>="11"&&delete r.ie;var i=r.platform;"windows"==i&&(i="win"),r.Platform={name:i},r.Platform[i]=!0,r.Request=function(){var t=function(){return new XMLHttpRequest},e=function(){return new ActiveXObject("MSXML2.XMLHTTP")},n=function(){return new ActiveXObject("Microsoft.XMLHTTP")};return Function.attempt(function(){return t(),t},function(){return e(),e},function(){return n(),n})}(),r.Features.xhr=!!r.Request;var s=(Function.attempt(function(){return navigator.plugins["Shockwave Flash"].description},function(){return new ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version")})||"0 r0").match(/\d+/g);if(r.Plugins={Flash:{version:Number(s[0]||"0."+s[1])||0,build:Number(s[2])||0}},r.exec=function(n){if(!n)return n;if(e.execScript)e.execScript(n);else{var r=t.createElement("script");r.setAttribute("type","text/javascript"),r.text=n,t.head.appendChild(r),t.head.removeChild(r)}return n},String.implement("stripScripts",function(t){var e="",n=this.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi,function(t,n){return e+=n+"\n",""});return t===!0?r.exec(e):"function"==typeOf(t)&&t(e,n),n}),r.extend({Document:this.Document,Window:this.Window,Element:this.Element,Event:this.Event}),this.Window=this.$constructor=new Type("Window",function(){}),this.$family=Function.convert("window").hide(),Window.mirror(function(t,n){e[t]=n}),this.Document=t.$constructor=new Type("Document",function(){}),t.$family=Function.convert("document").hide(),Document.mirror(function(e,n){t[e]=n}),t.html=t.documentElement,t.head||(t.head=t.getElementsByTagName("head")[0]),t.execCommand)try{t.execCommand("BackgroundImageCache",!1,!0)}catch(o){}if(this.attachEvent&&!this.addEventListener){var a=function(){this.detachEvent("onunload",a),t.head=t.html=t.window=null,e=this.Window=t=null};this.attachEvent("onunload",a)}var u=Array.convert;try{u(t.html.childNodes)}catch(o){Array.convert=function(t){if("string"!=typeof t&&Type.isEnumerable(t)&&"array"!=typeOf(t)){for(var e=t.length,n=new Array(e);e--;)n[e]=t[e];return n}return u(t)};var c=Array.prototype,l=c.slice;["pop","push","reverse","shift","sort","splice","unshift","concat","join","slice"].each(function(t){var e=c[t];Array[t]=function(t){return e.apply(Array.convert(t),l.call(arguments,1))}})}r.Platform.ios&&(r.Platform.ipod=!0),r.Engine={};var h=function(t,e){r.Engine.name=t,r.Engine[t+e]=!0,r.Engine.version=e};if(r.ie)switch(r.Engine.trident=!0,r.version){case 6:h("trident",4);break;case 7:h("trident",5);break;case 8:h("trident",6)}if(r.firefox&&(r.Engine.gecko=!0,r.version>=3?h("gecko",19):h("gecko",18)),r.safari||r.chrome)switch(r.Engine.webkit=!0,r.version){case 2:h("webkit",419);break;case 3:h("webkit",420);break;case 4:h("webkit",525)}if(r.opera&&(r.Engine.presto=!0,r.version>=9.6?h("presto",960):r.version>=9.5?h("presto",950):h("presto",925)),"unknown"==r.name)switch((navigator.userAgent.toLowerCase().match(/(?:webkit|khtml|gecko)/)||[])[0]){case"webkit":case"khtml":r.Engine.webkit=!0;break;case"gecko":r.Engine.gecko=!0}this.$exec=r.exec}(),function(){var t=this.Class=new Type("Class",function(r){instanceOf(r,Function)&&(r={initialize:r});var i=function(){if(n(this),i.$prototyping)return this;this.$caller=null,this.$family=null;var t=this.initialize?this.initialize.apply(this,arguments):this;return this.$caller=this.caller=null,t}.extend(this).implement(r);return i.$constructor=t,i.prototype.$constructor=i,i.prototype.parent=e,i}),e=function(){if(!this.$caller)throw new Error('The method "parent" cannot be called.');var t=this.$caller.$name,e=this.$caller.$owner.parent,n=e?e.prototype[t]:null;if(!n)throw new Error('The method "'+t+'" has no parent.');return n.apply(this,arguments)},n=function(t){for(var e in t){var r=t[e];switch(typeOf(r)){case"object":var i=function(){};i.prototype=r,t[e]=n(new i);break;case"array":t[e]=r.clone()}}return t},r=function(t,e,n){n.$origin&&(n=n.$origin);var r=function(){if(n.$protected&&null==this.$caller)throw new Error('The method "'+e+'" cannot be called.');var t=this.caller,i=this.$caller;this.caller=i,this.$caller=r;var s=n.apply(this,arguments);return this.$caller=i,this.caller=t,s}.extend({$owner:t,$origin:n,$name:e});return r},i=function(e,n,i){if(t.Mutators.hasOwnProperty(e)&&(n=t.Mutators[e].call(this,n),null==n))return this;if("function"==typeOf(n)){if(n.$hidden)return this;this.prototype[e]=i?n:r(this,e,n)}else Object.merge(this.prototype,e,n);return this},s=function(t){t.$prototyping=!0;var e=new t;return delete t.$prototyping,e};t.implement("implement",i.overloadSetter()),t.Mutators={Extends:function(t){this.parent=t,this.prototype=s(t)},Implements:function(t){Array.convert(t).each(function(t){var e=new t;for(var n in e)i.call(this,n,e[n],!0)},this)}}}(),function(){this.Chain=new Class({$chain:[],chain:function(){return this.$chain.append(Array.flatten(arguments)),this},callChain:function(){return this.$chain.length?this.$chain.shift().apply(this,arguments):!1},clearChain:function(){return this.$chain.empty(),this}});var t=function(t){return t.replace(/^on([A-Z])/,function(t,e){return e.toLowerCase()})};this.Events=new Class({$events:{},addEvent:function(e,n,r){return e=t(e),n==$empty?this:(this.$events[e]=(this.$events[e]||[]).include(n),r&&(n.internal=!0),this)},addEvents:function(t){for(var e in t)this.addEvent(e,t[e]);return this},fireEvent:function(e,n,r){e=t(e);var i=this.$events[e];return i?(n=Array.convert(n),i.each(function(t){r?t.delay(r,this,n):t.apply(this,n)},this),this):this},removeEvent:function(e,n){e=t(e);var r=this.$events[e];if(r&&!n.internal){var i=r.indexOf(n);-1!=i&&delete r[i]}return this},removeEvents:function(e){var n;if("object"==typeOf(e)){for(n in e)this.removeEvent(n,e[n]);return this}e&&(e=t(e));for(n in this.$events)if(!e||e==n)for(var r=this.$events[n],i=r.length;i--;)i in r&&this.removeEvent(n,r[i]);return this}}),this.Options=new Class({setOptions:function(){var t=this.options=Object.merge.apply(null,[{},this.options].append(arguments));if(this.addEvent)for(var e in t)"function"==typeOf(t[e])&&/^on[A-Z]/.test(e)&&(this.addEvent(e,t[e]),delete t[e]);return this}})}(),function(){function t(r,i){if(r.$thenableState===o)if(r===i)n(r,new TypeError("Tried to resolve a thenable with itself."));else if(!i||"object"!=typeof i&&"function"!=typeof i)e(r,i);else{var s;try{s=i.then}catch(a){n(r,a)}if("function"==typeof s){var u=!1;l(function(){try{s.call(i,function(e){u||(u=!0,t(r,e))},function(t){u||(u=!0,n(r,t))})}catch(e){u||(u=!0,n(r,e))}})}else e(r,i)}}function e(t,e){t.$thenableState===o&&(t.$thenableResult=e,t.$thenableState=a,i(t))}function n(t,e){t.$thenableState===o&&(t.$thenableResult=e,t.$thenableState=u,i(t))}function r(t){t.$thenableState!==o&&(t.$thenableResult=null,t.$thenableState=o)}function i(t){var e,n=t.$thenableState,r=t.$thenableResult,i=t.$thenableReactions;n===a?(t.$thenableReactions=[],e="fulfillHandler"):n==u&&(t.$thenableReactions=[],e="rejectHandler"),e&&l(s.pass([r,i,e]))}function s(e,r,i){for(var s=0,o=r.length;o>s;++s){var a=r[s],u=a[i];if("Identity"===u)t(a.thenable,e);else if("Thrower"===u)n(a.thenable,e);else try{t(a.thenable,u(e))}catch(c){n(a.thenable,c)}}}var o=0,a=1,u=2,c=Class.Thenable=new Class({$thenableState:o,$thenableResult:null,$thenableReactions:[],resolve:function(e){return t(this,e),this},reject:function(t){return n(this,t),this},getThenableState:function(){switch(this.$thenableState){case o:return"pending";case a:return"fulfilled";case u:return"rejected"}},resetThenable:function(t){return n(this,t),r(this),this},then:function(t,e){"function"!=typeof t&&(t="Identity"),"function"!=typeof e&&(e="Thrower");var n=new c;return this.$thenableReactions.push({thenable:n,fulfillHandler:t,rejectHandler:e}),this.$thenableState!==o&&i(this),n},"catch":function(t){return this.then(null,t)}});c.extend({resolve:function(e){var n;return e instanceof c?n=e:(n=new c,t(n,e)),n},reject:function(t){var e=new c;return n(e,t),e}});var l;l="undefined"!=typeof process&&"function"==typeof process.nextTick?process.nextTick:"undefined"!=typeof setImmediate?setImmediate:function(t){setTimeout(t,0)}}(),function(){Object.extend({subset:function(t,e){for(var n={},r=0,i=e.length;i>r;r++){var s=e[r];s in t&&(n[s]=t[s])}return n},map:function(t,e,n){for(var r={},i=Object.keys(t),s=0;s<i.length;s++){var o=i[s];r[o]=e.call(n,t[o],o,t)}return r},filter:function(t,e,n){for(var r={},i=Object.keys(t),s=0;s<i.length;s++){var o=i[s],a=t[o];e.call(n,a,o,t)&&(r[o]=a)}return r},every:function(t,e,n){for(var r=Object.keys(t),i=0;i<r.length;i++){var s=r[i];if(!e.call(n,t[s],s))return!1}return!0},some:function(t,e,n){for(var r=Object.keys(t),i=0;i<r.length;i++){var s=r[i];if(e.call(n,t[s],s))return!0}return!1},values:function(t){for(var e=[],n=Object.keys(t),r=0;r<n.length;r++){var i=n[r];e.push(t[i])}return e},getLength:function(t){return Object.keys(t).length},keyOf:function(t,e){for(var n=Object.keys(t),r=0;r<n.length;r++){var i=n[r];if(t[i]===e)return i}return null},contains:function(t,e){return null!=Object.keyOf(t,e)},toQueryString:function(t,e){var n=[];return Object.each(t,function(t,r){e&&(r=e+"["+r+"]");var i;switch(typeOf(t)){case"object":i=Object.toQueryString(t,r);break;case"array":var s={};t.each(function(t,e){s[e]=t}),i=Object.toQueryString(s,r);break;default:i=r+"="+encodeURIComponent(t)}null!=t&&n.push(i)}),n.join("&")}})}(),Hash.implement({has:Object.prototype.hasOwnProperty,keyOf:function(t){return Object.keyOf(this,t)},hasValue:function(t){return Object.contains(this,t)},extend:function(t){return Hash.each(t||{},function(t,e){Hash.set(this,e,t)},this),this},combine:function(t){return Hash.each(t||{},function(t,e){Hash.include(this,e,t)},this),this},erase:function(t){return this.hasOwnProperty(t)&&delete this[t],this},get:function(t){return this.hasOwnProperty(t)?this[t]:null},set:function(t,e){return(!this[t]||this.hasOwnProperty(t))&&(this[t]=e),this},empty:function(){return Hash.each(this,function(t,e){delete this[e]},this),this},include:function(t,e){return null==this[t]&&(this[t]=e),this},map:function(t,e){return new Hash(Object.map(this,t,e))},filter:function(t,e){return new Hash(Object.filter(this,t,e))},every:function(t,e){return Object.every(this,t,e)},some:function(t,e){return Object.some(this,t,e)},getKeys:function(){return Object.keys(this)},getValues:function(){return Object.values(this)},toQueryString:function(t){return Object.toQueryString(this,t)}}),Hash.extend=Object.append,Hash.alias({indexOf:"keyOf",contains:"hasValue"}),function(){function t(t,s,o,u,l,f,p,d,m,v,g,y,b,x,E,S){if((s||-1===n)&&(e.expressions[++n]=[],r=-1,s))return"";if(o||u||-1===r){o=o||" ";var w=e.expressions[n];i&&w[r]&&(w[r].reverseCombinator=c(o)),w[++r]={combinator:o,tag:"*"}}var k=e.expressions[n][r];if(l)k.tag=l.replace(a,"");else if(f)k.id=f.replace(a,"");else if(p)p=p.replace(a,""),k.classList||(k.classList=[]),k.classes||(k.classes=[]),k.classList.push(p),k.classes.push({value:p,regexp:new RegExp("(^|\\s)"+h(p)+"(\\s|$)")});else if(b)S=S||E,S=S?S.replace(a,""):null,k.pseudos||(k.pseudos=[]),k.pseudos.push({key:b.replace(a,""),value:S,type:1==y.length?"class":"element"});else if(d){d=d.replace(a,""),g=(g||"").replace(a,"");var T,O;switch(m){case"^=":O=new RegExp("^"+h(g));break;case"$=":O=new RegExp(h(g)+"$");break;case"~=":O=new RegExp("(^|\\s)"+h(g)+"(\\s|$)");break;case"|=":O=new RegExp("^"+h(g)+"(-|$)");break;case"=":T=function(t){return g==t};break;case"*=":T=function(t){return t&&t.indexOf(g)>-1};break;case"!=":T=function(t){return g!=t};break;default:T=function(t){return!!t}}""==g&&/^[*$^]=$/.test(m)&&(T=function(){return!1}),T||(T=function(t){return t&&O.test(t)}),k.attributes||(k.attributes=[]),k.attributes.push({key:d,operator:m,value:g,test:T})}return""}var e,n,r,i,s={},o={},a=/\\/g,u=function(r,a){if(null==r)return null;if(r.Slick===!0)return r;r=(""+r).replace(/^\s+|\s+$/g,""),i=!!a;var c=i?o:s;if(c[r])return c[r];for(e={Slick:!0,expressions:[],raw:r,reverse:function(){return u(this.raw,!0)}},n=-1;r!=(r=r.replace(f,t)););return e.length=e.expressions.length,c[e.raw]=i?l(e):e},c=function(t){return"!"===t?" ":" "===t?"!":/^!/.test(t)?t.replace(/^!/,""):"!"+t},l=function(t){for(var e=t.expressions,n=0;n<e.length;n++){for(var r=e[n],i={parts:[],tag:"*",combinator:c(r[0].combinator)},s=0;s<r.length;s++){var o=r[s];o.reverseCombinator||(o.reverseCombinator=" "),o.combinator=o.reverseCombinator,delete o.reverseCombinator}r.reverse().push(i)}return t},h=function(t){return t.replace(/[-[\]{}()*+?.\\^$|,#\s]/g,function(t){return"\\"+t})},f=new RegExp("^(?:\\s*(,)\\s*|\\s*(<combinator>+)\\s*|(\\s+)|(<unicode>+|\\*)|\\#(<unicode>+)|\\.(<unicode>+)|\\[\\s*(<unicode1>+)(?:\\s*([*^$!~|]?=)(?:\\s*(?:([\"']?)(.*?)\\9)))?\\s*\\](?!\\])|(:+)(<unicode>+)(?:\\((?:(?:([\"'])([^\\13]*)\\13)|((?:\\([^)]+\\)|[^()]*)+))\\))?)".replace(/<combinator>/,"["+h(">+~`!@$%^&={}\\;</")+"]").replace(/<unicode>/g,"(?:[\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])").replace(/<unicode1>/g,"(?:[:\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])")),p=this.Slick||{};p.parse=function(t){return u(t)},p.escapeRegExp=h,this.Slick||(this.Slick=p)}.apply("undefined"!=typeof exports?exports:this),function(){var t={},e={},n=Object.prototype.toString;t.isNativeCode=function(t){return/\{\s*\[native code\]\s*\}/.test(""+t)},t.isXML=function(t){return!!t.xmlVersion||!!t.xml||"[object XMLDocument]"==n.call(t)||9==t.nodeType&&"HTML"!=t.documentElement.nodeName},t.setDocument=function(t){var n=t.nodeType;if(9==n);else if(n)t=t.ownerDocument;else{if(!t.navigator)return;t=t.document}if(this.document!==t){this.document=t;var r,i=t.documentElement,s=this.getUIDXML(i),o=e[s];if(o)for(r in o)this[r]=o[r];else{o=e[s]={},o.root=i,o.isXMLDocument=this.isXML(t),o.brokenStarGEBTN=o.starSelectsClosedQSA=o.idGetsName=o.brokenMixedCaseQSA=o.brokenGEBCN=o.brokenCheckedQSA=o.brokenEmptyAttributeQSA=o.isHTMLDocument=o.nativeMatchesSelector=!1;var a,u,c,l,h,f,p="slick_uniqueid",d=t.createElement("div"),m=t.body||t.getElementsByTagName("body")[0]||i;m.appendChild(d);try{d.innerHTML='<a id="'+p+'"></a>',o.isHTMLDocument=!!t.getElementById(p)}catch(v){}if(o.isHTMLDocument){d.style.display="none",d.appendChild(t.createComment("")),u=d.getElementsByTagName("*").length>1;try{d.innerHTML="foo</foo>",f=d.getElementsByTagName("*"),a=f&&!!f.length&&"/"==f[0].nodeName.charAt(0)}catch(v){}o.brokenStarGEBTN=u||a;try{d.innerHTML='<a name="'+p+'"></a><b id="'+p+'"></b>',o.idGetsName=t.getElementById(p)===d.firstChild}catch(v){}if(d.getElementsByClassName){try{d.innerHTML='<a class="f"></a><a class="b"></a>',d.getElementsByClassName("b").length,d.firstChild.className="b",l=2!=d.getElementsByClassName("b").length}catch(v){}try{d.innerHTML='<a class="a"></a><a class="f b a"></a>',c=2!=d.getElementsByClassName("a").length}catch(v){}o.brokenGEBCN=l||c}if(d.querySelectorAll){try{d.innerHTML="foo</foo>",f=d.querySelectorAll("*"),o.starSelectsClosedQSA=f&&!!f.length&&"/"==f[0].nodeName.charAt(0)}catch(v){}try{d.innerHTML='<a class="MiX"></a>',o.brokenMixedCaseQSA=!d.querySelectorAll(".MiX").length}catch(v){}try{d.innerHTML='<select><option selected="selected">a</option></select>',o.brokenCheckedQSA=0==d.querySelectorAll(":checked").length}catch(v){}try{d.innerHTML='<a class=""></a>',o.brokenEmptyAttributeQSA=0!=d.querySelectorAll('[class*=""]').length}catch(v){}}try{d.innerHTML='<form action="s"><input id="action"/></form>',h="s"!=d.firstChild.getAttribute("action")}catch(v){}if(o.nativeMatchesSelector=i.matches||i.mozMatchesSelector||i.webkitMatchesSelector,o.nativeMatchesSelector)try{o.nativeMatchesSelector.call(i,":slick"),o.nativeMatchesSelector=null}catch(v){}}try{i.slick_expando=1,delete i.slick_expando,o.getUID=this.getUIDHTML}catch(v){o.getUID=this.getUIDXML}m.removeChild(d),d=f=m=null,o.getAttribute=o.isHTMLDocument&&h?function(t,e){var n=this.attributeGetters[e];if(n)return n.call(t);var r=t.getAttributeNode(e);return r?r.nodeValue:null}:function(t,e){var n=this.attributeGetters[e];return n?n.call(t):t.getAttribute(e)},o.hasAttribute=i&&this.isNativeCode(i.hasAttribute)?function(t,e){return t.hasAttribute(e)}:function(t,e){return t=t.getAttributeNode(e),!(!t||!t.specified&&!t.nodeValue)};var g=i&&this.isNativeCode(i.contains),y=t&&this.isNativeCode(t.contains);o.contains=g&&y?function(t,e){return t.contains(e)}:g&&!y?function(e,n){return e===n||(e===t?t.documentElement:e).contains(n)}:i&&i.compareDocumentPosition?function(t,e){return t===e||!!(16&t.compareDocumentPosition(e))}:function(t,e){if(e)do if(e===t)return!0;while(e=e.parentNode);return!1},o.documentSorter=i.compareDocumentPosition?function(t,e){return t.compareDocumentPosition&&e.compareDocumentPosition?4&t.compareDocumentPosition(e)?-1:t===e?0:1:0}:"sourceIndex"in i?function(t,e){return t.sourceIndex&&e.sourceIndex?t.sourceIndex-e.sourceIndex:0}:t.createRange?function(t,e){if(!t.ownerDocument||!e.ownerDocument)return 0;var n=t.ownerDocument.createRange(),r=e.ownerDocument.createRange();return n.setStart(t,0),n.setEnd(t,0),r.setStart(e,0),r.setEnd(e,0),n.compareBoundaryPoints(Range.START_TO_END,r)}:null,i=null;for(r in o)this[r]=o[r]}}};var r=/^([#.]?)((?:[\w-]+|\*))$/,i=/\[.+[*$^]=(?:""|'')?\]/,s={};t.search=function(t,e,n,o){var a=this.found=o?null:n||[];if(!t)return a;if(t.navigator)t=t.document;else if(!t.nodeType)return a;var u,c,l,f,p=this.uniques={},d=!(!n||!n.length),m=9==t.nodeType;if(this.document!==(m?t:t.ownerDocument)&&this.setDocument(t),d)for(c=a.length;c--;)p[this.getUID(a[c])]=!0;if("string"==typeof e){var v=e.match(r);t:if(v){var g=v[1],y=v[2];if(g){if("#"==g){if(!this.isHTMLDocument||!m)break t;if(l=t.getElementById(y),!l)return a;if(this.idGetsName&&l.getAttributeNode("id").nodeValue!=y)break t;if(o)return l||null;d&&p[this.getUID(l)]||a.push(l)}else if("."==g){if(!this.isHTMLDocument||(!t.getElementsByClassName||this.brokenGEBCN)&&t.querySelectorAll)break t;if(t.getElementsByClassName&&!this.brokenGEBCN){if(f=t.getElementsByClassName(y),o)return f[0]||null;for(c=0;l=f[c++];)d&&p[this.getUID(l)]||a.push(l);
}else{var b=new RegExp("(^|\\s)"+h.escapeRegExp(y)+"(\\s|$)");for(f=t.getElementsByTagName("*"),c=0;l=f[c++];)if(className=l.className,className&&b.test(className)){if(o)return l;d&&p[this.getUID(l)]||a.push(l)}}}}else{if("*"==y&&this.brokenStarGEBTN)break t;if(f=t.getElementsByTagName(y),o)return f[0]||null;for(c=0;l=f[c++];)d&&p[this.getUID(l)]||a.push(l)}return d&&this.sort(a),o?null:a}t:if(t.querySelectorAll){if(!this.isHTMLDocument||s[e]||this.brokenMixedCaseQSA||this.brokenCheckedQSA&&e.indexOf(":checked")>-1||this.brokenEmptyAttributeQSA&&i.test(e)||!m&&e.indexOf(",")>-1||h.disableQSA)break t;var x,E=e,S=t;m||(x=S.getAttribute("id"),slickid="slickid__",S.setAttribute("id",slickid),E="#"+slickid+" "+E,t=S.parentNode);try{if(o)return t.querySelector(E)||null;f=t.querySelectorAll(E)}catch(w){s[e]=1;break t}finally{m||(x?S.setAttribute("id",x):S.removeAttribute("id"),t=S)}if(this.starSelectsClosedQSA)for(c=0;l=f[c++];)!(l.nodeName>"@")||d&&p[this.getUID(l)]||a.push(l);else for(c=0;l=f[c++];)d&&p[this.getUID(l)]||a.push(l);return d&&this.sort(a),a}if(u=this.Slick.parse(e),!u.length)return a}else{if(null==e)return a;if(!e.Slick)return this.contains(t.documentElement||t,e)?(a?a.push(e):a=e,a):a;u=e}this.posNTH={},this.posNTHLast={},this.posNTHType={},this.posNTHTypeLast={},this.push=!d&&(o||1==u.length&&1==u.expressions[0].length)?this.pushArray:this.pushUID,null==a&&(a=[]);var k,T,O,C,N,A,$,j,L,M,P,D,H,F,R=u.expressions;t:for(c=0;D=R[c];c++)for(k=0;H=D[k];k++){if(C="combinator:"+H.combinator,!this[C])continue t;if(N=this.isXMLDocument?H.tag:H.tag.toUpperCase(),A=H.id,$=H.classList,j=H.classes,L=H.attributes,M=H.pseudos,F=k===D.length-1,this.bitUniques={},F?(this.uniques=p,this.found=a):(this.uniques={},this.found=[]),0===k){if(this[C](t,N,A,j,L,M,$),o&&F&&a.length)break t}else if(o&&F){for(T=0,O=P.length;O>T;T++)if(this[C](P[T],N,A,j,L,M,$),a.length)break t}else for(T=0,O=P.length;O>T;T++)this[C](P[T],N,A,j,L,M,$);P=this.found}return(d||u.expressions.length>1)&&this.sort(a),o?a[0]||null:a},t.uidx=1,t.uidk="slick-uniqueid",t.getUIDXML=function(t){var e=t.getAttribute(this.uidk);return e||(e=this.uidx++,t.setAttribute(this.uidk,e)),e},t.getUIDHTML=function(t){return t.uniqueNumber||(t.uniqueNumber=this.uidx++)},t.sort=function(t){return this.documentSorter?(t.sort(this.documentSorter),t):t},t.cacheNTH={},t.matchNTH=/^([+-]?\d*)?([a-z]+)?([+-]\d+)?$/,t.parseNTHArgument=function(t){var e=t.match(this.matchNTH);if(!e)return!1;var n=e[2]||!1,r=e[1]||1;"-"==r&&(r=-1);var i=+e[3]||0;return e="n"==n?{a:r,b:i}:"odd"==n?{a:2,b:1}:"even"==n?{a:2,b:0}:{a:0,b:r},this.cacheNTH[t]=e},t.createNTHPseudo=function(t,e,n,r){return function(i,s){var o=this.getUID(i);if(!this[n][o]){var a=i.parentNode;if(!a)return!1;var u=a[t],c=1;if(r){var l=i.nodeName;do u.nodeName==l&&(this[n][this.getUID(u)]=c++);while(u=u[e])}else do 1==u.nodeType&&(this[n][this.getUID(u)]=c++);while(u=u[e])}s=s||"n";var h=this.cacheNTH[s]||this.parseNTHArgument(s);if(!h)return!1;var f=h.a,p=h.b,d=this[n][o];if(0==f)return p==d;if(f>0){if(p>d)return!1}else if(d>p)return!1;return(d-p)%f==0}},t.pushArray=function(t,e,n,r,i,s){this.matchSelector(t,e,n,r,i,s)&&this.found.push(t)},t.pushUID=function(t,e,n,r,i,s){var o=this.getUID(t);!this.uniques[o]&&this.matchSelector(t,e,n,r,i,s)&&(this.uniques[o]=!0,this.found.push(t))},t.matchNode=function(t,e){if(this.isHTMLDocument&&this.nativeMatchesSelector)try{return this.nativeMatchesSelector.call(t,e.replace(/\[([^=]+)=\s*([^'"\]]+?)\s*\]/g,'[$1="$2"]'))}catch(n){}var r=this.Slick.parse(e);if(!r)return!0;var i,s,o=r.expressions,a=0;for(i=0;s=o[i];i++)if(1==s.length){var u=s[0];if(this.matchSelector(t,this.isXMLDocument?u.tag:u.tag.toUpperCase(),u.id,u.classes,u.attributes,u.pseudos))return!0;a++}if(a==r.length)return!1;var c,l=this.search(this.document,r);for(i=0;c=l[i++];)if(c===t)return!0;return!1},t.matchPseudo=function(t,e,n){var r="pseudo:"+e;if(this[r])return this[r](t,n);var i=this.getAttribute(t,e);return n?n==i:!!i},t.matchSelector=function(t,e,n,r,i,s){if(e){var o=this.isXMLDocument?t.nodeName:t.nodeName.toUpperCase();if("*"==e){if("@">o)return!1}else if(o!=e)return!1}if(n&&t.getAttribute("id")!=n)return!1;var a,u,c;if(r)for(a=r.length;a--;)if(c=this.getAttribute(t,"class"),!c||!r[a].regexp.test(c))return!1;if(i)for(a=i.length;a--;)if(u=i[a],u.operator?!u.test(this.getAttribute(t,u.key)):!this.hasAttribute(t,u.key))return!1;if(s)for(a=s.length;a--;)if(u=s[a],!this.matchPseudo(t,u.key,u.value))return!1;return!0};var o={" ":function(t,e,n,r,i,s,o){var a,u,c;if(this.isHTMLDocument){t:if(n){if(u=this.document.getElementById(n),!u&&t.all||this.idGetsName&&u&&u.getAttributeNode("id").nodeValue!=n){if(c=t.all[n],!c)return;for(c[0]||(c=[c]),a=0;u=c[a++];){var l=u.getAttributeNode("id");if(l&&l.nodeValue==n){this.push(u,e,null,r,i,s);break}}return}if(!u){if(this.contains(this.root,t))return;break t}if(this.document!==t&&!this.contains(t,u))return;return void this.push(u,e,null,r,i,s)}t:if(r&&t.getElementsByClassName&&!this.brokenGEBCN){if(c=t.getElementsByClassName(o.join(" ")),!c||!c.length)break t;for(a=0;u=c[a++];)this.push(u,e,n,null,i,s);return}}if(c=t.getElementsByTagName(e),c&&c.length)for(this.brokenStarGEBTN||(e=null),a=0;u=c[a++];)this.push(u,e,n,r,i,s)},">":function(t,e,n,r,i,s){if(t=t.firstChild)do 1==t.nodeType&&this.push(t,e,n,r,i,s);while(t=t.nextSibling)},"+":function(t,e,n,r,i,s){for(;t=t.nextSibling;)if(1==t.nodeType){this.push(t,e,n,r,i,s);break}},"^":function(t,e,n,r,i,s){t=t.firstChild,t&&(1==t.nodeType?this.push(t,e,n,r,i,s):this["combinator:+"](t,e,n,r,i,s))},"~":function(t,e,n,r,i,s){for(;t=t.nextSibling;)if(1==t.nodeType){var o=this.getUID(t);if(this.bitUniques[o])break;this.bitUniques[o]=!0,this.push(t,e,n,r,i,s)}},"++":function(t,e,n,r,i,s){this["combinator:+"](t,e,n,r,i,s),this["combinator:!+"](t,e,n,r,i,s)},"~~":function(t,e,n,r,i,s){this["combinator:~"](t,e,n,r,i,s),this["combinator:!~"](t,e,n,r,i,s)},"!":function(t,e,n,r,i,s){for(;t=t.parentNode;)t!==this.document&&this.push(t,e,n,r,i,s)},"!>":function(t,e,n,r,i,s){t=t.parentNode,t!==this.document&&this.push(t,e,n,r,i,s)},"!+":function(t,e,n,r,i,s){for(;t=t.previousSibling;)if(1==t.nodeType){this.push(t,e,n,r,i,s);break}},"!^":function(t,e,n,r,i,s){t=t.lastChild,t&&(1==t.nodeType?this.push(t,e,n,r,i,s):this["combinator:!+"](t,e,n,r,i,s))},"!~":function(t,e,n,r,i,s){for(;t=t.previousSibling;)if(1==t.nodeType){var o=this.getUID(t);if(this.bitUniques[o])break;this.bitUniques[o]=!0,this.push(t,e,n,r,i,s)}}};for(var a in o)t["combinator:"+a]=o[a];var u={empty:function(t){var e=t.firstChild;return!(e&&1==e.nodeType||(t.innerText||t.textContent||"").length)},not:function(t,e){return!this.matchNode(t,e)},contains:function(t,e){return(t.innerText||t.textContent||"").indexOf(e)>-1},"first-child":function(t){for(;t=t.previousSibling;)if(1==t.nodeType)return!1;return!0},"last-child":function(t){for(;t=t.nextSibling;)if(1==t.nodeType)return!1;return!0},"only-child":function(t){for(var e=t;e=e.previousSibling;)if(1==e.nodeType)return!1;for(var n=t;n=n.nextSibling;)if(1==n.nodeType)return!1;return!0},"nth-child":t.createNTHPseudo("firstChild","nextSibling","posNTH"),"nth-last-child":t.createNTHPseudo("lastChild","previousSibling","posNTHLast"),"nth-of-type":t.createNTHPseudo("firstChild","nextSibling","posNTHType",!0),"nth-last-of-type":t.createNTHPseudo("lastChild","previousSibling","posNTHTypeLast",!0),index:function(t,e){return this["pseudo:nth-child"](t,""+(e+1))},even:function(t){return this["pseudo:nth-child"](t,"2n")},odd:function(t){return this["pseudo:nth-child"](t,"2n+1")},"first-of-type":function(t){for(var e=t.nodeName;t=t.previousSibling;)if(t.nodeName==e)return!1;return!0},"last-of-type":function(t){for(var e=t.nodeName;t=t.nextSibling;)if(t.nodeName==e)return!1;return!0},"only-of-type":function(t){for(var e=t,n=t.nodeName;e=e.previousSibling;)if(e.nodeName==n)return!1;for(var r=t;r=r.nextSibling;)if(r.nodeName==n)return!1;return!0},enabled:function(t){return!t.disabled},disabled:function(t){return t.disabled},checked:function(t){return t.checked||t.selected},focus:function(t){return this.isHTMLDocument&&this.document.activeElement===t&&(t.href||t.type||this.hasAttribute(t,"tabindex"))},root:function(t){return t===this.root},selected:function(t){return t.selected}};for(var c in u)t["pseudo:"+c]=u[c];var l=t.attributeGetters={"for":function(){return"htmlFor"in this?this.htmlFor:this.getAttribute("for")},href:function(){return"href"in this?this.getAttribute("href",2):this.getAttribute("href")},style:function(){return this.style?this.style.cssText:this.getAttribute("style")},tabindex:function(){var t=this.getAttributeNode("tabindex");return t&&t.specified?t.nodeValue:null},type:function(){return this.getAttribute("type")},maxlength:function(){var t=this.getAttributeNode("maxLength");return t&&t.specified?t.nodeValue:null}};l.MAXLENGTH=l.maxLength=l.maxlength;var h=t.Slick=this.Slick||{};h.version="1.1.7",h.search=function(e,n,r){return t.search(e,n,r)},h.find=function(e,n){return t.search(e,n,null,!0)},h.contains=function(e,n){return t.setDocument(e),t.contains(e,n)},h.getAttribute=function(e,n){return t.setDocument(e),t.getAttribute(e,n)},h.hasAttribute=function(e,n){return t.setDocument(e),t.hasAttribute(e,n)},h.match=function(e,n){return e&&n?n&&n!==e?(t.setDocument(e),t.matchNode(e,n)):!0:!1},h.defineAttributeGetter=function(e,n){return t.attributeGetters[e]=n,this},h.lookupAttributeGetter=function(e){return t.attributeGetters[e]},h.definePseudo=function(e,n){return t["pseudo:"+e]=function(t,e){return n.call(t,e)},this},h.lookupPseudo=function(e){var n=t["pseudo:"+e];return n?function(t){return n.call(this,t)}:null},h.override=function(e,n){return t.override(e,n),this},h.isXML=t.isXML,h.uidOf=function(e){return t.getUIDHTML(e)},this.Slick||(this.Slick=h)}.apply("undefined"!=typeof exports?exports:this);var Element=this.Element=function(t,e){var n=Element.Constructors[t];if(n)return n(e);if("string"!=typeof t)return document.id(t).set(e);if(e||(e={}),!/^[\w-]+$/.test(t)){var r=Slick.parse(t).expressions[0][0];t="*"==r.tag?"div":r.tag,r.id&&null==e.id&&(e.id=r.id);var i=r.attributes;if(i)for(var s,o=0,a=i.length;a>o;o++)s=i[o],null==e[s.key]&&(null!=s.value&&"="==s.operator?e[s.key]=s.value:s.value||s.operator||(e[s.key]=!0));r.classList&&null==e["class"]&&(e["class"]=r.classList.join(" "))}return document.newElement(t,e)};Browser.Element&&(Element.prototype=Browser.Element.prototype,Element.prototype._fireEvent=function(t){return function(e,n){return t.call(this,e,n)}}(Element.prototype.fireEvent)),new Type("Element",Element).mirror(function(t){if(!Array.prototype[t]){var e={};e[t]=function(){for(var e=[],n=arguments,r=!0,i=0,s=this.length;s>i;i++){var o=this[i],a=e[i]=o[t].apply(o,n);r=r&&"element"==typeOf(a)}return r?new Elements(e):e},Elements.implement(e)}}),Browser.Element||(Element.parent=Object,Element.Prototype={$constructor:Element,$family:Function.convert("element").hide()},Element.mirror(function(t,e){Element.Prototype[t]=e})),Element.Constructors={},Element.Constructors=new Hash;var IFrame=new Type("IFrame",function(){var t,e=Array.link(arguments,{properties:Type.isObject,iframe:function(t){return null!=t}}),n=e.properties||{};e.iframe&&(t=document.id(e.iframe));var r=n.onload||function(){};delete n.onload,n.id=n.name=[n.id,n.name,t?t.id||t.name:"IFrame_"+String.uniqueID()].pick(),t=new Element(t||"iframe",n);var i=function(){r.call(t.contentWindow)};return window.frames[n.id]?i():t.addListener("load",i),t}),Elements=this.Elements=function(t){if(t&&t.length)for(var e,n={},r=0;e=t[r++];){var i=Slick.uidOf(e);n[i]||(n[i]=!0,this.push(e))}};Elements.prototype={length:0},Elements.parent=Array,new Type("Elements",Elements).implement({filter:function(t,e){return t?new Elements(Array.filter(this,"string"==typeOf(t)?function(e){return e.match(t)}:t,e)):this}.protect(),push:function(){for(var t=this.length,e=0,n=arguments.length;n>e;e++){var r=document.id(arguments[e]);r&&(this[t++]=r)}return this.length=t}.protect(),unshift:function(){for(var t=[],e=0,n=arguments.length;n>e;e++){var r=document.id(arguments[e]);r&&t.push(r)}return Array.prototype.unshift.apply(this,t)}.protect(),concat:function(){for(var t=new Elements(this),e=0,n=arguments.length;n>e;e++){var r=arguments[e];Type.isEnumerable(r)?t.append(r):t.push(r)}return t}.protect(),append:function(t){for(var e=0,n=t.length;n>e;e++)this.push(t[e]);return this}.protect(),empty:function(){for(;this.length;)delete this[--this.length];return this}.protect()}),Elements.alias("extend","append"),function(){var t=Array.prototype.splice,e={0:0,1:1,length:2};t.call(e,1,1),1==e[1]&&Elements.implement("splice",function(){for(var e=this.length,n=t.apply(this,arguments);e>=this.length;)delete this[e--];return n}.protect()),Array.forEachMethod(function(t,e){Elements.implement(e,t)}),Array.mirror(Elements);var n;try{n="x"==document.createElement("<input name=x>").name}catch(r){}var i=function(t){return(""+t).replace(/&/g,"&amp;").replace(/"/g,"&quot;")},s=function(){var t=document.createElement("style"),e=!1;try{t.innerHTML="#justTesing{margin: 0px;}",e=!!t.innerHTML}catch(n){}return e}();Document.implement({newElement:function(t,e){if(e){if(null!=e.checked&&(e.defaultChecked=e.checked),"checkbox"!=e.type&&"radio"!=e.type||null!=e.value||(e.value="on"),!s&&"style"==t){var r=document.createElement("style");return r.setAttribute("type","text/css"),e.type&&delete e.type,this.id(r).set(e)}n&&(t="<"+t,e.name&&(t+=' name="'+i(e.name)+'"'),e.type&&(t+=' type="'+i(e.type)+'"'),t+=">",delete e.name,delete e.type)}return this.id(this.createElement(t)).set(e)}})}(),function(){Slick.uidOf(window),Slick.uidOf(document),Document.implement({newTextNode:function(t){return this.createTextNode(t)},getDocument:function(){return this},getWindow:function(){return this.window},id:function(){var t={string:function(e,n,r){return e=Slick.find(r,"#"+e.replace(/(\W)/g,"\\$1")),e?t.element(e,n):null},element:function(t,e){if(Slick.uidOf(t),!e&&!t.$family&&!/^(?:object|embed)$/i.test(t.tagName)){var n=t.fireEvent;t._fireEvent=function(t,e){return n(t,e)},Object.append(t,Element.Prototype)}return t},object:function(e,n,r){return e.toElement?t.element(e.toElement(r),n):null}};return t.textnode=t.whitespace=t.window=t.document=function(t){return t},function(e,n,r){if(e&&e.$family&&e.uniqueNumber)return e;var i=typeOf(e);return t[i]?t[i](e,n,r||document):null}}()}),null==window.$&&Window.implement("$",function(t,e){return document.id(t,e,this.document)}),Window.implement({getDocument:function(){return this.document},getWindow:function(){return this}}),[Document,Element].invoke("implement",{getElements:function(t){return Slick.search(this,t,new Elements)},getElement:function(t){return document.id(Slick.find(this,t))}});var t={contains:function(t){return Slick.contains(this,t)}};document.contains||Document.implement(t),document.createElement("div").contains||Element.implement(t),Element.implement("hasChild",function(t){return this!==t&&this.contains(t)}),function(t,e,n){this.Selectors={};var r=this.Selectors.Pseudo=new Hash,i=function(){for(var t in r)r.hasOwnProperty(t)&&(Slick.definePseudo(t,r[t]),delete r[t])};Slick.search=function(e,n,r){return i(),t.call(this,e,n,r)},Slick.find=function(t,n){return i(),e.call(this,t,n)},Slick.match=function(t,e){return i(),n.call(this,t,e)}}(Slick.search,Slick.find,Slick.match);var e=function(t,e){if(!t)return e;t=Object.clone(Slick.parse(t));for(var n=t.expressions,r=n.length;r--;)n[r][0].combinator=e;return t};Object.forEach({getNext:"~",getPrevious:"!~",getParent:"!"},function(t,n){Element.implement(n,function(n){return this.getElement(e(n,t))})}),Object.forEach({getAllNext:"~",getAllPrevious:"!~",getSiblings:"~~",getChildren:">",getParents:"!"},function(t,n){Element.implement(n,function(n){return this.getElements(e(n,t))})}),Element.implement({getFirst:function(t){return document.id(Slick.search(this,e(t,">"))[0])},getLast:function(t){return document.id(Slick.search(this,e(t,">")).getLast())},getWindow:function(){return this.ownerDocument.window},getDocument:function(){return this.ownerDocument},getElementById:function(t){return document.id(Slick.find(this,"#"+(""+t).replace(/(\W)/g,"\\$1")))},match:function(t){return!t||Slick.match(this,t)}}),null==window.$$&&Window.implement("$$",function(t){var e=new Elements;if(1==arguments.length&&"string"==typeof t)return Slick.search(this.document,t,e);for(var n=Array.flatten(arguments),r=0,i=n.length;i>r;r++){var s=n[r];switch(typeOf(s)){case"element":e.push(s);break;case"string":Slick.search(this.document,s,e)}}return e}),null==window.$$&&Window.implement("$$",function(t){if(1==arguments.length){if("string"==typeof t)return Slick.search(this.document,t,new Elements);if(Type.isEnumerable(t))return new Elements(t)}return new Elements(arguments)});var n={before:function(t,e){var n=e.parentNode;n&&n.insertBefore(t,e)},after:function(t,e){var n=e.parentNode;n&&n.insertBefore(t,e.nextSibling)},bottom:function(t,e){e.appendChild(t)},top:function(t,e){e.insertBefore(t,e.firstChild)}};n.inside=n.bottom,Object.each(n,function(t,e){e=e.capitalize();var n={};n["inject"+e]=function(e){return t(this,document.id(e,!0)),this},n["grab"+e]=function(e){return t(document.id(e,!0),this),this},Element.implement(n)});var r={},i={},s={};Array.forEach(["type","value","defaultValue","accessKey","cellPadding","cellSpacing","colSpan","frameBorder","rowSpan","tabIndex","useMap"],function(t){s[t.toLowerCase()]=t}),s.html="innerHTML",s.text=null==document.createElement("div").textContent?"innerText":"textContent",Object.forEach(s,function(t,e){i[e]=function(e,n){e[t]=n},r[e]=function(e){return e[t]}}),i.text=function(){return function(t,e){"style"==t.get("tag")?t.set("html",e):t[s.text]=e}}(i.text),r.text=function(t){return function(e){return"style"==e.get("tag")?e.innerHTML:t(e)}}(r.text);var o=["compact","nowrap","ismap","declare","noshade","checked","disabled","readOnly","multiple","selected","noresize","defer","defaultChecked","autofocus","controls","autoplay","loop"],a={};Array.forEach(o,function(t){var e=t.toLowerCase();a[e]=t,i[e]=function(e,n){e[t]=!!n},r[e]=function(e){return!!e[t]}}),Object.append(i,{"class":function(t,e){"className"in t?t.className=e||"":t.setAttribute("class",e)},"for":function(t,e){"htmlFor"in t?t.htmlFor=e:t.setAttribute("for",e)},style:function(t,e){t.style?t.style.cssText=e:t.setAttribute("style",e)},value:function(t,e){t.value=null!=e?e:""}}),r["class"]=function(t){return"className"in t?t.className||null:t.getAttribute("class")};var u=document.createElement("button");try{u.type="button"}catch(c){}"button"!=u.type&&(i.type=function(t,e){t.setAttribute("type",e)}),u=null;var h,f,p=function(){var t=document.createElement("style"),e=!1;try{t.innerHTML="#justTesing{margin: 0px;}",e=!!t.innerHTML}catch(n){}return e}(),d=document.createElement("input");d.value="t",d.type="submit",h="t"!=d.value;try{d.value="",d.type="email",f="email"==d.type}catch(c){}d=null,(h||!f)&&(i.type=function(t,e){try{var n=t.value;t.type=e,t.value=n}catch(r){}});var m=function(t){return t.random="attribute","attribute"==t.getAttribute("random")}(document.createElement("div")),v=function(t){return t.innerHTML='<object><param name="should_fix" value="the unknown" /></object>',1!=t.cloneNode(!0).firstChild.childNodes.length}(document.createElement("div")),g=!!document.createElement("div").classList,y=function(t){var e=(t||"").clean().split(" "),n={};return e.filter(function(t){return""===t||n[t]?void 0:n[t]=t})},b=function(t){this.classList.add(t)},x=function(t){this.classList.remove(t)};Element.implement({setProperty:function(t,e){var n=i[t.toLowerCase()];if(n)n(this,e);else{var r;m&&(r=this.retrieve("$attributeWhiteList",{})),null==e?(this.removeAttribute(t),m&&delete r[t]):(this.setAttribute(t,""+e),m&&(r[t]=!0))}return this},setProperties:function(t){for(var e in t)this.setProperty(e,t[e]);return this},getProperty:function(t){var e=r[t.toLowerCase()];if(e)return e(this);if(m){var n=this.getAttributeNode(t),i=this.retrieve("$attributeWhiteList",{});if(!n)return null;if(n.expando&&!i[t]){var s=this.outerHTML;if(s.substr(0,s.search(/\/?['"]?>(?![^<]*<['"])/)).indexOf(t)<0)return null;i[t]=!0}}var o=Slick.getAttribute(this,t);return o||Slick.hasAttribute(this,t)?o:null},getProperties:function(){var t=Array.convert(arguments);return t.map(this.getProperty,this).associate(t)},removeProperty:function(t){return this.setProperty(t,null)},removeProperties:function(){return Array.each(arguments,this.removeProperty,this),this},set:function(t,e){var n=Element.Properties[t];n&&n.set?n.set.call(this,e):this.setProperty(t,e)}.overloadSetter(),get:function(t){var e=Element.Properties[t];return e&&e.get?e.get.apply(this):this.getProperty(t)}.overloadGetter(),erase:function(t){var e=Element.Properties[t];return e&&e.erase?e.erase.apply(this):this.removeProperty(t),this},hasClass:g?function(t){return this.classList.contains(t)}:function(t){return y(this.className).contains(t)},addClass:g?function(t){return y(t).forEach(b,this),this}:function(t){return this.className=y(t+" "+this.className).join(" "),this},removeClass:g?function(t){return y(t).forEach(x,this),this}:function(t){var e=y(this.className);return y(t).forEach(e.erase,e),this.className=e.join(" "),this},toggleClass:function(t,e){return null==e&&(e=!this.hasClass(t)),e?this.addClass(t):this.removeClass(t)},adopt:function(){var t,e=this,n=Array.flatten(arguments),r=n.length;r>1&&(e=t=document.createDocumentFragment());for(var i=0;r>i;i++){var s=document.id(n[i],!0);s&&e.appendChild(s)}return t&&this.appendChild(t),this},appendText:function(t,e){return this.grab(this.getDocument().newTextNode(t),e)},grab:function(t,e){return n[e||"bottom"](document.id(t,!0),this),this},inject:function(t,e){return n[e||"bottom"](this,document.id(t,!0)),this},replaces:function(t){return t=document.id(t,!0),t.parentNode.replaceChild(this,t),this},wraps:function(t,e){return t=document.id(t,!0),this.replaces(t).grab(t,e)},getSelected:function(){return this.selectedIndex,new Elements(Array.convert(this.options).filter(function(t){return t.selected}))},toQueryString:function(){var t=[];return this.getElements("input, select, textarea").each(function(e){var n=e.type;if(e.name&&!e.disabled&&"submit"!=n&&"reset"!=n&&"file"!=n&&"image"!=n){var r="select"==e.get("tag")?e.getSelected().map(function(t){return document.id(t).get("value")}):"radio"!=n&&"checkbox"!=n||e.checked?e.get("value"):null;Array.convert(r).each(function(n){"undefined"!=typeof n&&t.push(encodeURIComponent(e.name)+"="+encodeURIComponent(n))})}}),t.join("&")}});var E={before:"beforeBegin",after:"afterEnd",bottom:"beforeEnd",top:"afterBegin",inside:"beforeEnd"};Element.implement("appendHTML","insertAdjacentHTML"in document.createElement("div")?function(t,e){return this.insertAdjacentHTML(E[e||"bottom"],t),this}:function(t,e){var r=new Element("div",{html:t}),i=r.childNodes,s=r.firstChild;if(!s)return this;if(i.length>1){s=document.createDocumentFragment();for(var o=0,a=i.length;a>o;o++)s.appendChild(i[o])}return n[e||"bottom"](s,this),this});var S={},w={},k=function(t){return w[t]||(w[t]={})},T=function(t){var e=t.uniqueNumber;return t.removeEvents&&t.removeEvents(),t.clearAttributes&&t.clearAttributes(),null!=e&&(delete S[e],delete w[e]),t},O={input:"checked",option:"selected",textarea:"value"};if(Element.implement({destroy:function(){var t=T(this).getElementsByTagName("*");return Array.each(t,T),Element.dispose(this),null},empty:function(){return Array.convert(this.childNodes).each(Element.dispose),this},dispose:function(){return this.parentNode?this.parentNode.removeChild(this):this},clone:function(t,e){t=t!==!1;var n,r=this.cloneNode(t),i=[r],s=[this];for(t&&(i.append(Array.convert(r.getElementsByTagName("*"))),s.append(Array.convert(this.getElementsByTagName("*")))),n=i.length;n--;){var o=i[n],a=s[n];if(e||o.removeAttribute("id"),o.clearAttributes&&(o.clearAttributes(),o.mergeAttributes(a),o.removeAttribute("uniqueNumber"),o.options))for(var u=o.options,c=a.options,l=u.length;l--;)u[l].selected=c[l].selected;var h=O[a.tagName.toLowerCase()];h&&a[h]&&(o[h]=a[h])}if(v){var f=r.getElementsByTagName("object"),p=this.getElementsByTagName("object");for(n=f.length;n--;)f[n].outerHTML=p[n].outerHTML}return document.id(r)}}),[Element,Window,Document].invoke("implement",{addListener:function(t,e){return window.attachEvent&&!window.addEventListener&&(S[Slick.uidOf(this)]=this),this.addEventListener?this.addEventListener(t,e,!!arguments[2]):this.attachEvent("on"+t,e),this},removeListener:function(t,e){return this.removeEventListener?this.removeEventListener(t,e,!!arguments[2]):this.detachEvent("on"+t,e),this},retrieve:function(t,e){var n=k(Slick.uidOf(this)),r=n[t];return null!=e&&null==r&&(r=n[t]=e),null!=r?r:null},store:function(t,e){var n=k(Slick.uidOf(this));return n[t]=e,this},eliminate:function(t){var e=k(Slick.uidOf(this));return delete e[t],this}}),window.attachEvent&&!window.addEventListener){var C=function(){Object.each(S,T),window.CollectGarbage&&CollectGarbage(),window.removeListener("unload",C)};window.addListener("unload",C)}Element.Properties={},Element.Properties=new Hash,Element.Properties.style={set:function(t){this.style.cssText=t},get:function(){return this.style.cssText},erase:function(){this.style.cssText=""}},Element.Properties.tag={get:function(){return this.tagName.toLowerCase()}},Element.Properties.html={set:function(t){null==t?t="":"array"==typeOf(t)&&(t=t.join("")),this.styleSheet&&!p?this.styleSheet.cssText=t:this.innerHTML=t},erase:function(){this.set("html","")}};var N,A=!0,$=!0,j=!0,L=document.createElement("div");if(L.innerHTML="<nav></nav>",A=1==L.childNodes.length,!A){var M="abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video".split(" ");for(N=document.createDocumentFragment(),l=M.length;l--;)N.createElement(M[l])}L=null,$=Function.attempt(function(){var t=document.createElement("table");return t.innerHTML="<tr><td></td></tr>",!0});var P=document.createElement("tr"),D="<td></td>";P.innerHTML=D,j=P.innerHTML==D,P=null,$&&j&&A||(Element.Properties.html.set=function(t){var e={table:[1,"<table>","</table>"],select:[1,"<select>","</select>"],tbody:[2,"<table><tbody>","</tbody></table>"],tr:[3,"<table><tbody><tr>","</tr></tbody></table>"]};return e.thead=e.tfoot=e.tbody,function(n){if(this.styleSheet)return t.call(this,n);var r=e[this.get("tag")];if(r||A||(r=[0,"",""]),!r)return t.call(this,n);var i=r[0],s=document.createElement("div"),o=s;for(A||N.appendChild(s),s.innerHTML=[r[1],n,r[2]].flatten().join("");i--;)o=o.firstChild;this.empty().adopt(o.childNodes),A||N.removeChild(s),s=null}}(Element.Properties.html.set));var H=document.createElement("form");H.innerHTML="<select><option>s</option></select>","s"!=H.firstChild.value&&(Element.Properties.value={set:function(t){var e=this.get("tag");if("select"!=e)return this.setProperty("value",t);var n=this.getElements("option");t=String(t);for(var r=0;r<n.length;r++){var i=n[r],s=i.getAttributeNode("value"),o=s&&s.specified?i.value:i.get("text");if(o===t)return i.selected=!0}},get:function(){var t=this,e=t.get("tag");if("select"!=e&&"option"!=e)return this.getProperty("value");if("select"==e&&!(t=t.getSelected()[0]))return"";var n=t.getAttributeNode("value");return n&&n.specified?t.value:t.get("text")}}),H=null,document.createElement("div").getAttributeNode("id")&&(Element.Properties.id={set:function(t){this.id=this.getAttributeNode("id").value=t},get:function(){return this.id||null},erase:function(){this.id=this.getAttributeNode("id").value=""}})}(),function(){var t={},e=function(t){var e;if(t.wheelDelta)e=t.wheelDelta%120==0?t.wheelDelta/120:t.wheelDelta/12;else{var n=t.deltaY||t.detail||0;e=-(n%3==0?n/3:10*n)}return e},n=this.DOMEvent=new Type("DOMEvent",function(n,r){if(r||(r=window),n=n||r.event,n.$extended)return n;this.event=n,this.$extended=!0,this.shift=n.shiftKey,this.control=n.ctrlKey,this.alt=n.altKey,this.meta=n.metaKey;for(var i=this.type=n.type,s=n.target||n.srcElement;s&&3==s.nodeType;)s=s.parentNode;if(this.target=document.id(s),0==i.indexOf("key")){var o=this.code=n.which||n.keyCode;this.shift&&"keypress"==i||(this.key=t[o]||Object.keyOf(Event.Keys,o)),("keydown"==i||"keyup"==i)&&(o>111&&124>o?this.key="f"+(o-111):o>95&&106>o&&(this.key=o-96)),null==this.key&&(this.key=String.fromCharCode(o).toLowerCase())}else if("click"==i||"dblclick"==i||"contextmenu"==i||"wheel"==i||"DOMMouseScroll"==i||0==i.indexOf("mouse")){var a=r.document;if(a=a.compatMode&&"CSS1Compat"!=a.compatMode?a.body:a.html,this.page={x:null!=n.pageX?n.pageX:n.clientX+a.scrollLeft,y:null!=n.pageY?n.pageY:n.clientY+a.scrollTop},this.client={x:null!=n.pageX?n.pageX-r.pageXOffset:n.clientX,y:null!=n.pageY?n.pageY-r.pageYOffset:n.clientY},("DOMMouseScroll"==i||"wheel"==i||"mousewheel"==i)&&(this.wheel=e(n)),this.rightClick=3==n.which||2==n.button,"mouseover"==i||"mouseout"==i||"mouseenter"==i||"mouseleave"==i){for(var u="mouseover"==i||"mouseenter"==i,c=n.relatedTarget||n[(u?"from":"to")+"Element"];c&&3==c.nodeType;)c=c.parentNode;this.relatedTarget=document.id(c)}}else if(0==i.indexOf("touch")||0==i.indexOf("gesture")){this.rotation=n.rotation,this.scale=n.scale,this.targetTouches=n.targetTouches,this.changedTouches=n.changedTouches;var l=this.touches=n.touches;if(l&&l[0]){var h=l[0];this.page={x:h.pageX,y:h.pageY},this.client={x:h.clientX,y:h.clientY}}}this.client||(this.client={}),this.page||(this.page={})});n.implement({stop:function(){return this.preventDefault().stopPropagation()},stopPropagation:function(){return this.event.stopPropagation?this.event.stopPropagation():this.event.cancelBubble=!0,this},preventDefault:function(){return this.event.preventDefault?this.event.preventDefault():this.event.returnValue=!1,this}}),n.defineKey=function(e,n){return t[e]=n,this},n.defineKeys=n.defineKey.overloadSetter(!0),n.defineKeys({38:"up",40:"down",37:"left",39:"right",27:"esc",32:"space",8:"backspace",9:"tab",46:"delete",13:"enter"})}();var Event=this.Event=DOMEvent;Event.Keys={},Event.Keys=new Hash(Event.Keys),function(){Element.Properties.events={set:function(t){this.addEvents(t)}},[Element,Window,Document].invoke("implement",{addEvent:function(t,e){var n=this.retrieve("events",{});if(n[t]||(n[t]={keys:[],values:[]}),n[t].keys.contains(e))return this;n[t].keys.push(e);var r=t,i=Element.Events[t],s=e,o=this;i&&(i.onAdd&&i.onAdd.call(this,e,t),i.condition&&(s=function(n){return i.condition.call(this,n,t)?e.call(this,n):!0}),i.base&&(r=Function.convert(i.base).call(this,t)));var a=function(){return e.call(o)},u=Element.NativeEvents[r];return u&&(2==u&&(a=function(t){t=new DOMEvent(t,o.getWindow()),s.call(o,t)===!1&&t.stop()}),this.addListener(r,a,arguments[2])),n[t].values.push(a),this},removeEvent:function(t,e){var n=this.retrieve("events");if(!n||!n[t])return this;var r=n[t],i=r.keys.indexOf(e);if(-1==i)return this;var s=r.values[i];delete r.keys[i],delete r.values[i];var o=Element.Events[t];return o&&(o.onRemove&&o.onRemove.call(this,e,t),o.base&&(t=Function.convert(o.base).call(this,t))),Element.NativeEvents[t]?this.removeListener(t,s,arguments[2]):this},addEvents:function(t){for(var e in t)this.addEvent(e,t[e]);return this},removeEvents:function(t){var e;if("object"==typeOf(t)){for(e in t)this.removeEvent(e,t[e]);return this}var n=this.retrieve("events");if(!n)return this;if(t)n[t]&&(n[t].keys.each(function(e){this.removeEvent(t,e)},this),delete n[t]);else{for(e in n)this.removeEvents(e);this.eliminate("events")}return this},fireEvent:function(t,e,n){var r=this.retrieve("events");return r&&r[t]?(e=Array.convert(e),r[t].keys.each(function(t){n?t.delay(n,this,e):t.apply(this,e)},this),this):this},cloneEvents:function(t,e){t=document.id(t);var n=t.retrieve("events");if(!n)return this;if(e)n[e]&&n[e].keys.each(function(t){this.addEvent(e,t)},this);else for(var r in n)this.cloneEvents(t,r);return this}}),Element.NativeEvents={click:2,dblclick:2,
mouseup:2,mousedown:2,contextmenu:2,wheel:2,mousewheel:2,DOMMouseScroll:2,mouseover:2,mouseout:2,mousemove:2,selectstart:2,selectend:2,keydown:2,keypress:2,keyup:2,orientationchange:2,touchstart:2,touchmove:2,touchend:2,touchcancel:2,gesturestart:2,gesturechange:2,gestureend:2,focus:2,blur:2,change:2,reset:2,select:2,submit:2,paste:2,input:2,load:2,unload:1,beforeunload:2,resize:1,move:1,DOMContentLoaded:1,readystatechange:1,hashchange:1,popstate:2,pageshow:2,pagehide:2,error:1,abort:1,scroll:1,message:2},Element.Events={mousewheel:{base:"onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll"}};var t=function(t){var e=t.relatedTarget;return null==e?!0:e?e!=this&&"xul"!=e.prefix&&"document"!=typeOf(this)&&!this.contains(e):!1};"onmouseenter"in document.documentElement?(Element.NativeEvents.mouseenter=Element.NativeEvents.mouseleave=2,Element.MouseenterCheck=t):(Element.Events.mouseenter={base:"mouseover",condition:t},Element.Events.mouseleave={base:"mouseout",condition:t}),window.addEventListener||(Element.NativeEvents.propertychange=2,Element.Events.change={base:function(){var t=this.type;return"input"!=this.get("tag")||"radio"!=t&&"checkbox"!=t?"change":"propertychange"},condition:function(t){return"propertychange"!=t.type||"checked"==t.event.propertyName}}),Element.Events=new Hash(Element.Events)}(),function(){var t=!!window.addEventListener;Element.NativeEvents.focusin=Element.NativeEvents.focusout=2;var e=function(t,e,n,r,i){for(;i&&i!=t;){if(e(i,r))return n.call(i,r,i);i=document.id(i.parentNode)}},n={mouseenter:{base:"mouseover",condition:Element.MouseenterCheck},mouseleave:{base:"mouseout",condition:Element.MouseenterCheck},focus:{base:"focus"+(t?"":"in"),capture:!0},blur:{base:t?"blur":"focusout",capture:!0}},r="$delegation:",i=function(t){return{base:"focusin",remove:function(e,n){var i=e.retrieve(r+t+"listeners",{})[n];if(i&&i.forms)for(var s=i.forms.length;s--;)i.forms[s].removeEvent&&i.forms[s].removeEvent(t,i.fns[s])},listen:function(n,i,s,o,a,u){var c="form"==a.get("tag")?a:o.target.getParent("form");if(c){var l=n.retrieve(r+t+"listeners",{}),h=l[u]||{forms:[],fns:[]},f=h.forms,p=h.fns;if(-1==f.indexOf(c)){f.push(c);var d=function(t){e(n,i,s,t,a)};c.addEvent(t,d),p.push(d),l[u]=h,n.store(r+t+"listeners",l)}}}}},s=function(t){return{base:"focusin",listen:function(n,r,i,s,o){var a={blur:function(){this.removeEvents(a)}};a[t]=function(t){e(n,r,i,t,o)},s.target.addEvents(a)}}};t||Object.append(n,{submit:i("submit"),reset:i("reset"),change:s("change"),select:s("select")});var o=Element.prototype,a=o.addEvent,u=o.removeEvent,c=function(t,e){return function(n,r,i){if(-1==n.indexOf(":relay"))return t.call(this,n,r,i);var s=Slick.parse(n).expressions[0][0];if("relay"!=s.pseudos[0].key)return t.call(this,n,r,i);var o=s.tag;return s.pseudos.slice(1).each(function(t){o+=":"+t.key+(t.value?"("+t.value+")":"")}),t.call(this,n,r),e.call(this,o,s.pseudos[0].value,r)}},l={addEvent:function(t,r,i){var s=this.retrieve("$delegates",{}),o=s[t];if(o)for(var u in o)if(o[u].fn==i&&o[u].match==r)return this;var c=t,l=r,h=i,f=n[t]||{};t=f.base||c,r=function(t){return Slick.match(t,l)};var p=Element.Events[c];if(f.condition||p&&p.condition){var d=r,m=f.condition||p.condition;r=function(e,n){return d(e,n)&&m.call(e,n,t)}}var v=this,g=String.uniqueID(),y=f.listen?function(t,e){!e&&t&&t.target&&(e=t.target),e&&f.listen(v,r,i,t,e,g)}:function(t,n){!n&&t&&t.target&&(n=t.target),n&&e(v,r,i,t,n)};return o||(o={}),o[g]={match:l,fn:h,delegator:y},s[c]=o,a.call(this,t,y,f.capture)},removeEvent:function(t,e,r,i){var s=this.retrieve("$delegates",{}),o=s[t];if(!o)return this;if(i){var a=t,c=o[i].delegator,h=n[t]||{};return t=h.base||a,h.remove&&h.remove(this,i),delete o[i],s[a]=o,u.call(this,t,c,h.capture)}var f,p;if(r){for(f in o)if(p=o[f],p.match==e&&p.fn==r)return l.removeEvent.call(this,t,e,r,f)}else for(f in o)p=o[f],p.match==e&&l.removeEvent.call(this,t,e,p.fn,f);return this}};[Element,Window,Document].invoke("implement",{addEvent:c(a,l.addEvent),removeEvent:c(u,l.removeEvent)})}(),function(){var t,e=document.html;t=document.createElement("div"),t.style.color="red",t.style.color=null;var n="red"==t.style.color,r="1px solid #123abc";t.style.border=r;var i=t.style.border!=r;t=null;var s=!!window.getComputedStyle,o=null!=document.createElement("div").style.borderRadius;Element.Properties.styles={set:function(t){this.setStyles(t)}};var a=null!=e.style.opacity,u=null!=e.style.filter,c=/alpha\(opacity=([\d.]+)\)/i,l=function(t,e){t.store("$opacity",e),t.style.visibility=e>0||null==e?"visible":"hidden"},h=function(t,e,n){var r=t.style,i=r.filter||t.getComputedStyle("filter")||"";r.filter=(e.test(i)?i.replace(e,n):i+" "+n).trim(),r.filter||r.removeAttribute("filter")},f=a?function(t,e){t.style.opacity=e}:u?function(t,e){t.currentStyle&&t.currentStyle.hasLayout||(t.style.zoom=1),null==e||1==e?(h(t,c,""),1==e&&1!=p(t)&&h(t,c,"alpha(opacity=100)")):h(t,c,"alpha(opacity="+(100*e).limit(0,100).round()+")")}:l,p=a?function(t){var e=t.style.opacity||t.getComputedStyle("opacity");return""==e?1:e.toFloat()}:u?function(t){var e,n=t.style.filter||t.getComputedStyle("filter");return n&&(e=n.match(c)),null==e||null==n?1:e[1]/100}:function(t){var e=t.retrieve("$opacity");return null==e&&(e="hidden"==t.style.visibility?0:1),e},d=null==e.style.cssFloat?"styleFloat":"cssFloat",m={left:"0%",top:"0%",center:"50%",right:"100%",bottom:"100%"},v=null!=e.style.backgroundPositionX,g=/^-(ms)-/,y=function(t){return t.replace(g,"$1-").camelCase()},b=function(t,e){"backgroundPosition"==e&&(t.removeAttribute(e+"X"),e+="Y"),t.removeAttribute(e)};Element.implement({getComputedStyle:function(t){if(!s&&this.currentStyle)return this.currentStyle[y(t)];var e=Element.getDocument(this).defaultView,n=e?e.getComputedStyle(this,null):null;return n?n.getPropertyValue(t==d?"float":t.hyphenate()):""},setStyle:function(t,e){if("opacity"==t)return null!=e&&(e=parseFloat(e)),f(this,e),this;if(t=y("float"==t?d:t),"string"!=typeOf(e)){var r=(Element.Styles[t]||"@").split(" ");e=Array.convert(e).map(function(t,e){return r[e]?"number"==typeOf(t)?r[e].replace("@",Math.round(t)):t:""}).join(" ")}else e==String(Number(e))&&(e=Math.round(e));return this.style[t]=e,(""==e||null==e)&&n&&this.style.removeAttribute&&b(this.style,t),this},getStyle:function(t){if("opacity"==t)return p(this);if(t=y("float"==t?d:t),o&&-1!=t.indexOf("borderRadius"))return["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"].map(function(t){return this.style[t]||"0px"},this).join(" ");var e=this.style[t];if(!e||"zIndex"==t){if(Element.ShortStyles.hasOwnProperty(t)){e=[];for(var n in Element.ShortStyles[t])e.push(this.getStyle(n));return e.join(" ")}e=this.getComputedStyle(t)}if(v&&/^backgroundPosition[XY]?$/.test(t))return e.replace(/(top|right|bottom|left)/g,function(t){return m[t]})||"0px";if(!e&&"backgroundPosition"==t)return"0px 0px";if(e){e=String(e);var r=e.match(/rgba?\([\d\s,]+\)/);r&&(e=e.replace(r[0],r[0].rgbToHex()))}if(!s&&!this.style[t]){if(/^(height|width)$/.test(t)&&!/px$/.test(e)){var a="width"==t?["left","right"]:["top","bottom"],u=0;return a.each(function(t){u+=this.getStyle("border-"+t+"-width").toInt()+this.getStyle("padding-"+t).toInt()},this),this["offset"+t.capitalize()]-u+"px"}if(/^border(.+)Width|margin|padding/.test(t)&&isNaN(parseFloat(e)))return"0px"}return i&&/^border(Top|Right|Bottom|Left)?$/.test(t)&&/^#/.test(e)?e.replace(/^(.+)\s(.+)\s(.+)$/,"$2 $3 $1"):e},setStyles:function(t){for(var e in t)this.setStyle(e,t[e]);return this},getStyles:function(){var t={};return Array.flatten(arguments).each(function(e){t[e]=this.getStyle(e)},this),t}}),Element.Styles={left:"@px",top:"@px",bottom:"@px",right:"@px",width:"@px",height:"@px",maxWidth:"@px",maxHeight:"@px",minWidth:"@px",minHeight:"@px",backgroundColor:"rgb(@, @, @)",backgroundSize:"@px",backgroundPosition:"@px @px",color:"rgb(@, @, @)",fontSize:"@px",letterSpacing:"@px",lineHeight:"@px",clip:"rect(@px @px @px @px)",margin:"@px @px @px @px",padding:"@px @px @px @px",border:"@px @ rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)",borderWidth:"@px @px @px @px",borderStyle:"@ @ @ @",borderColor:"rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)",zIndex:"@",zoom:"@",fontWeight:"@",textIndent:"@px",opacity:"@",borderRadius:"@px @px @px @px"},Element.implement({setOpacity:function(t){return f(this,t),this},getOpacity:function(){return p(this)}}),Element.Properties.opacity={set:function(t){f(this,t),l(this,t)},get:function(){return p(this)}},Element.Styles=new Hash(Element.Styles),Element.ShortStyles={margin:{},padding:{},border:{},borderWidth:{},borderStyle:{},borderColor:{}},["Top","Right","Bottom","Left"].each(function(t){var e=Element.ShortStyles,n=Element.Styles;["margin","padding"].each(function(r){var i=r+t;e[r][i]=n[i]="@px"});var r="border"+t;e.border[r]=n[r]="@px @ rgb(@, @, @)";var i=r+"Width",s=r+"Style",o=r+"Color";e[r]={},e.borderWidth[i]=e[r][i]=n[i]="@px",e.borderStyle[s]=e[r][s]=n[s]="@",e.borderColor[o]=e[r][o]=n[o]="rgb(@, @, @)"}),v&&(Element.ShortStyles.backgroundPosition={backgroundPositionX:"@",backgroundPositionY:"@"})}(),function(){function t(t,e){return d(t,e).toInt()||0}function e(t){return"border-box"==d(t,"-moz-box-sizing")}function n(e){return t(e,"border-top-width")}function r(e){return t(e,"border-left-width")}function i(t){return/^(?:body|html)$/i.test(t.tagName)}function s(t){var e=t.getDocument();return e.compatMode&&"CSS1Compat"!=e.compatMode?e.body:e.html}var o=document.createElement("div"),a=document.createElement("div");o.style.height="0",o.appendChild(a);var u=a.offsetParent===o;o=a=null;var c=["height","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth"],l=["width","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth"],h=function(t){var e=window.getComputedStyle(t),n={x:0,y:0};return c.each(function(t){n.y+=parseFloat(e[t])}),l.each(function(t){n.x+=parseFloat(e[t])}),n},f=function(t){return"static"!=d(t,"position")||i(t)},p=function(t){return f(t)||/^(?:table|td|th)$/i.test(t.tagName)};Element.implement({scrollTo:function(t,e){return i(this)?this.getWindow().scrollTo(t,e):(this.scrollLeft=t,this.scrollTop=e),this},getSize:function(){if(i(this))return this.getWindow().getSize();if(!window.getComputedStyle)return{x:this.offsetWidth,y:this.offsetHeight};if("svg"==this.get("tag"))return h(this);try{var t=this.getBoundingClientRect();return{x:t.width,y:t.height}}catch(e){return{x:0,y:0}}},getScrollSize:function(){return i(this)?this.getWindow().getScrollSize():{x:this.scrollWidth,y:this.scrollHeight}},getScroll:function(){return i(this)?this.getWindow().getScroll():{x:this.scrollLeft,y:this.scrollTop}},getScrolls:function(){for(var t=this.parentNode,e={x:0,y:0};t&&!i(t);)e.x+=t.scrollLeft,e.y+=t.scrollTop,t=t.parentNode;return e},getOffsetParent:u?function(){var t=this;if(i(t)||"fixed"==d(t,"position"))return null;for(var e="static"==d(t,"position")?p:f;t=t.parentNode;)if(e(t))return t;return null}:function(){var t=this;if(i(t)||"fixed"==d(t,"position"))return null;try{return t.offsetParent}catch(e){}return null},getOffsets:function(){var t=this.getBoundingClientRect;if(t=t&&!Browser.Platform.ios){var s=this.getBoundingClientRect(),o=document.id(this.getDocument().documentElement),a=o.getScroll(),u=this.getScrolls(),c="fixed"==d(this,"position");return{x:s.left.toFloat()+u.x+(c?0:a.x)-o.clientLeft,y:s.top.toFloat()+u.y+(c?0:a.y)-o.clientTop}}var l=this,h={x:0,y:0};if(i(this))return h;for(;l&&!i(l);){if(h.x+=l.offsetLeft,h.y+=l.offsetTop,Browser.firefox){e(l)||(h.x+=r(l),h.y+=n(l));var f=l.parentNode;f&&"visible"!=d(f,"overflow")&&(h.x+=r(f),h.y+=n(f))}else l!=this&&Browser.safari&&(h.x+=r(l),h.y+=n(l));l=l.offsetParent}return Browser.firefox&&!e(this)&&(h.x-=r(this),h.y-=n(this)),h},getPosition:function(t){var e=this.getOffsets(),i=this.getScrolls(),s={x:e.x-i.x,y:e.y-i.y};if(t&&(t=document.id(t))){var o=t.getPosition();return{x:s.x-o.x-r(t),y:s.y-o.y-n(t)}}return s},getCoordinates:function(t){if(i(this))return this.getWindow().getCoordinates();var e=this.getPosition(t),n=this.getSize(),r={left:e.x,top:e.y,width:n.x,height:n.y};return r.right=r.left+r.width,r.bottom=r.top+r.height,r},computePosition:function(e){return{left:e.x-t(this,"margin-left"),top:e.y-t(this,"margin-top")}},setPosition:function(t){return this.setStyles(this.computePosition(t))}}),[Document,Window].invoke("implement",{getSize:function(){var t=s(this);return{x:t.clientWidth,y:t.clientHeight}},getScroll:function(){var t=this.getWindow(),e=s(this);return{x:t.pageXOffset||e.scrollLeft,y:t.pageYOffset||e.scrollTop}},getScrollSize:function(){var t=s(this),e=this.getSize(),n=this.getDocument().body;return{x:Math.max(t.scrollWidth,n.scrollWidth,e.x),y:Math.max(t.scrollHeight,n.scrollHeight,e.y)}},getPosition:function(){return{x:0,y:0}},getCoordinates:function(){var t=this.getSize();return{top:0,left:0,bottom:t.y,right:t.x,height:t.y,width:t.x}}});var d=Element.getComputedStyle}(),Element.alias({position:"setPosition"}),[Window,Document,Element].invoke("implement",{getHeight:function(){return this.getSize().y},getWidth:function(){return this.getSize().x},getScrollTop:function(){return this.getScroll().y},getScrollLeft:function(){return this.getScroll().x},getScrollHeight:function(){return this.getScrollSize().y},getScrollWidth:function(){return this.getScrollSize().x},getTop:function(){return this.getPosition().y},getLeft:function(){return this.getPosition().x}}),function(){var t=this.Fx=new Class({Implements:[Chain,Events,Options,Class.Thenable],options:{fps:60,unit:!1,duration:500,frames:null,frameSkip:!0,link:"ignore"},initialize:function(t){this.subject=this.subject||this,this.setOptions(t)},getTransition:function(){return function(t){return-(Math.cos(Math.PI*t)-1)/2}},step:function(t){if(this.options.frameSkip){var e=null!=this.time?t-this.time:0,n=e/this.frameInterval;this.time=t,this.frame+=n}else this.frame++;if(this.frame<this.frames){var r=this.transition(this.frame/this.frames);this.set(this.compute(this.from,this.to,r))}else this.frame=this.frames,this.set(this.compute(this.from,this.to,1)),this.stop()},set:function(t){return t},compute:function(e,n,r){return t.compute(e,n,r)},check:function(){if(!this.isRunning())return!0;switch(this.options.link){case"cancel":return this.cancel(),!0;case"chain":return this.chain(this.caller.pass(arguments,this)),!1}return!1},start:function(e,n){if(!this.check(e,n))return this;this.from=e,this.to=n,this.frame=this.options.frameSkip?0:-1,this.time=null,this.transition=this.getTransition();var r=this.options.frames,s=this.options.fps,o=this.options.duration;return this.duration=t.Durations[o]||o.toInt(),this.frameInterval=1e3/s,this.frames=r||Math.round(this.duration/this.frameInterval),"pending"!==this.getThenableState()&&this.resetThenable(this.subject),this.fireEvent("start",this.subject),i.call(this,s),this},stop:function(){return this.isRunning()&&(this.time=null,s.call(this,this.options.fps),this.frames==this.frame?(this.fireEvent("complete",this.subject),this.callChain()||this.fireEvent("chainComplete",this.subject)):this.fireEvent("stop",this.subject),this.resolve(this.subject===this?null:this.subject)),this},cancel:function(){return this.isRunning()&&(this.time=null,s.call(this,this.options.fps),this.frame=this.frames,this.fireEvent("cancel",this.subject).clearChain(),this.reject(this.subject)),this},pause:function(){return this.isRunning()&&(this.time=null,s.call(this,this.options.fps)),this},resume:function(){return this.isPaused()&&i.call(this,this.options.fps),this},isRunning:function(){var t=e[this.options.fps];return t&&t.contains(this)},isPaused:function(){return this.frame<this.frames&&!this.isRunning()}});t.compute=function(t,e,n){return(e-t)*n+t},t.Durations={"short":250,normal:500,"long":1e3};var e={},n={},r=function(){for(var t=Date.now(),e=this.length;e--;){var n=this[e];n&&n.step(t)}},i=function(t){var i=e[t]||(e[t]=[]);i.push(this),n[t]||(n[t]=r.periodical(Math.round(1e3/t),i))},s=function(t){var r=e[t];r&&(r.erase(this),!r.length&&n[t]&&(delete e[t],n[t]=clearInterval(n[t])))}}(),Fx.CSS=new Class({Extends:Fx,prepare:function(t,e,n){n=Array.convert(n);var r=n[0],i=n[1];if(null==i){i=r,r=t.getStyle(e);var s=this.options.unit;if(s&&r&&"string"==typeof r&&r.slice(-s.length)!=s&&0!=parseFloat(r)){t.setStyle(e,i+s);var o=t.getComputedStyle(e);if(!/px$/.test(o)&&(o=t.style[("pixel-"+e).camelCase()],null==o)){var a=t.style.left;t.style.left=i+s,o=t.style.pixelLeft,t.style.left=a}r=(i||1)/(parseFloat(o)||1)*(parseFloat(r)||0),t.setStyle(e,r+s)}}return{from:this.parse(r),to:this.parse(i)}},parse:function(t){return t=Function.convert(t)(),t="string"==typeof t?t.split(" "):Array.convert(t),t.map(function(t){t=String(t);var e=!1;return Object.each(Fx.CSS.Parsers,function(n){if(!e){var r=n.parse(t);(r||0===r)&&(e={value:r,parser:n})}}),e=e||{value:t,parser:Fx.CSS.Parsers.String}})},compute:function(t,e,n){var r=[];return Math.min(t.length,e.length).times(function(i){r.push({value:t[i].parser.compute(t[i].value,e[i].value,n),parser:t[i].parser})}),r.$family=Function.convert("fx:css:value"),r},serve:function(t,e){"fx:css:value"!=typeOf(t)&&(t=this.parse(t));var n=[];return t.each(function(t){n=n.concat(t.parser.serve(t.value,e))}),n},render:function(t,e,n,r){t.setStyle(e,this.serve(n,r))},search:function(t){if(Fx.CSS.Cache[t])return Fx.CSS.Cache[t];var e={},n=new RegExp("^"+t.escapeRegExp()+"$"),r=function(t){Array.each(t,function(t){if(t.media)return void r(t.rules||t.cssRules);if(t.style){var i=t.selectorText?t.selectorText.replace(/^\w+/,function(t){return t.toLowerCase()}):null;i&&n.test(i)&&Object.each(Element.Styles,function(n,r){t.style[r]&&!Element.ShortStyles[r]&&(n=String(t.style[r]),e[r]=/^rgb/.test(n)?n.rgbToHex():n)})}})};return Array.each(document.styleSheets,function(t){var e=t.href;if(!(e&&e.indexOf("://")>-1&&-1==e.indexOf(document.domain))){var n=t.rules||t.cssRules;r(n)}}),Fx.CSS.Cache[t]=e}}),Fx.CSS.Cache={},Fx.CSS.Parsers={Color:{parse:function(t){return t.match(/^#[0-9a-f]{3,6}$/i)?t.hexToRgb(!0):(t=t.match(/(\d+),\s*(\d+),\s*(\d+)/))?[t[1],t[2],t[3]]:!1},compute:function(t,e,n){return t.map(function(r,i){return Math.round(Fx.compute(t[i],e[i],n))})},serve:function(t){return t.map(Number)}},Number:{parse:parseFloat,compute:Fx.compute,serve:function(t,e){return e?t+e:t}},String:{parse:Function.convert(!1),compute:function(t,e){return e},serve:function(t){return t}}},Fx.CSS.Parsers=new Hash(Fx.CSS.Parsers),Fx.Morph=new Class({Extends:Fx.CSS,initialize:function(t,e){this.element=this.subject=document.id(t),this.parent(e)},set:function(t){"string"==typeof t&&(t=this.search(t));for(var e in t)this.render(this.element,e,t[e],this.options.unit);return this},compute:function(t,e,n){var r={};for(var i in t)r[i]=this.parent(t[i],e[i],n);return r},start:function(t){if(!this.check(t))return this;"string"==typeof t&&(t=this.search(t));var e={},n={};for(var r in t){var i=this.prepare(this.element,r,t[r]);e[r]=i.from,n[r]=i.to}return this.parent(e,n)}}),Element.Properties.morph={set:function(t){return this.get("morph").cancel().setOptions(t),this},get:function(){var t=this.retrieve("morph");return t||(t=new Fx.Morph(this,{link:"cancel"}),this.store("morph",t)),t}},Element.implement({morph:function(t){return this.get("morph").start(t),this}}),Fx.implement({getTransition:function(){var t=this.options.transition||Fx.Transitions.Sine.easeInOut;if("string"==typeof t){var e=t.split(":");t=Fx.Transitions,t=t[e[0]]||t[e[0].capitalize()],e[1]&&(t=t["ease"+e[1].capitalize()+(e[2]?e[2].capitalize():"")])}return t}}),Fx.Transition=function(t,e){e=Array.convert(e);var n=function(n){return t(n,e)};return Object.append(n,{easeIn:n,easeOut:function(n){return 1-t(1-n,e)},easeInOut:function(n){return(.5>=n?t(2*n,e):2-t(2*(1-n),e))/2}})},Fx.Transitions={linear:function(t){return t}},Fx.Transitions=new Hash(Fx.Transitions),Fx.Transitions.extend=function(t){for(var e in t)Fx.Transitions[e]=new Fx.Transition(t[e])},Fx.Transitions.extend({Pow:function(t,e){return Math.pow(t,e&&e[0]||6)},Expo:function(t){return Math.pow(2,8*(t-1))},Circ:function(t){return 1-Math.sin(Math.acos(t))},Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Back:function(t,e){return e=e&&e[0]||1.618,Math.pow(t,2)*((e+1)*t-e)},Bounce:function(t){for(var e,n=0,r=1;1;n+=r,r/=2)if(t>=(7-4*n)/11){e=r*r-Math.pow((11-6*n-11*t)/4,2);break}return e},Elastic:function(t,e){return Math.pow(2,10*--t)*Math.cos(20*t*Math.PI*(e&&e[0]||1)/3)}}),["Quad","Cubic","Quart","Quint"].each(function(t,e){Fx.Transitions[t]=new Fx.Transition(function(t){return Math.pow(t,e+2)})}),Fx.Tween=new Class({Extends:Fx.CSS,initialize:function(t,e){this.element=this.subject=document.id(t),this.parent(e)},set:function(t,e){return 1==arguments.length&&(e=t,t=this.property||this.options.property),this.render(this.element,t,e,this.options.unit),this},start:function(t,e,n){if(!this.check(t,e,n))return this;var r=Array.flatten(arguments);this.property=this.options.property||r.shift();var i=this.prepare(this.element,this.property,r);return this.parent(i.from,i.to)}}),Element.Properties.tween={set:function(t){return this.get("tween").cancel().setOptions(t),this},get:function(){var t=this.retrieve("tween");return t||(t=new Fx.Tween(this,{link:"cancel"}),this.store("tween",t)),t}},Element.implement({tween:function(t,e,n){return this.get("tween").start(t,e,n),this},fade:function(){var t,e,n=this.get("tween"),r=["opacity"].append(arguments);switch(null==r[1]&&(r[1]="toggle"),r[1]){case"in":t="start",r[1]=1;break;case"out":t="start",r[1]=0;break;case"show":t="set",r[1]=1;break;case"hide":t="set",r[1]=0;break;case"toggle":var i=this.retrieve("fade:flag",1==this.getStyle("opacity"));t="start",r[1]=i?0:1,this.store("fade:flag",!i),e=!0;break;default:t="start"}e||this.eliminate("fade:flag"),n[t].apply(n,r);var s=r[r.length-1];return"set"==t?this.setStyle("visibility",0==s?"hidden":"visible"):0!=s?n.$chain.length?n.chain(function(){this.element.setStyle("visibility","visible"),this.callChain()}):this.setStyle("visibility","visible"):n.chain(function(){this.element.getStyle("opacity")||(this.element.setStyle("visibility","hidden"),this.callChain())}),this},highlight:function(t,e){e||(e=this.retrieve("highlight:original",this.getStyle("background-color")),e="transparent"==e?"#fff":e);var n=this.get("tween");return n.start("background-color",t||"#ffff88",e).chain(function(){this.setStyle("background-color",this.retrieve("highlight:original")),n.callChain()}.bind(this)),this}}),function(){var t=function(){},e="onprogress"in new Browser.Request,n=this.Request=new Class({Implements:[Chain,Events,Options,Class.Thenable],options:{url:"",data:"",headers:{"X-Requested-With":"XMLHttpRequest",Accept:"text/javascript, text/html, application/xml, text/xml, */*"},async:!0,format:!1,method:"post",link:"ignore",isSuccess:null,emulation:!0,urlEncoded:!0,encoding:"utf-8",evalScripts:!1,evalResponse:!1,timeout:0,noCache:!1},initialize:function(t){this.xhr=new Browser.Request,this.setOptions(t),this.headers=this.options.headers},onStateChange:function(){var n=this.xhr;4==n.readyState&&this.running&&(this.running=!1,this.status=0,Function.attempt(function(){var t=n.status;this.status=1223==t?204:t}.bind(this)),n.onreadystatechange=t,e&&(n.onprogress=n.onloadstart=t),this.timer&&(clearTimeout(this.timer),delete this.timer),this.response={text:this.xhr.responseText||"",xml:this.xhr.responseXML},this.options.isSuccess.call(this,this.status)?this.success(this.response.text,this.response.xml):this.failure())},isSuccess:function(){var t=this.status;return t>=200&&300>t},isRunning:function(){return!!this.running},processScripts:function(t){return this.options.evalResponse||/(ecma|java)script/.test(this.getHeader("Content-type"))?Browser.exec(t):t.stripScripts(this.options.evalScripts)},success:function(t,e){this.onSuccess(this.processScripts(t),e),this.resolve({text:t,xml:e})},onSuccess:function(){this.fireEvent("complete",arguments).fireEvent("success",arguments).callChain()},failure:function(){this.onFailure(),this.reject({reason:"failure",xhr:this.xhr})},onFailure:function(){this.fireEvent("complete").fireEvent("failure",this.xhr)},loadstart:function(t){this.fireEvent("loadstart",[t,this.xhr])},progress:function(t){this.fireEvent("progress",[t,this.xhr])},timeout:function(){this.fireEvent("timeout",this.xhr),this.reject({reason:"timeout",xhr:this.xhr})},setHeader:function(t,e){return this.headers[t]=e,this},getHeader:function(t){return Function.attempt(function(){return this.xhr.getResponseHeader(t)}.bind(this))},check:function(){if(!this.running)return!0;switch(this.options.link){case"cancel":return this.cancel(),!0;case"chain":return this.chain(this.caller.pass(arguments,this)),!1}return!1},send:function(t){if(!this.check(t))return this;this.options.isSuccess=this.options.isSuccess||this.isSuccess,this.running=!0;var n=typeOf(t);("string"==n||"element"==n)&&(t={data:t});var r=this.options;t=Object.append({data:r.data,url:r.url,method:r.method},t);var i=t.data,s=String(t.url),o=t.method.toLowerCase();switch(typeOf(i)){case"element":i=document.id(i).toQueryString();break;case"object":case"hash":i=Object.toQueryString(i)}if(this.options.format){var a="format="+this.options.format;i=i?a+"&"+i:a}if(this.options.emulation&&!["get","post"].contains(o)){var u="_method="+o;i=i?u+"&"+i:u,o="post"}if(this.options.urlEncoded&&["post","put"].contains(o)){var c=this.options.encoding?"; charset="+this.options.encoding:"";this.headers["Content-type"]="application/x-www-form-urlencoded"+c}s||(s=document.location.pathname);var l=s.lastIndexOf("/");l>-1&&(l=s.indexOf("#"))>-1&&(s=s.substr(0,l)),this.options.noCache&&(s+=(s.indexOf("?")>-1?"&":"?")+String.uniqueID()),!i||"get"!=o&&"delete"!=o||(s+=(s.indexOf("?")>-1?"&":"?")+i,i=null);var h=this.xhr;return e&&(h.onloadstart=this.loadstart.bind(this),h.onprogress=this.progress.bind(this)),h.open(o.toUpperCase(),s,this.options.async,this.options.user,this.options.password),(this.options.user||this.options.withCredentials)&&"withCredentials"in h&&(h.withCredentials=!0),h.onreadystatechange=this.onStateChange.bind(this),Object.each(this.headers,function(t,e){try{h.setRequestHeader(e,t)}catch(n){this.fireEvent("exception",[e,t]),this.reject({reason:"exception",xhr:h,exception:n})}},this),"pending"!==this.getThenableState()&&this.resetThenable({reason:"send"}),this.fireEvent("request"),h.send(i),this.options.async?this.options.timeout&&(this.timer=this.timeout.delay(this.options.timeout,this)):this.onStateChange(),this},cancel:function(){if(!this.running)return this;this.running=!1;var n=this.xhr;return n.abort(),this.timer&&(clearTimeout(this.timer),delete this.timer),n.onreadystatechange=t,e&&(n.onprogress=n.onloadstart=t),this.xhr=new Browser.Request,this.fireEvent("cancel"),this.reject({reason:"cancel",xhr:n}),this}}),r={};["get","post","put","delete","patch","head","GET","POST","PUT","DELETE","PATCH","HEAD"].each(function(t){r[t]=function(e){var n={method:t};return null!=e&&(n.data=e),this.send(n)}}),n.implement(r),Element.Properties.send={set:function(t){var e=this.get("send").cancel();return e.setOptions(t),this},get:function(){var t=this.retrieve("send");return t||(t=new n({data:this,link:"cancel",method:this.get("method")||"post",url:this.get("action")}),this.store("send",t)),t}},Element.implement({send:function(t){var e=this.get("send");return e.send({data:this,url:t||e.options.url}),this}})}(),Request.HTML=new Class({Extends:Request,options:{update:!1,append:!1,evalScripts:!0,filter:!1,headers:{Accept:"text/html, application/xml, text/xml, */*"}},success:function(t){var e=this.options,n=this.response;n.html=t.stripScripts(function(t){n.javascript=t});var r=n.html.match(/<body[^>]*>([\s\S]*?)<\/body>/i);r&&(n.html=r[1]);var i=new Element("div").set("html",n.html);if(n.tree=i.childNodes,n.elements=i.getElements(e.filter||"*"),e.filter&&(n.tree=n.elements),e.update){var s=document.id(e.update).empty();e.filter?s.adopt(n.elements):s.set("html",n.html)}else if(e.append){var o=document.id(e.append);e.filter?n.elements.reverse().inject(o):o.adopt(i.getChildren())}e.evalScripts&&Browser.exec(n.javascript),this.onSuccess(n.tree,n.elements,n.html,n.javascript),this.resolve({tree:n.tree,elements:n.elements,html:n.html,javascript:n.javascript})}}),Element.Properties.load={set:function(t){var e=this.get("load").cancel();return e.setOptions(t),this},get:function(){var t=this.retrieve("load");return t||(t=new Request.HTML({data:this,link:"cancel",update:this,method:"get"}),this.store("load",t)),t}},Element.implement({load:function(){return this.get("load").send(Array.link(arguments,{data:Type.isObject,url:Type.isString})),this}}),"undefined"==typeof JSON&&(this.JSON={}),JSON=new Hash({stringify:JSON.stringify,parse:JSON.parse}),function(){var special={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},escape=function(t){return special[t]||"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)};JSON.validate=function(t){return t=t.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""),/^[\],:{}\s]*$/.test(t)},JSON.encode=JSON.stringify?function(t){return JSON.stringify(t)}:function(t){switch(t&&t.toJSON&&(t=t.toJSON()),typeOf(t)){case"string":return'"'+t.replace(/[\x00-\x1f\\"]/g,escape)+'"';case"array":return"["+t.map(JSON.encode).clean()+"]";case"object":case"hash":var e=[];return Object.each(t,function(t,n){var r=JSON.encode(t);r&&e.push(JSON.encode(n)+":"+r)}),"{"+e+"}";case"number":case"boolean":return""+t;case"null":return"null"}return null},JSON.secure=!0,JSON.secure=!1,JSON.decode=function(string,secure){if(!string||"string"!=typeOf(string))return null;if(null==secure&&(secure=JSON.secure),secure){if(JSON.parse)return JSON.parse(string);if(!JSON.validate(string))throw new Error("JSON could not decode the input; security is enabled and the value is not secure.")}return eval("("+string+")")}}(),Request.JSON=new Class({Extends:Request,options:{secure:!0},initialize:function(t){this.parent(t),Object.append(this.headers,{Accept:"application/json","X-Request":"JSON"})},success:function(t){var e;try{e=this.response.json=JSON.decode(t,this.options.secure)}catch(n){return void this.fireEvent("error",[t,n])}null==e?this.failure():(this.onSuccess(e,t),this.resolve({json:e,text:t}))}});var Cookie=new Class({Implements:Options,options:{path:"/",domain:!1,duration:!1,secure:!1,document:document,encode:!0,httpOnly:!1},initialize:function(t,e){this.key=t,this.setOptions(e)},write:function(t){if(this.options.encode&&(t=encodeURIComponent(t)),this.options.domain&&(t+="; domain="+this.options.domain),this.options.path&&(t+="; path="+this.options.path),this.options.duration){var e=new Date;e.setTime(e.getTime()+24*this.options.duration*60*60*1e3),t+="; expires="+e.toGMTString()}return this.options.secure&&(t+="; secure"),this.options.httpOnly&&(t+="; HttpOnly"),this.options.document.cookie=this.key+"="+t,this},read:function(){var t=this.options.document.cookie.match("(?:^|;)\\s*"+this.key.escapeRegExp()+"=([^;]*)");return t?decodeURIComponent(t[1]):null},dispose:function(){return new Cookie(this.key,Object.merge({},this.options,{duration:-1})).write(""),this}});Cookie.write=function(t,e,n){return new Cookie(t,n).write(e)},Cookie.read=function(t){return new Cookie(t).read()},Cookie.dispose=function(t,e){return new Cookie(t,e).dispose()},function(t,e){var n,r,i,s,o=[],a=e.createElement("div"),u=function(){clearTimeout(s),n||(Browser.loaded=n=!0,e.removeListener("DOMContentLoaded",u).removeListener("readystatechange",c),e.fireEvent("domready"),t.fireEvent("domready")),e=t=a=null},c=function(){for(var t=o.length;t--;)if(o[t]())return u(),!0;return!1},l=function(){clearTimeout(s),c()||(s=setTimeout(l,10))};e.addListener("DOMContentLoaded",u);var h=function(){try{return a.doScroll(),!0}catch(t){}return!1};a.doScroll&&!h()&&(o.push(h),i=!0),e.readyState&&o.push(function(){
var t=e.readyState;return"loaded"==t||"complete"==t}),"onreadystatechange"in e?e.addListener("readystatechange",c):i=!0,i&&l(),Element.Events.domready={onAdd:function(t){n&&t.call(this)}},Element.Events.load={base:"load",onAdd:function(e){r&&this==t&&e.call(this)},condition:function(){return this==t&&(u(),delete Element.Events.load),!0}},t.addEvent("load",function(){r=!0})}(window,document);
//MooTools More, <http://mootools.net/more>. Copyright (c) 2006-2009 Aaron Newton <http://clientcide.com/>, Valerio Proietti <http://mad4milk.net> & the MooTools team <http://mootools.net/developers>, MIT Style License.

MooTools.More = {
	'version': '1.2.3.1'
};

/*
Script: Fx.Scroll.js
	Effect to smoothly scroll any element, including the window.

	License:
		MIT-style license.

	Authors:
		Valerio Proietti
*/

Fx.Scroll = new Class({

	Extends: Fx,

	options: {
		offset: {x: 0, y: 0},
		wheelStops: true
	},

	initialize: function(element, options){
		this.element = this.subject = document.id(element);
		this.parent(options);
		var cancel = this.cancel.bind(this, false);

		if ($type(this.element) != 'element') this.element = document.id(this.element.getDocument().body);

		var stopper = this.element;

		if (this.options.wheelStops){
			this.addEvent('start', function(){
				stopper.addEvent('mousewheel', cancel);
			}, true);
			this.addEvent('complete', function(){
				stopper.removeEvent('mousewheel', cancel);
			}, true);
		}
	},

	set: function(){
		var now = Array.flatten(arguments);
		this.element.scrollTo(now[0], now[1]);
	},

	compute: function(from, to, delta){
		return [0, 1].map(function(i){
			return Fx.compute(from[i], to[i], delta);
		});
	},

	start: function(x, y){
		if (!this.check(x, y)) return this;
		var offsetSize = this.element.getSize(), scrollSize = this.element.getScrollSize();
		var scroll = this.element.getScroll(), values = {x: x, y: y};
		for (var z in values){
			var max = scrollSize[z] - offsetSize[z];
			if ($chk(values[z])) values[z] = ($type(values[z]) == 'number') ? values[z].limit(0, max) : max;
			else values[z] = scroll[z];
			values[z] += this.options.offset[z];
		}
		return this.parent([scroll.x, scroll.y], [values.x, values.y]);
	},

	toTop: function(){
		return this.start(false, 0);
	},

	toLeft: function(){
		return this.start(0, false);
	},

	toRight: function(){
		return this.start('right', false);
	},

	toBottom: function(){
		return this.start(false, 'bottom');
	},

	toElement: function(el){
		var position = document.id(el).getPosition(this.element);
		return this.start(position.x, position.y);
	},

	scrollIntoView: function(el, axes, offset){
		axes = axes ? $splat(axes) : ['x','y'];
		var to = {};
		el = document.id(el);
		var pos = el.getPosition(this.element);
		var size = el.getSize();
		var scroll = this.element.getScroll();
		var containerSize = this.element.getSize();
		var edge = {
			x: pos.x + size.x,
			y: pos.y + size.y
		};
		['x','y'].each(function(axis) {
			if (axes.contains(axis)) {
				if (edge[axis] > scroll[axis] + containerSize[axis]) to[axis] = edge[axis] - containerSize[axis];
				if (pos[axis] < scroll[axis]) to[axis] = pos[axis];
			}
			if (to[axis] == null) to[axis] = scroll[axis];
			if (offset && offset[axis]) to[axis] = to[axis] + offset[axis];
		}, this);
		if (to.x != scroll.x || to.y != scroll.y) this.start(to.x, to.y);
		return this;
	}

});

/*
Script: Drag.js
	The base Drag Class. Can be used to drag and resize Elements using mouse events.

	License:
		MIT-style license.

	Authors:
		Valerio Proietti
		Tom Occhinno
		Jan Kassens
*/

var Drag = new Class({

	Implements: [Events, Options],

	options: {/*
		onBeforeStart: $empty(thisElement),
		onStart: $empty(thisElement, event),
		onSnap: $empty(thisElement)
		onDrag: $empty(thisElement, event),
		onCancel: $empty(thisElement),
		onComplete: $empty(thisElement, event),*/
		snap: 6,
		unit: 'px',
		grid: false,
		style: true,
		limit: false,
		handle: false,
		invert: false,
		preventDefault: false,
		modifiers: {x: 'left', y: 'top'}
	},

	initialize: function(){
		var params = Array.link(arguments, {'options': Object.type, 'element': $defined});
		this.element = document.id(params.element);
		this.document = this.element.getDocument();
		this.setOptions(params.options || {});
		var htype = $type(this.options.handle);
		this.handles = ((htype == 'array' || htype == 'collection') ? $$(this.options.handle) : document.id(this.options.handle)) || this.element;
		this.mouse = {'now': {}, 'pos': {}};
		this.value = {'start': {}, 'now': {}};

		this.selection = (Browser.Engine.trident) ? 'selectstart' : 'mousedown';

		this.bound = {
			start: this.start.bind(this),
			check: this.check.bind(this),
			drag: this.drag.bind(this),
			stop: this.stop.bind(this),
			cancel: this.cancel.bind(this),
			eventStop: $lambda(false)
		};
		this.attach();
	},

	attach: function(){
		this.handles.addEvent('mousedown', this.bound.start);
		return this;
	},

	detach: function(){
		this.handles.removeEvent('mousedown', this.bound.start);
		return this;
	},

	start: function(event){
		if (this.options.preventDefault) event.preventDefault();
		this.mouse.start = event.page;
		this.fireEvent('beforeStart', this.element);
		var limit = this.options.limit;
		this.limit = {x: [], y: []};
		for (var z in this.options.modifiers){
			if (!this.options.modifiers[z]) continue;
			if (this.options.style) this.value.now[z] = this.element.getStyle(this.options.modifiers[z]).toInt();
			else this.value.now[z] = this.element[this.options.modifiers[z]];
			if (this.options.invert) this.value.now[z] *= -1;
			this.mouse.pos[z] = event.page[z] - this.value.now[z];
			if (limit && limit[z]){
				for (var i = 2; i--; i){
					if ($chk(limit[z][i])) this.limit[z][i] = $lambda(limit[z][i])();
				}
			}
		}
		if ($type(this.options.grid) == 'number') this.options.grid = {x: this.options.grid, y: this.options.grid};
		this.document.addEvents({mousemove: this.bound.check, mouseup: this.bound.cancel});
		this.document.addEvent(this.selection, this.bound.eventStop);
	},

	check: function(event){
		if (this.options.preventDefault) event.preventDefault();
		var distance = Math.round(Math.sqrt(Math.pow(event.page.x - this.mouse.start.x, 2) + Math.pow(event.page.y - this.mouse.start.y, 2)));
		if (distance > this.options.snap){
			this.cancel();
			this.document.addEvents({
				mousemove: this.bound.drag,
				mouseup: this.bound.stop
			});
			this.fireEvent('start', [this.element, event]).fireEvent('snap', this.element);
		}
	},

	drag: function(event){
		if (this.options.preventDefault) event.preventDefault();
		this.mouse.now = event.page;
		for (var z in this.options.modifiers){
			if (!this.options.modifiers[z]) continue;
			this.value.now[z] = this.mouse.now[z] - this.mouse.pos[z];
			if (this.options.invert) this.value.now[z] *= -1;
			if (this.options.limit && this.limit[z]){
				if ($chk(this.limit[z][1]) && (this.value.now[z] > this.limit[z][1])){
					this.value.now[z] = this.limit[z][1];
				} else if ($chk(this.limit[z][0]) && (this.value.now[z] < this.limit[z][0])){
					this.value.now[z] = this.limit[z][0];
				}
			}
			if (this.options.grid[z]) this.value.now[z] -= ((this.value.now[z] - (this.limit[z][0]||0)) % this.options.grid[z]);
			if (this.options.style) this.element.setStyle(this.options.modifiers[z], this.value.now[z] + this.options.unit);
			else this.element[this.options.modifiers[z]] = this.value.now[z];
		}
		this.fireEvent('drag', [this.element, event]);
	},

	cancel: function(event){
		this.document.removeEvent('mousemove', this.bound.check);
		this.document.removeEvent('mouseup', this.bound.cancel);
		if (event){
			this.document.removeEvent(this.selection, this.bound.eventStop);
			this.fireEvent('cancel', this.element);
		}
	},

	stop: function(event){
		this.document.removeEvent(this.selection, this.bound.eventStop);
		this.document.removeEvent('mousemove', this.bound.drag);
		this.document.removeEvent('mouseup', this.bound.stop);
		if (event) this.fireEvent('complete', [this.element, event]);
	}

});

Element.implement({

	makeResizable: function(options){
		var drag = new Drag(this, $merge({modifiers: {x: 'width', y: 'height'}}, options));
		this.store('resizer', drag);
		return drag.addEvent('drag', function(){
			this.fireEvent('resize', drag);
		}.bind(this));
	}

});




var Asset = {

	javascript: function(source, properties){
		properties = $extend({
			onload: $empty,
			document: document,
			check: $lambda(true)
		}, properties);
		
		if (properties.onLoad) {
			properties.onload = properties.onLoad;
			delete properties.onLoad;
		}
		var script = new Element('script', {src: source, type: 'text/javascript'});

		var load = properties.onload.bind(script), 
			check = properties.check, 
			doc = properties.document;
		delete properties.onload;
		delete properties.check;
		delete properties.document;

		script.addEvents({
			load: load,
			readystatechange: function(){
				if (['loaded', 'complete'].contains(this.readyState)) load();
			}
		}).set(properties);

		if (Browser.Engine.webkit419) var checker = (function(){
			if (!$try(check)) return;
			$clear(checker);
			load();
		}).periodical(50);

		return script.inject(doc.head);
	},

	css: function(source, properties){
		properties = properties || {};
		var onload = properties.onload || properties.onLoad;
		if (onload) {
			properties.events = properties.events || {};
			properties.events.load = onload;
			delete properties.onload;
			delete properties.onLoad;
		}
		return new Element('link', $merge({
			rel: 'stylesheet',
			media: 'screen',
			type: 'text/css',
			href: source
		}, properties)).inject(document.head);
	},

	image: function(source, properties){
		properties = $merge({
			onload: $empty,
			onabort: $empty,
			onerror: $empty
		}, properties);
		var image = new Image();
		var element = document.id(image) || new Element('img');
		['load', 'abort', 'error'].each(function(name){
			var type = 'on' + name;
			var cap = name.capitalize();
			if (properties['on' + cap]) {
				properties[type] = properties['on' + cap];
				delete properties['on' + cap];
			}
			var event = properties[type];
			delete properties[type];
			image[type] = function(){
				if (!image) return;
				if (!element.parentNode){
					element.width = image.width;
					element.height = image.height;
				}
				image = image.onload = image.onabort = image.onerror = null;
				event.delay(1, element, element);
				element.fireEvent(name, element, 1);
			};
		});
		image.src = element.src = source;
		if (image && image.complete) image.onload.delay(1);
		return element.set(properties);
	},

	images: function(sources, options){
		options = $merge({
			onComplete: $empty,
			onProgress: $empty,
			onError: $empty,
			properties: {}
		}, options);
		sources = $splat(sources);
		var images = [];
		var counter = 0;
		return new Elements(sources.map(function(source, index){
			return Asset.image(source, $extend(options.properties, {
				onload: function(){
					options.onProgress.call(this, counter, index);
					counter++;
					if (counter == sources.length) options.onComplete();
				},
				onerror: function(){
					options.onError.call(this, counter, index);
					counter++;
					if (counter == sources.length) options.onComplete();
				}
			}));
		}));
	}

};


//MooTools More, <http://mootools.net/more>. Copyright (c) 2006-2009 Aaron Newton <http://clientcide.com/>, Valerio Proietti <http://mad4milk.net> & the MooTools team <http://mootools.net/developers>, MIT Style License.

/*
---

script: More.js

name: More

description: MooTools More

license: MIT-style license

requires:
  - Core/MooTools

provides: [MooTools.More]

...
*/

MooTools.More = {
	'version': '1.2.5.1',
	'build': '254884f2b83651bf95260eed5c6cceb838e22d8e'
};


/*
---

script: Color.js

name: Color

description: Class for creating and manipulating colors in JavaScript. Supports HSB -> RGB Conversions and vice versa.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Array
  - Core/String
  - Core/Number
  - Core/Hash
  - Core/Function
  - Core/$util

provides: [Color]

...
*/

var Color = new Native({

	initialize: function(color, type){
		if (arguments.length >= 3){
			type = 'rgb'; color = Array.slice(arguments, 0, 3);
		} else if (typeof color == 'string'){
			if (color.match(/rgb/)) color = color.rgbToHex().hexToRgb(true);
			else if (color.match(/hsb/)) color = color.hsbToRgb();
			else color = color.hexToRgb(true);
		}
		type = type || 'rgb';
		switch (type){
			case 'hsb':
				var old = color;
				color = color.hsbToRgb();
				color.hsb = old;
			break;
			case 'hex': color = color.hexToRgb(true); break;
		}
		color.rgb = color.slice(0, 3);
		color.hsb = color.hsb || color.rgbToHsb();
		color.hex = color.rgbToHex();
		return $extend(color, this);
	}

});

Color.implement({

	mix: function(){
		var colors = Array.slice(arguments);
		var alpha = ($type(colors.getLast()) == 'number') ? colors.pop() : 50;
		var rgb = this.slice();
		colors.each(function(color){
			color = new Color(color);
			for (var i = 0; i < 3; i++) rgb[i] = Math.round((rgb[i] / 100 * (100 - alpha)) + (color[i] / 100 * alpha));
		});
		return new Color(rgb, 'rgb');
	},

	invert: function(){
		return new Color(this.map(function(value){
			return 255 - value;
		}));
	},

	setHue: function(value){
		return new Color([value, this.hsb[1], this.hsb[2]], 'hsb');
	},

	setSaturation: function(percent){
		return new Color([this.hsb[0], percent, this.hsb[2]], 'hsb');
	},

	setBrightness: function(percent){
		return new Color([this.hsb[0], this.hsb[1], percent], 'hsb');
	}

});

var $RGB = function(r, g, b){
	return new Color([r, g, b], 'rgb');
};

var $HSB = function(h, s, b){
	return new Color([h, s, b], 'hsb');
};

var $HEX = function(hex){
	return new Color(hex, 'hex');
};

Array.implement({

	rgbToHsb: function(){
		var red = this[0],
				green = this[1],
				blue = this[2],
				hue = 0;
		var max = Math.max(red, green, blue),
				min = Math.min(red, green, blue);
		var delta = max - min;
		var brightness = max / 255,
				saturation = (max != 0) ? delta / max : 0;
		if(saturation != 0) {
			var rr = (max - red) / delta;
			var gr = (max - green) / delta;
			var br = (max - blue) / delta;
			if (red == max) hue = br - gr;
			else if (green == max) hue = 2 + rr - br;
			else hue = 4 + gr - rr;
			hue /= 6;
			if (hue < 0) hue++;
		}
		return [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100)];
	},

	hsbToRgb: function(){
		var br = Math.round(this[2] / 100 * 255);
		if (this[1] == 0){
			return [br, br, br];
		} else {
			var hue = this[0] % 360;
			var f = hue % 60;
			var p = Math.round((this[2] * (100 - this[1])) / 10000 * 255);
			var q = Math.round((this[2] * (6000 - this[1] * f)) / 600000 * 255);
			var t = Math.round((this[2] * (6000 - this[1] * (60 - f))) / 600000 * 255);
			switch (Math.floor(hue / 60)){
				case 0: return [br, t, p];
				case 1: return [q, br, p];
				case 2: return [p, br, t];
				case 3: return [p, q, br];
				case 4: return [t, p, br];
				case 5: return [br, p, q];
			}
		}
		return false;
	}

});

String.implement({

	rgbToHsb: function(){
		var rgb = this.match(/\d{1,3}/g);
		return (rgb) ? rgb.rgbToHsb() : null;
	},

	hsbToRgb: function(){
		var hsb = this.match(/\d{1,3}/g);
		return (hsb) ? hsb.hsbToRgb() : null;
	}

});

/*
---

script: More.js

name: More

description: MooTools More

license: MIT-style license

authors:
  - Guillermo Rauch
  - Thomas Aylott
  - Scott Kyle
  - Arian Stolwijk
  - Tim Wienk
  - Christoph Pojer
  - Aaron Newton
  - Jacob Thornton

requires:
  - Core/MooTools

provides: [MooTools.More]

...
*/

MooTools.More = {
	'version': '1.4.0.1',
	'build': 'a4244edf2aa97ac8a196fc96082dd35af1abab87'
};


/*
---

script: String.QueryString.js

name: String.QueryString

description: Methods for dealing with URI query strings.

license: MIT-style license

authors:
  - Sebastian MarkbÃ¥ge
  - Aaron Newton
  - Lennart Pilon
  - Valerio Proietti

requires:
  - Core/Array
  - Core/String
  - /MooTools.More

provides: [String.QueryString]

...
*/

String.implement({

	parseQueryString: function(decodeKeys, decodeValues){
		if (decodeKeys == null) decodeKeys = true;
		if (decodeValues == null) decodeValues = true;

		var vars = this.split(/[&;]/),
			object = {};
		if (!vars.length) return object;

		vars.each(function(val){
			var index = val.indexOf('=') + 1,
				value = index ? val.substr(index) : '',
				keys = index ? val.substr(0, index - 1).match(/([^\]\[]+|(\B)(?=\]))/g) : [val],
				obj = object;
			if (!keys) return;
			if (decodeValues) value = decodeURIComponent(value);
			keys.each(function(key, i){
				if (decodeKeys) key = decodeURIComponent(key);
				var current = obj[key];

				if (i < keys.length - 1) obj = obj[key] = current || {};
				else if (typeOf(current) == 'array') current.push(value);
				else obj[key] = current != null ? [current, value] : value;
			});
		});

		return object;
	},

	cleanQueryString: function(method){
		return this.split('&').filter(function(val){
			var index = val.indexOf('='),
				key = index < 0 ? '' : val.substr(0, index),
				value = val.substr(index + 1);

			return method ? method.call(null, key, value) : (value || value === 0);
		}).join('&');
	}

});


/*
---

script: URI.js

name: URI

description: Provides methods useful in managing the window location and uris.

license: MIT-style license

authors:
  - Sebastian MarkbÃ¥ge
  - Aaron Newton

requires:
  - Core/Object
  - Core/Class
  - Core/Class.Extras
  - Core/Element
  - /String.QueryString

provides: [URI]

...
*/

(function(){

var toString = function(){
	return this.get('value');
};

var URI = this.URI = new Class({

	Implements: Options,

	options: {
		/*base: false*/
	},

	regex: /^(?:(\w+):)?(?:\/\/(?:(?:([^:@\/]*):?([^:@\/]*))?@)?([^:\/?#]*)(?::(\d*))?)?(\.\.?$|(?:[^?#\/]*\/)*)([^?#]*)(?:\?([^#]*))?(?:#(.*))?/,
	parts: ['scheme', 'user', 'password', 'host', 'port', 'directory', 'file', 'query', 'fragment'],
	schemes: {http: 80, https: 443, ftp: 21, rtsp: 554, mms: 1755, file: 0},

	initialize: function(uri, options){
		this.setOptions(options);
		var base = this.options.base || URI.base;
		if (!uri) uri = base;

		if (uri && uri.parsed) this.parsed = Object.clone(uri.parsed);
		else this.set('value', uri.href || uri.toString(), base ? new URI(base) : false);
	},

	parse: function(value, base){
		var bits = value.match(this.regex);
		if (!bits) return false;
		bits.shift();
		return this.merge(bits.associate(this.parts), base);
	},

	merge: function(bits, base){
		if ((!bits || !bits.scheme) && (!base || !base.scheme)) return false;
		if (base){
			this.parts.every(function(part){
				if (bits[part]) return false;
				bits[part] = base[part] || '';
				return true;
			});
		}
		bits.port = bits.port || this.schemes[bits.scheme.toLowerCase()];
		bits.directory = bits.directory ? this.parseDirectory(bits.directory, base ? base.directory : '') : '/';
		return bits;
	},

	parseDirectory: function(directory, baseDirectory){
		directory = (directory.substr(0, 1) == '/' ? '' : (baseDirectory || '/')) + directory;
		if (!directory.test(URI.regs.directoryDot)) return directory;
		var result = [];
		directory.replace(URI.regs.endSlash, '').split('/').each(function(dir){
			if (dir == '..' && result.length > 0) result.pop();
			else if (dir != '.') result.push(dir);
		});
		return result.join('/') + '/';
	},

	combine: function(bits){
		return bits.value || bits.scheme + '://' +
			(bits.user ? bits.user + (bits.password ? ':' + bits.password : '') + '@' : '') +
			(bits.host || '') + (bits.port && bits.port != this.schemes[bits.scheme] ? ':' + bits.port : '') +
			(bits.directory || '/') + (bits.file || '') +
			(bits.query ? '?' + bits.query : '') +
			(bits.fragment ? '#' + bits.fragment : '');
	},

	set: function(part, value, base){
		if (part == 'value'){
			var scheme = value.match(URI.regs.scheme);
			if (scheme) scheme = scheme[1];
			if (scheme && this.schemes[scheme.toLowerCase()] == null) this.parsed = { scheme: scheme, value: value };
			else this.parsed = this.parse(value, (base || this).parsed) || (scheme ? { scheme: scheme, value: value } : { value: value });
		} else if (part == 'data'){
			this.setData(value);
		} else {
			this.parsed[part] = value;
		}
		return this;
	},

	get: function(part, base){
		switch (part){
			case 'value': return this.combine(this.parsed, base ? base.parsed : false);
			case 'data' : return this.getData();
		}
		return this.parsed[part] || '';
	},

	go: function(){
		document.location.href = this.toString();
	},

	toURI: function(){
		return this;
	},

	getData: function(key, part){
		var qs = this.get(part || 'query');
		if (!(qs || qs === 0)) return key ? null : {};
		var obj = qs.parseQueryString();
		return key ? obj[key] : obj;
	},

	setData: function(values, merge, part){
		if (typeof values == 'string'){
			var data = this.getData();
			data[arguments[0]] = arguments[1];
			values = data;
		} else if (merge){
			values = Object.merge(this.getData(), values);
		}
		return this.set(part || 'query', Object.toQueryString(values));
	},

	clearData: function(part){
		return this.set(part || 'query', '');
	},

	toString: toString,
	valueOf: toString

});

URI.regs = {
	endSlash: /\/$/,
	scheme: /^(\w+):/,
	directoryDot: /\.\/|\.$/
};

URI.base = new URI(Array.from(document.getElements('base[href]', true)).getLast(), {base: document.location});

String.implement({

	toURI: function(options){
		return new URI(this, options);
	}

});

})();

/*
---

script: Tips.js

name: Tips

description: Class for creating nice tips that follow the mouse cursor when hovering an element.

license: MIT-style license

authors:
  - Valerio Proietti
  - Christoph Pojer
  - Luis Merino

requires:
  - Core/Options
  - Core/Events
  - Core/Element.Event
  - Core/Element.Style
  - Core/Element.Dimensions
  - /MooTools.More

provides: [Tips]

...
*/

(function(){

var read = function(option, element){
	return (option) ? (typeOf(option) == 'function' ? option(element) : element.get(option)) : '';
};

this.Tips = new Class({

	Implements: [Events, Options],

	options: {/*
		id: null,
		onAttach: function(element){},
		onDetach: function(element){},
		onBound: function(coords){},*/
		onShow: function(){
			this.tip.setStyle('display', 'block');
		},
		onHide: function(){
			this.tip.setStyle('display', 'none');
		},
		title: 'title',
		text: function(element){
			return element.get('rel') || element.get('href');
		},
		showDelay: 100,
		hideDelay: 100,
		className: 'tip-wrap',
		offset: {x: 16, y: 16},
		windowPadding: {x:0, y:0},
		fixed: false,
		waiAria: true
	},

	initialize: function(){
		var params = Array.link(arguments, {
			options: Type.isObject,
			elements: function(obj){
				return obj != null;
			}
		});
		this.setOptions(params.options);
		if (params.elements) this.attach(params.elements);
		this.container = new Element('div', {'class': 'tip'});

		if (this.options.id){
			this.container.set('id', this.options.id);
			if (this.options.waiAria) this.attachWaiAria();
		}
	},

	toElement: function(){
		if (this.tip) return this.tip;

		this.tip = new Element('div', {
			'class': this.options.className,
			styles: {
				position: 'absolute',
				top: 0,
				left: 0
			}
		}).adopt(
			new Element('div', {'class': 'tip-top'}),
			this.container,
			new Element('div', {'class': 'tip-bottom'})
		);

		return this.tip;
	},

	attachWaiAria: function(){
		var id = this.options.id;
		this.container.set('role', 'tooltip');

		if (!this.waiAria){
			this.waiAria = {
				show: function(element){
					if (id) element.set('aria-describedby', id);
					this.container.set('aria-hidden', 'false');
				},
				hide: function(element){
					if (id) element.erase('aria-describedby');
					this.container.set('aria-hidden', 'true');
				}
			};
		}
		this.addEvents(this.waiAria);
	},

	detachWaiAria: function(){
		if (this.waiAria){
			this.container.erase('role');
			this.container.erase('aria-hidden');
			this.removeEvents(this.waiAria);
		}
	},

	attach: function(elements){
		$$(elements).each(function(element){
			var title = read(this.options.title, element),
				text = read(this.options.text, element);

			element.set('title', '').store('tip:native', title).retrieve('tip:title', title);
			element.retrieve('tip:text', text);
			this.fireEvent('attach', [element]);

			var events = ['enter', 'leave'];
			if (!this.options.fixed) events.push('move');

			events.each(function(value){
				var event = element.retrieve('tip:' + value);
				if (!event) event = function(event){
					this['element' + value.capitalize()].apply(this, [event, element]);
				}.bind(this);

				element.store('tip:' + value, event).addEvent('mouse' + value, event);
			}, this);
		}, this);

		return this;
	},

	detach: function(elements){
		$$(elements).each(function(element){
			['enter', 'leave', 'move'].each(function(value){
				element.removeEvent('mouse' + value, element.retrieve('tip:' + value)).eliminate('tip:' + value);
			});

			this.fireEvent('detach', [element]);

			if (this.options.title == 'title'){ // This is necessary to check if we can revert the title
				var original = element.retrieve('tip:native');
				if (original) element.set('title', original);
			}
		}, this);

		return this;
	},

	elementEnter: function(event, element){
		clearTimeout(this.timer);
		this.timer = (function(){
			this.container.empty();

			['title', 'text'].each(function(value){
				var content = element.retrieve('tip:' + value);
				var div = this['_' + value + 'Element'] = new Element('div', {
						'class': 'tip-' + value
					}).inject(this.container);
				if (content) this.fill(div, content);
			}, this);
			this.show(element);
			this.position((this.options.fixed) ? {page: element.getPosition()} : event, element);
		}).delay(this.options.showDelay, this);
	},

	elementLeave: function(event, element){
		clearTimeout(this.timer);
		this.timer = this.hide.delay(this.options.hideDelay, this, element);
		this.fireForParent(event, element);
	},

	setTitle: function(title){
		if (this._titleElement){
			this._titleElement.empty();
			this.fill(this._titleElement, title);
		}
		return this;
	},

	setText: function(text){
		if (this._textElement){
			this._textElement.empty();
			this.fill(this._textElement, text);
		}
		return this;
	},

	fireForParent: function(event, element){
		element = element.getParent();
		if (!element || element == document.body) return;
		if (element.retrieve('tip:enter')) element.fireEvent('mouseenter', event);
		else this.fireForParent(event, element);
	},

	elementMove: function(event, element){
		this.position(event);
	},

	position: function(event, element){
		if (!this.tip) document.id(this);

		var size = window.getSize(), scroll = window.getScroll(),
			tip = {x: this.tip.offsetWidth, y: this.tip.offsetHeight},
			props = {x: 'left', y: 'top'},
			bounds = {y: false, x2: false, y2: false, x: false},
			obj = {},
            offset;

		for (var z in props){
            offset = this.options.offset[z].call ? this.options.offset[z].call(this, this.tip, element) : this.options.offset[z];
			obj[props[z]] = event.page[z] + offset;
			if (obj[props[z]] < 0) bounds[z] = true;
			if ((obj[props[z]] + tip[z] - scroll[z]) > size[z] - this.options.windowPadding[z]){
				obj[props[z]] = event.page[z] - offset - tip[z];
				bounds[z+'2'] = true;
			}
		}

		this.fireEvent('bound', bounds);
		this.tip.setStyles(obj);
	},

	fill: function(element, contents){
		if (typeof contents == 'string') element.set('html', contents);
		else element.adopt(contents);
	},

	show: function(element){
		if (!this.tip) document.id(this);
		if (!this.tip.getParent()) this.tip.inject(document.body);
		this.fireEvent('show', [this.tip, element]);
	},

	hide: function(element){
		if (!this.tip) document.id(this);
		this.fireEvent('hide', [this.tip, element]);
	}

});

})();


// CSS3 animations
Element.Styles.MozTransform = "rotate(@deg) scale(@)";
Element.Styles.MsTransform = "rotate(@deg) scale(@)";
Element.Styles.OTransform = "rotate(@deg) scale(@)";
Element.Styles.WebkitTransform = "rotate(@deg) scale(@)";

Object.append(Fx.CSS.Parsers, {

    TransformScale: {
        parse: function(value) {
            return ((value = value.match(/^scale\((([0-9]*\.)?[0-9]+)\)$/i))) ? parseFloat(value[1]) : false;
        },
        compute: function(from, to, delta) {
            return Fx.compute(from, to, delta);
        },
        serve: function(value) {
            return 'scale(' + value + ')';
        }
    }

});

var getTransformProperty = function () {
	var test_properties = {
		computed: ['transformProperty', 'WebkitTransform', 'MozTransform', 'OTransform', 'msTransform'],
		raw: ['transform', '-webkit-transform', '-moz-transform', '-o-transform', 'msTransform']	
	};
	var testEl = new Element("div");
	var property = null;
	var raw_property = null;
    property = test_properties.computed.some(function(el, index) {
        var test = el in testEl.style;
        if (test) {
            raw_property = test_properties.raw[index];
        }
        return test;
    });
	return raw_property;
};

/*
 ---

 script: Object.Extras.js

 name: Object.Extras

 description: Extra Object generics, like getFromPath which allows a path notation to child elements.

 license: MIT-style license

 authors:
 - Aaron Newton

 requires:
 - Core/Object
 - /MooTools.More

 provides: [Object.Extras]

 ...
 */

(function(){

	var defined = function(value){
		return value != null;
	};

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	Object.extend({

		getFromPath: function(source, parts){
			if (typeof parts == 'string') parts = parts.split('.');
			for (var i = 0, l = parts.length; i < l; i++){
				if (hasOwnProperty.call(source, parts[i])) source = source[parts[i]];
				else return null;
			}
			return source;
		},

		cleanValues: function(object, method){
			method = method || defined;
			for (var key in object) if (!method(object[key])){
				delete object[key];
			}
			return object;
		},

		erase: function(object, key){
			if (hasOwnProperty.call(object, key)) delete object[key];
			return object;
		},

		run: function(object){
			var args = Array.slice(arguments, 1);
			for (var key in object) if (object[key].apply){
				object[key].apply(object, args);
			}
			return object;
		}

	});

})();

/*
 ---

 script: Locale.js

 name: Locale

 description: Provides methods for localization.

 license: MIT-style license

 authors:
 - Aaron Newton
 - Arian Stolwijk

 requires:
 - Core/Events
 - /Object.Extras
 - /MooTools.More

 provides: [Locale, Lang]

 ...
 */

(function(){

	var current = null,
		locales = {},
		inherits = {};

	var getSet = function(set){
		if (instanceOf(set, Locale.Set)) return set;
		else return locales[set];
	};

	var Locale = this.Locale = {

		define: function(locale, set, key, value){
			var name;
			if (instanceOf(locale, Locale.Set)){
				name = locale.name;
				if (name) locales[name] = locale;
			} else {
				name = locale;
				if (!locales[name]) locales[name] = new Locale.Set(name);
				locale = locales[name];
			}

			if (set) locale.define(set, key, value);



			if (!current) current = locale;

			return locale;
		},

		use: function(locale){
			locale = getSet(locale);

			if (locale){
				current = locale;

				this.fireEvent('change', locale);


			}

			return this;
		},

		getCurrent: function(){
			return current;
		},

		get: function(key, args){
			return (current) ? current.get(key, args) : '';
		},

		inherit: function(locale, inherits, set){
			locale = getSet(locale);

			if (locale) locale.inherit(inherits, set);
			return this;
		},

		list: function(){
			return Object.keys(locales);
		}

	};

	Object.append(Locale, new Events);

	Locale.Set = new Class({

		sets: {},

		inherits: {
			locales: [],
			sets: {}
		},

		initialize: function(name){
			this.name = name || '';
		},

		define: function(set, key, value){
			var defineData = this.sets[set];
			if (!defineData) defineData = {};

			if (key){
				if (typeOf(key) == 'object') defineData = Object.merge(defineData, key);
				else defineData[key] = value;
			}
			this.sets[set] = defineData;

			return this;
		},

		get: function(key, args, _base){
			var value = Object.getFromPath(this.sets, key);
			if (value != null){
				var type = typeOf(value);
				if (type == 'function') value = value.apply(null, Array.from(args));
				else if (type == 'object') value = Object.clone(value);
				return value;
			}

			// get value of inherited locales
			var index = key.indexOf('.'),
				set = index < 0 ? key : key.substr(0, index),
				names = (this.inherits.sets[set] || []).combine(this.inherits.locales).include('en-US');
			if (!_base) _base = [];

			for (var i = 0, l = names.length; i < l; i++){
				if (_base.contains(names[i])) continue;
				_base.include(names[i]);

				var locale = locales[names[i]];
				if (!locale) continue;

				value = locale.get(key, args, _base);
				if (value != null) return value;
			}

			return '';
		},

		inherit: function(names, set){
			names = Array.from(names);

			if (set && !this.inherits.sets[set]) this.inherits.sets[set] = [];

			var l = names.length;
			while (l--) (set ? this.inherits.sets[set] : this.inherits.locales).unshift(names[l]);

			return this;
		}

	});



})();


/*
 ---

 name: Locale.ru-RU-unicode.Date

 description: Date messages for Russian (utf-8).

 license: MIT-style license

 authors:
 - Evstigneev Pavel
 - Kuryanovich Egor

 requires:
 - /Locale

 provides: [Locale.ru-RU.Date]

 ...
 */

(function(){

// Russian language pluralization rules, taken from CLDR project, http://unicode.org/cldr/
// one -> n mod 10 is 1 and n mod 100 is not 11;
// few -> n mod 10 in 2..4 and n mod 100 not in 12..14;
// many -> n mod 10 is 0 or n mod 10 in 5..9 or n mod 100 in 11..14;
// other -> everything else (example 3.14)
	var pluralize = function (n, one, few, many, other){
		var modulo10 = n % 10,
			modulo100 = n % 100;

		if (modulo10 == 1 && modulo100 != 11){
			return one;
		} else if ((modulo10 == 2 || modulo10 == 3 || modulo10 == 4) && !(modulo100 == 12 || modulo100 == 13 || modulo100 == 14)){
			return few;
		} else if (modulo10 == 0 || (modulo10 == 5 || modulo10 == 6 || modulo10 == 7 || modulo10 == 8 || modulo10 == 9) || (modulo100 == 11 || modulo100 == 12 || modulo100 == 13 || modulo100 == 14)){
			return many;
		} else {
			return other;
		}
	};

	Locale.define('ru-RU', 'Date', {

		months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
		months_abbr: ['янв', 'февр', 'март', 'апр', 'май','июнь','июль','авг','сент','окт','нояб','дек'],
		days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
		days_abbr: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],

		// Culture's date order: DD.MM.YYYY
		dateOrder: ['date', 'month', 'year'],
		shortDate: '%d.%m.%Y',
		shortTime: '%H:%M',
		AM: 'AM',
		PM: 'PM',
		firstDayOfWeek: 1,

		// Date.Extras
		ordinal: '',

		lessThanMinuteAgo: 'меньше минуты назад',
		minuteAgo: 'минуту назад',
		minutesAgo: function(delta){ return '{delta} ' + pluralize(delta, 'минуту', 'минуты', 'минут') + ' назад'; },
		hourAgo: 'час назад',
		hoursAgo: function(delta){ return '{delta} ' + pluralize(delta, 'час', 'часа', 'часов') + ' назад'; },
		dayAgo: 'вчера',
		daysAgo: function(delta){ return '{delta} ' + pluralize(delta, 'день', 'дня', 'дней') + ' назад'; },
		weekAgo: 'неделю назад',
		weeksAgo: function(delta){ return '{delta} ' + pluralize(delta, 'неделя', 'недели', 'недель') + ' назад'; },
		monthAgo: 'месяц назад',
		monthsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'месяц', 'месяца', 'месецев') + ' назад'; },
		yearAgo: 'год назад',
		yearsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'год', 'года', 'лет') + ' назад'; },

		lessThanMinuteUntil: 'меньше чем через минуту',
		minuteUntil: 'через минуту',
		minutesUntil: function(delta){ return 'через {delta} ' + pluralize(delta, 'час', 'часа', 'часов') + ''; },
		hourUntil: 'через час',
		hoursUntil: function(delta){ return 'через {delta} ' + pluralize(delta, 'час', 'часа', 'часов') + ''; },
		dayUntil: 'завтра',
		daysUntil: function(delta){ return 'через {delta} ' + pluralize(delta, 'день', 'дня', 'дней') + ''; },
		weekUntil: 'через неделю',
		weeksUntil: function(delta){ return 'через {delta} ' + pluralize(delta, 'неделю', 'недели', 'недель') + ''; },
		monthUntil: 'через месяц',
		monthsUntil: function(delta){ return 'через {delta} ' + pluralize(delta, 'месяц', 'месяца', 'месецев') + ''; },
		yearUntil: 'через',
		yearsUntil: function(delta){ return 'через {delta} ' + pluralize(delta, 'год', 'года', 'лет') + ''; }

	});



})();
/*
 ---

 script: Date.js

 name: Date

 description: Extends the Date native object to include methods useful in managing dates.

 license: MIT-style license

 authors:
 - Aaron Newton
 - Nicholas Barthelemy - https://svn.nbarthelemy.com/date-js/
 - Harald Kirshner - mail [at] digitarald.de; http://digitarald.de
 - Scott Kyle - scott [at] appden.com; http://appden.com

 requires:
 - Core/Array
 - Core/String
 - Core/Number
 - MooTools.More
 - Locale
 - Locale.en-US.Date

 provides: [Date]

 ...
 */

(function(){

	var Date = this.Date;

	var DateMethods = Date.Methods = {
		ms: 'Milliseconds',
		year: 'FullYear',
		min: 'Minutes',
		mo: 'Month',
		sec: 'Seconds',
		hr: 'Hours'
	};

	['Date', 'Day', 'FullYear', 'Hours', 'Milliseconds', 'Minutes', 'Month', 'Seconds', 'Time', 'TimezoneOffset',
		'Week', 'Timezone', 'GMTOffset', 'DayOfYear', 'LastMonth', 'LastDayOfMonth', 'UTCDate', 'UTCDay', 'UTCFullYear',
		'AMPM', 'Ordinal', 'UTCHours', 'UTCMilliseconds', 'UTCMinutes', 'UTCMonth', 'UTCSeconds', 'UTCMilliseconds'].each(function(method){
			Date.Methods[method.toLowerCase()] = method;
		});

	var pad = function(n, digits, string){
		if (digits == 1) return n;
		return n < Math.pow(10, digits - 1) ? (string || '0') + pad(n, digits - 1, string) : n;
	};

	Date.implement({

		set: function(prop, value){
			prop = prop.toLowerCase();
			var method = DateMethods[prop] && 'set' + DateMethods[prop];
			if (method && this[method]) this[method](value);
			return this;
		}.overloadSetter(),

		get: function(prop){
			prop = prop.toLowerCase();
			var method = DateMethods[prop] && 'get' + DateMethods[prop];
			if (method && this[method]) return this[method]();
			return null;
		}.overloadGetter(),

		clone: function(){
			return new Date(this.get('time'));
		},

		increment: function(interval, times){
			interval = interval || 'day';
			times = times != null ? times : 1;

			switch (interval){
				case 'year':
					return this.increment('month', times * 12);
				case 'month':
					var d = this.get('date');
					this.set('date', 1).set('mo', this.get('mo') + times);
					return this.set('date', d.min(this.get('lastdayofmonth')));
				case 'week':
					return this.increment('day', times * 7);
				case 'day':
					return this.set('date', this.get('date') + times);
			}

			if (!Date.units[interval]) throw new Error(interval + ' is not a supported interval');

			return this.set('time', this.get('time') + times * Date.units[interval]());
		},

		decrement: function(interval, times){
			return this.increment(interval, -1 * (times != null ? times : 1));
		},

		isLeapYear: function(){
			return Date.isLeapYear(this.get('year'));
		},

		clearTime: function(){
			return this.set({hr: 0, min: 0, sec: 0, ms: 0});
		},

		diff: function(date, resolution){
			if (typeOf(date) == 'string') date = Date.parse(date);

			return ((date - this) / Date.units[resolution || 'day'](3, 3)).round(); // non-leap year, 30-day month
		},

		getLastDayOfMonth: function(){
			return Date.daysInMonth(this.get('mo'), this.get('year'));
		},

		getDayOfYear: function(){
			return (Date.UTC(this.get('year'), this.get('mo'), this.get('date') + 1)
				- Date.UTC(this.get('year'), 0, 1)) / Date.units.day();
		},

		setDay: function(day, firstDayOfWeek){
			if (firstDayOfWeek == null){
				firstDayOfWeek = Date.getMsg('firstDayOfWeek');
				if (firstDayOfWeek === '') firstDayOfWeek = 1;
			}

			day = (7 + Date.parseDay(day, true) - firstDayOfWeek) % 7;
			var currentDay = (7 + this.get('day') - firstDayOfWeek) % 7;

			return this.increment('day', day - currentDay);
		},

		getWeek: function(firstDayOfWeek){
			if (firstDayOfWeek == null){
				firstDayOfWeek = Date.getMsg('firstDayOfWeek');
				if (firstDayOfWeek === '') firstDayOfWeek = 1;
			}

			var date = this,
				dayOfWeek = (7 + date.get('day') - firstDayOfWeek) % 7,
				dividend = 0,
				firstDayOfYear;

			if (firstDayOfWeek == 1){
				// ISO-8601, week belongs to year that has the most days of the week (i.e. has the thursday of the week)
				var month = date.get('month'),
					startOfWeek = date.get('date') - dayOfWeek;

				if (month == 11 && startOfWeek > 28) return 1; // Week 1 of next year

				if (month == 0 && startOfWeek < -2){
					// Use a date from last year to determine the week
					date = new Date(date).decrement('day', dayOfWeek);
					dayOfWeek = 0;
				}

				firstDayOfYear = new Date(date.get('year'), 0, 1).get('day') || 7;
				if (firstDayOfYear > 4) dividend = -7; // First week of the year is not week 1
			} else {
				// In other cultures the first week of the year is always week 1 and the last week always 53 or 54.
				// Days in the same week can have a different weeknumber if the week spreads across two years.
				firstDayOfYear = new Date(date.get('year'), 0, 1).get('day');
			}

			dividend += date.get('dayofyear');
			dividend += 6 - dayOfWeek; // Add days so we calculate the current date's week as a full week
			dividend += (7 + firstDayOfYear - firstDayOfWeek) % 7; // Make up for first week of the year not being a full week

			return (dividend / 7);
		},

		getOrdinal: function(day){
			return Date.getMsg('ordinal', day || this.get('date'));
		},

		getTimezone: function(){
			return this.toString()
				.replace(/^.*? ([A-Z]{3}).[0-9]{4}.*$/, '$1')
				.replace(/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/, '$1$2$3');
		},

		getGMTOffset: function(){
			var off = this.get('timezoneOffset');
			return ((off > 0) ? '-' : '+') + pad((off.abs() / 60).floor(), 2) + pad(off % 60, 2);
		},

		setAMPM: function(ampm){
			ampm = ampm.toUpperCase();
			var hr = this.get('hr');
			if (hr > 11 && ampm == 'AM') return this.decrement('hour', 12);
			else if (hr < 12 && ampm == 'PM') return this.increment('hour', 12);
			return this;
		},

		getAMPM: function(){
			return (this.get('hr') < 12) ? 'AM' : 'PM';
		},

		parse: function(str){
			this.set('time', Date.parse(str));
			return this;
		},

		isValid: function(date){
			if (!date) date = this;
			return typeOf(date) == 'date' && !isNaN(date.valueOf());
		},

		format: function(format){
			if (!this.isValid()) return 'invalid date';

			if (!format) format = '%x %X';
			if (typeof format == 'string') format = formats[format.toLowerCase()] || format;
			if (typeof format == 'function') return format(this);

			var d = this;
			return format.replace(/%([a-z%])/gi,
				function($0, $1){
					switch ($1){
						case 'a': return Date.getMsg('days_abbr')[d.get('day')];
						case 'A': return Date.getMsg('days')[d.get('day')];
						case 'b': return Date.getMsg('months_abbr')[d.get('month')];
						case 'B': return Date.getMsg('months')[d.get('month')];
						case 'c': return d.format('%a %b %d %H:%M:%S %Y');
						case 'd': return pad(d.get('date'), 2);
						case 'e': return pad(d.get('date'), 2, ' ');
						case 'H': return pad(d.get('hr'), 2);
						case 'I': return pad((d.get('hr') % 12) || 12, 2);
						case 'j': return pad(d.get('dayofyear'), 3);
						case 'k': return pad(d.get('hr'), 2, ' ');
						case 'l': return pad((d.get('hr') % 12) || 12, 2, ' ');
						case 'L': return pad(d.get('ms'), 3);
						case 'm': return pad((d.get('mo') + 1), 2);
						case 'M': return pad(d.get('min'), 2);
						case 'o': return d.get('ordinal');
						case 'p': return Date.getMsg(d.get('ampm'));
						case 's': return Math.round(d / 1000);
						case 'S': return pad(d.get('seconds'), 2);
						case 'T': return d.format('%H:%M:%S');
						case 'U': return pad(d.get('week'), 2);
						case 'w': return d.get('day');
						case 'x': return d.format(Date.getMsg('shortDate'));
						case 'X': return d.format(Date.getMsg('shortTime'));
						case 'y': return d.get('year').toString().substr(2);
						case 'Y': return d.get('year');
						case 'z': return d.get('GMTOffset');
						case 'Z': return d.get('Timezone');
					}
					return $1;
				}
			);
		},

		toISOString: function(){
			return this.format('iso8601');
		}

	}).alias({
			toJSON: 'toISOString',
			compare: 'diff',
			strftime: 'format'
		});

// The day and month abbreviations are standardized, so we cannot use simply %a and %b because they will get localized
	var rfcDayAbbr = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
		rfcMonthAbbr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

	var formats = {
		db: '%Y-%m-%d %H:%M:%S',
		compact: '%Y%m%dT%H%M%S',
		'short': '%d %b %H:%M',
		'long': '%B %d, %Y %H:%M',
		rfc822: function(date){
			return rfcDayAbbr[date.get('day')] + date.format(', %d ') + rfcMonthAbbr[date.get('month')] + date.format(' %Y %H:%M:%S %Z');
		},
		rfc2822: function(date){
			return rfcDayAbbr[date.get('day')] + date.format(', %d ') + rfcMonthAbbr[date.get('month')] + date.format(' %Y %H:%M:%S %z');
		},
		iso8601: function(date){
			return (
				date.getUTCFullYear() + '-' +
					pad(date.getUTCMonth() + 1, 2) + '-' +
					pad(date.getUTCDate(), 2) + 'T' +
					pad(date.getUTCHours(), 2) + ':' +
					pad(date.getUTCMinutes(), 2) + ':' +
					pad(date.getUTCSeconds(), 2) + '.' +
					pad(date.getUTCMilliseconds(), 3) + 'Z'
				);
		}
	};

	var parsePatterns = [],
		nativeParse = Date.parse;

	var parseWord = function(type, word, num){
		var ret = -1,
			translated = Date.getMsg(type + 's');
		switch (typeOf(word)){
			case 'object':
				ret = translated[word.get(type)];
				break;
			case 'number':
				ret = translated[word];
				if (!ret) throw new Error('Invalid ' + type + ' index: ' + word);
				break;
			case 'string':
				var match = translated.filter(function(name){
					return this.test(name);
				}, new RegExp('^' + word, 'i'));
				if (!match.length) throw new Error('Invalid ' + type + ' string');
				if (match.length > 1) throw new Error('Ambiguous ' + type);
				ret = match[0];
		}

		return (num) ? translated.indexOf(ret) : ret;
	};

	var startCentury = 1900,
		startYear = 70;

	Date.extend({

		getMsg: function(key, args){
			return Locale.get('Date.' + key, args);
		},

		units: {
			ms: Function.from(1),
			second: Function.from(1000),
			minute: Function.from(60000),
			hour: Function.from(3600000),
			day: Function.from(86400000),
			week: Function.from(608400000),
			month: function(month, year){
				var d = new Date;
				return Date.daysInMonth(month != null ? month : d.get('mo'), year != null ? year : d.get('year')) * 86400000;
			},
			year: function(year){
				year = year || new Date().get('year');
				return Date.isLeapYear(year) ? 31622400000 : 31536000000;
			}
		},

		daysInMonth: function(month, year){
			return [31, Date.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
		},

		isLeapYear: function(year){
			return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);
		},

		parse: function(from){
			var t = typeOf(from);
			if (t == 'number') return new Date(from);
			if (t != 'string') return from;
			from = from.clean();
			if (!from.length) return null;

			var parsed;
			parsePatterns.some(function(pattern){
				var bits = pattern.re.exec(from);
				return (bits) ? (parsed = pattern.handler(bits)) : false;
			});

			if (!(parsed && parsed.isValid())){
				parsed = new Date(nativeParse(from));
				if (!(parsed && parsed.isValid())) parsed = new Date(from.toInt());
			}
			return parsed;
		},

		parseDay: function(day, num){
			return parseWord('day', day, num);
		},

		parseMonth: function(month, num){
			return parseWord('month', month, num);
		},

		parseUTC: function(value){
			var localDate = new Date(value);
			var utcSeconds = Date.UTC(
				localDate.get('year'),
				localDate.get('mo'),
				localDate.get('date'),
				localDate.get('hr'),
				localDate.get('min'),
				localDate.get('sec'),
				localDate.get('ms')
			);
			return new Date(utcSeconds);
		},

		orderIndex: function(unit){
			return Date.getMsg('dateOrder').indexOf(unit) + 1;
		},

		defineFormat: function(name, format){
			formats[name] = format;
			return this;
		},



		defineParser: function(pattern){
			parsePatterns.push((pattern.re && pattern.handler) ? pattern : build(pattern));
			return this;
		},

		defineParsers: function(){
			Array.flatten(arguments).each(Date.defineParser);
			return this;
		},

		define2DigitYearStart: function(year){
			startYear = year % 100;
			startCentury = year - startYear;
			return this;
		}

	}).extend({
			defineFormats: Date.defineFormat.overloadSetter()
		});

	var regexOf = function(type){
		return new RegExp('(?:' + Date.getMsg(type).map(function(name){
			return name.substr(0, 3);
		}).join('|') + ')[a-z]*');
	};

	var replacers = function(key){
		switch (key){
			case 'T':
				return '%H:%M:%S';
			case 'x': // iso8601 covers yyyy-mm-dd, so just check if month is first
				return ((Date.orderIndex('month') == 1) ? '%m[-./]%d' : '%d[-./]%m') + '([-./]%y)?';
			case 'X':
				return '%H([.:]%M)?([.:]%S([.:]%s)?)? ?%p? ?%z?';
		}
		return null;
	};

	var keys = {
		d: /[0-2]?[0-9]|3[01]/,
		H: /[01]?[0-9]|2[0-3]/,
		I: /0?[1-9]|1[0-2]/,
		M: /[0-5]?\d/,
		s: /\d+/,
		o: /[a-z]*/,
		p: /[ap]\.?m\.?/,
		y: /\d{2}|\d{4}/,
		Y: /\d{4}/,
		z: /Z|[+-]\d{2}(?::?\d{2})?/
	};

	keys.m = keys.I;
	keys.S = keys.M;

	var currentLanguage;

	var recompile = function(language){
		currentLanguage = language;

		keys.a = keys.A = regexOf('days');
		keys.b = keys.B = regexOf('months');

		parsePatterns.each(function(pattern, i){
			if (pattern.format) parsePatterns[i] = build(pattern.format);
		});
	};

	var build = function(format){
		if (!currentLanguage) return {format: format};

		var parsed = [];
		var re = (format.source || format) // allow format to be regex
			.replace(/%([a-z])/gi,
			function($0, $1){
				return replacers($1) || $0;
			}
		).replace(/\((?!\?)/g, '(?:') // make all groups non-capturing
			.replace(/ (?!\?|\*)/g, ',? ') // be forgiving with spaces and commas
			.replace(/%([a-z%])/gi,
			function($0, $1){
				var p = keys[$1];
				if (!p) return $1;
				parsed.push($1);
				return '(' + p.source + ')';
			}
		).replace(/\[a-z\]/gi, '[a-z\\u00c0-\\uffff;\&]'); // handle unicode words

		return {
			format: format,
			re: new RegExp('^' + re + '$', 'i'),
			handler: function(bits){
				bits = bits.slice(1).associate(parsed);
				var date = new Date().clearTime(),
					year = bits.y || bits.Y;

				if (year != null) handle.call(date, 'y', year); // need to start in the right year
				if ('d' in bits) handle.call(date, 'd', 1);
				if ('m' in bits || bits.b || bits.B) handle.call(date, 'm', 1);

				for (var key in bits) handle.call(date, key, bits[key]);
				return date;
			}
		};
	};

	var handle = function(key, value){
		if (!value) return this;

		switch (key){
			case 'a': case 'A': return this.set('day', Date.parseDay(value, true));
			case 'b': case 'B': return this.set('mo', Date.parseMonth(value, true));
			case 'd': return this.set('date', value);
			case 'H': case 'I': return this.set('hr', value);
			case 'm': return this.set('mo', value - 1);
			case 'M': return this.set('min', value);
			case 'p': return this.set('ampm', value.replace(/\./g, ''));
			case 'S': return this.set('sec', value);
			case 's': return this.set('ms', ('0.' + value) * 1000);
			case 'w': return this.set('day', value);
			case 'Y': return this.set('year', value);
			case 'y':
				value = +value;
				if (value < 100) value += startCentury + (value < startYear ? 100 : 0);
				return this.set('year', value);
			case 'z':
				if (value == 'Z') value = '+00';
				var offset = value.match(/([+-])(\d{2}):?(\d{2})?/);
				offset = (offset[1] + '1') * (offset[2] * 60 + (+offset[3] || 0)) + this.getTimezoneOffset();
				return this.set('time', this - offset * 60000);
		}

		return this;
	};

	Date.defineParsers(
		'%Y([-./]%m([-./]%d((T| )%X)?)?)?', // "1999-12-31", "1999-12-31 11:59pm", "1999-12-31 23:59:59", ISO8601
		'%Y%m%d(T%H(%M%S?)?)?', // "19991231", "19991231T1159", compact
		'%x( %X)?', // "12/31", "12.31.99", "12-31-1999", "12/31/2008 11:59 PM"
		'%d%o( %b( %Y)?)?( %X)?', // "31st", "31st December", "31 Dec 1999", "31 Dec 1999 11:59pm"
		'%b( %d%o)?( %Y)?( %X)?', // Same as above with month and day switched
		'%Y %b( %d%o( %X)?)?', // Same as above with year coming first
		'%o %b %d %X %z %Y', // "Thu Oct 22 08:11:23 +0000 2009"
		'%T', // %H:%M:%S
		'%H:%M( ?%p)?' // "11:05pm", "11:05 am" and "11:05"
	);

	Locale.addEvent('change', function(language){
		if (Locale.get('Date')) recompile(language);
	}).fireEvent('change', Locale.getCurrent());

})();


/*
---
description: DynamicTextarea

license: MIT-style

authors:
- Amadeus Demarzi (http://amadeusamade.us)

requires:
 core/1.3: [Core/Class, Core/Element, Core/Element.Event, Core/Element.Style, Core/Element.Dimensions]

provides: [DynamicTextarea]
...
*/

(function(){

// Prevent the plugin from overwriting existing variables
if (this.DynamicTextarea) return;

var DynamicTextarea = this.DynamicTextarea = new Class({

	Implements: [Options, Events],

	options: {
		value: '',
		minRows: 1,
		delay: true,
		lineHeight: null,
		offset: 0,
		padding: 0

		// AVAILABLE EVENTS
		// onCustomLineHeight: (function) - custom ways of determining lineHeight if necessary

		// onInit: (function)

		// onFocus: (function)
		// onBlur: (function)

		// onKeyPress: (function)
		// onResize: (function)

		// onEnable: (function)
		// onDisable: (function)

		// onClean: (function)
	},

	textarea: null,

	initialize: function(textarea,options) {
		this.textarea = document.id(textarea);
		if (!this.textarea) return;

		this.setOptions(options);

		this.parentEl = new Element('div',{
			styles:{
				padding:0,
				margin:0,
				border:0,
				height:'auto',
				width:'auto'
			}
		})
			.inject(this.textarea,'after')
			.adopt(this.textarea);

		// Prebind common methods
		['focus','delayCheck','blur','scrollFix','checkSize','clean','disable','enable','getLineHeight']
			.each(function(method){
				this[method] = this[method].bind(this);
			},this);

		// Firefox and Opera handle scroll heights differently than all other browsers
		if (window.Browser.firefox || window.Browser.opera) {
			this.options.offset =
				parseInt(this.textarea.getStyle('padding-top'),10) +
				parseInt(this.textarea.getStyle('padding-bottom'),10) +
				parseInt(this.textarea.getStyle('border-bottom-width'),10) +
				parseInt(this.textarea.getStyle('border-top-width'),10);
		} else {
			this.options.offset =
				parseInt(this.textarea.getStyle('border-bottom-width'),10) +
				parseInt(this.textarea.getStyle('border-top-width'),10);
			this.options.padding =
				parseInt(this.textarea.getStyle('padding-top'),10) +
				parseInt(this.textarea.getStyle('padding-bottom'),10);
		}

		// Disable browser resize handles, set appropriate styles
		this.textarea.set({
			'rows': 1,
			'styles': {
				'resize': 'none',
				'-moz-resize': 'none',
				'-webkit-resize': 'none',
				'position': 'relative',
				'display': 'block',
				'overflow': 'hidden',
				'height': 'auto'
			}
		});

		this.getLineHeight();
		this.fireEvent('customLineHeight');

		// Set the height of the textarea, based on content
		this.checkSize(true);
		this.textarea.addEvent('focus',this.focus);
		this.fireEvent('init',[textarea,options]);
	},

	// This is the only crossbrowser method to determine ACTUAL lineHeight in a textarea (that I am aware of)
	getLineHeight: function(){
		var backupValue = this.textarea.value;
		this.textarea.value = 'M';
		this.options.lineHeight = this.textarea.getScrollSize().y - this.options.padding;
		this.textarea.value = backupValue;
		this.textarea.setStyle('height', this.options.lineHeight * this.options.minRows);
	},

	// Stops a small scroll jump on some browsers
	scrollFix: function(){
		this.textarea.scrollTo(0,0);
	},

	// Add interactive events, and fire focus event
	focus: function(){
		this.textarea.addEvents({
			'keydown': this.delayCheck,
			'keypress': this.delayCheck,
			'click': this.delayCheck,
			'blur': this.blur,
			'scroll': this.scrollFix
		});
		return this.fireEvent('focus');
	},

	// Clean out extraneaous events, and fire blur event
	blur: function(){
		this.textarea.removeEvents({
			'keydown': this.delayCheck,
			'keypress': this.delayCheck,
			'blur': this.blur,
			'scroll': this.scrollFix
		});
		return this.fireEvent('blur');
	},

	// Delay checkSize because text hasn't been injected into the textarea yet
	delayCheck: function(){
		if (this.options.delay === true)
			this.options.delay = this.checkSize.delay(1);
	},

	// Determine if it needs to be resized or not, and resize if necessary
	checkSize: function(forced) {
		var oldValue = this.options.value,
			modifiedParent = false;

		this.options.value = this.textarea.value;
		this.options.delay = false;

		if (this.options.value === oldValue && forced!==true)
			return this.options.delay = true;

		if (!oldValue || this.options.value.length < oldValue.length || forced) {
			modifiedParent = true;
			this.parentEl.setStyle('height',this.parentEl.getSize().y);
			this.textarea.setStyle('height', this.options.minRows * this.options.lineHeight);
		}

		var tempHeight = this.textarea.getScrollSize().y,
			offsetHeight = this.textarea.offsetHeight,
			cssHeight = tempHeight - this.options.padding,
			scrollHeight = tempHeight + this.options.offset;
			
		if (scrollHeight !== offsetHeight && cssHeight > this.options.minRows * this.options.lineHeight){
			this.textarea.setStyle('height',cssHeight);
			this.fireEvent('resize');
		}
		
		if (cssHeight > this.options.maxRows * this.options.lineHeight) {
			this.textarea.setStyle('height',this.options.maxRows * this.options.lineHeight);
			if (cssHeight - this.options.maxRows * this.options.lineHeight > 5) {
				this.fireEvent('showError');
			} else {
				this.fireEvent('hideError');
			}
			this.fireEvent('resize');
		} else {
			this.fireEvent('hideError');
		}

		if(modifiedParent) this.parentEl.setStyle('height','auto');

		this.options.delay = true;
		if (forced !== true)
			return this.fireEvent('keyPress');
	},

	// Clean out this textarea's event handlers
	clean: function(){
		this.textarea.removeEvents({
			'focus': this.focus,
			'keydown': this.delayCheck,
			'keypress': this.delayCheck,
			'blur': this.blur,
			'scroll': this.scrollFix
		});
		return this.fireEvent('clean');
	},

	// Disable the textarea
	disable: function(){
		this.textarea.blur();
		this.clean();
		this.textarea.set(this.options.disabled,true);
		return this.fireEvent('disable');
	},

	// Enables the textarea
	enable: function(){
		this.textarea.addEvents({
			'focus': this.focus,
			'scroll': this.scrollFix
		});
		this.textarea.set(this.options.disabled,false);
		return this.fireEvent('enable');
	}
});

})();

(function() {
    Element.Custom = {
        Styles: new Hash({}),
        vendorStylePrefix: (Browser.Engine.webkit) ? '-webkit-' : (Browser.Engine.gecko) ? '-moz-' : false,
        prefixedProperties: [
        	'animation', 
        	'animation-delay',
        	'animation-direction',
        	'animation-duration',
        	'animation-fill-mode',
        	'animation-iteration-count',
        	'animation-name',
        	'animation-play-state',
        	'animation-timing-function',
        	'transition',
        	'transition-delay',
        	'transition-duration',
        	'transition-property',
        	'transition-timing-function',
        	'transform',
        	'transform-origin',
        	'transform-style'
        ]
    };

    Element.implement({
        setStyle: (function(parent) {
            return function(property, value) {
                var customStyle = Element.Custom.Styles.get(property);

                return Element.Custom.Styles.has(property)
                    ? customStyle.set(this, customStyle.rule, value)
                    : parent.apply(this, arguments);
            };
        })(Element.prototype.setStyle),
        getStyle: (function(parent) {
            return function(property) {
                return Element.Custom.Styles.has(property)
                    ? Element.Custom.Styles.get(property).get(this)
                    : parent.apply(this, arguments);
            };
        })(Element.prototype.getStyle),
        addClass: (function(parent) {
            return function(className, delay) {
                if ( ! className.split(/\s+/).filter(function(cls) {return cls && this.hasClass(cls)}.bind(this)).length) {
                    delay && setTimeout(function() {
                        this.removeClass(className);
                    }.bind(this), delay);

                    return parent.call(this, className);
                }
                else {
                    return this;
                }
            };
        })(Element.prototype.addClass),
        set: (function(parent) {
            return function(key, value) {
                if (key instanceof Object) {
                    Object.keys(key).each(function (i) {
                        this.set(i, key[i]);
                    }.bind(this));

                    return this;
                }
                else {
                    return parent.call(this, key, value instanceof Function
                        ? value.call(this, this.get(key))
                        : value === true ? key : value === false ? null : value);
                }
            };
        })(Element.prototype.set),
        fade: function(how, options) {
            var fade = this.get('tween'), method, args = ['opacity'].append(arguments), toggle, to;

            if (args[1] == null) {
                args[1] = 'toggle';
            }

            switch (args[1]) {
                case 'in':
                    method = 'start';
                    args[1] = 1;
                
                    break;
                case 'out':
                    method = 'start';
                    args[1] = 0;
                
                    break;
                case 'show':
                    method = 'set';
                    args[1] = 1;

                    break;
                case 'hide':
                    method = 'set';
                    args[1] = 0;

                    break;
                case 'toggle':
                    var flag = this.retrieve('fade:flag', this.getStyle('opacity') == 1);

                    method = 'start';
                    args[1] = flag ? 0 : 1;
                    this.store('fade:flag', ! flag);
                    toggle = true;
                
                    break;
                default:
                    method = 'start';
            }
            
            toggle || this.eliminate('fade:flag');
            fade[method].apply(fade, args);
            to = args[args.length - 1];

            if (method == 'set' || to != 0) {
                this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');
            }
            else {
                fade.chain(function() {
                    this.element.setStyle('visibility', 'hidden');
                    this.callChain();
                });
            }

            return this;
        },
        each: function(selector, callback) {
            if (arguments[0] instanceof Function) {
                arguments[0](this);
            }
            else {
                this
                    .getElements(selector)
                    .each(callback);
            }

        	return this;
        },
        field: function(name) {
            return this
                .getElement('form')[name];
        },
        pick: function(selector) {
            this
                .removeClass('hidden')
                .getSiblings(selector || undefined)
                    .addClass('hidden');
        },
        pickClass: function(clss, selector) {
            this
                .addClass(clss)
                .getSiblings(selector)
                    .removeClass(clss);

            return this;
        },
        getClosest: function(selector) {
            return this.match(selector) ? this : this.getParent(selector);
        },
        captureEvent: function(events, parent) {
            var target = this;

            events.split(' ').each(function(e) {
                (parent || document.body).addEvent(e, function(event) {
                    if ( ! target.contains(event.target) && target != event.target) {
                        event.stopPropagation();
                        event.cancelBubble = true;

                        target.fireEvent(e, event);
                    }
                });
            });

            return this;
        },
        toObject: function(skip_empty) {
            var result = {};
            this.getElements('input, select, textarea').each(function(el){
                var type = el.type;
                if (!el.name || el.disabled || type == 'submit' || type == 'reset' || type == 'file' || type == 'image') return;

                var value = (el.get('tag') == 'select') ? el.getSelected().map(function(opt){
                    // IE
                    return document.id(opt).get('value');
                }) : ((type == 'radio' || type == 'checkbox') && !el.checked) ? null : el.get('value');

                Array.from(value).each(function(val){
                    if (typeof val != 'undefined' && ( ! skip_empty || val != '')) result[el.name] = val;
                });
            });
            return result;
        }
    });

	Element.Custom.prefixedProperties.each(function(property) {
		Element.Custom.Styles[property] = {
			set: function(element, rule, value) {
				return element.setStyle(Element.Custom.vendorStylePrefix + property, value);
			},
			get: function(element) {
				return element.getStyle(Element.Custom.vendorStylePrefix + property);
			}
		}
	});

    String.implement({
		reverse: function() {
			return this.split('').reverse().join('');
		},
		endsWith: function(suffix) {
			return this.indexOf(suffix, this.length - suffix.length) !== -1;
		},
		htmlEscape: function() {
            return this.replace(/&/g, '&amp;')
                       .replace(/"/g, '&quot;')
                       .replace(/'/g, '&#39;')
                       .replace(/</g, '&lt;')
                       .replace(/>/g, '&gt;');
        }
    });

    Number.implement({
        pad: function() {
            return (this < 10 ? '0' : '') + this;
        }
    });

    Date.implement({
        toISOString: (function(parent) {
            return function(verbose) {
                var result = parent.call(this);

                if (verbose) {
                    var offset = this.getTimezoneOffset();

                    result = result.replace('Z', (offset > 0 ? '-' : '+') + (Math.floor(Math.abs(offset) / 60)).pad() + ':' + (Math.abs(offset) % 60).pad());
                }

                return result;
            };
        })(Date.prototype.toISOString)
    });

    Array.implement({
        find: function(predicate) {
            if (this == null) {
                throw new TypeError('Array.prototype.find called on null or undefined');
            }
            if (typeof predicate !== 'function') {
                throw new TypeError('predicate must be a function');
            }
            var list = Object(this);
            var length = list.length >>> 0;
            var thisArg = arguments[1];
            var value;
            for (var i = 0; i < length; i++) {
                value = list[i];
                if (predicate.call(thisArg, value, i, list)) {
                    return value;
                }
            }
            return undefined;
        }
    });

    Function.implement({

        // Ported from underscore.js

        // Returns a function, that, as long as it continues to be invoked, will not
        // be triggered. The function will be called after it stops being called for
        // N milliseconds. If `immediate` is passed, trigger the function on the
        // leading edge, instead of the trailing.

        debounced: function(wait, immediate) {
            var func = this
            var timestamp, timeout, result, args, context
            var later = function() {
                var last = Date.now() - timestamp;
                if (last < wait && last > 0) {
                    timeout = setTimeout(later, wait - last);
                } else {
                    timeout = null;
                    if (!immediate) {
                        result = func.apply(context, args);
                        if (!timeout) {
                            context = args = null;
                        }
                    }
                }
            };
            var debouncedFn = function() {
                context = this;
                args = arguments;
                timestamp = Date.now();
                var callNow = immediate && !timeout;
                if (!timeout) {
                    timeout = setTimeout(later, wait);
                }
                if (callNow) {
                    result = func.apply(context, args);
                    context = args = null;
                }
                return result;
            };
            debouncedFn.callImmediately = function () { // cancels timeout (set by fn.debounced/fn.throttled) and calls immediately
                if (timeout) {
                    clearTimeout (timeout)
                    timeout = null
                }
                func.apply (context, args)
            }
            return debouncedFn
        },
    });
    // Стандартная реализация Fuction.bind. Текущая версия в mootools 1.5.1 обрабатывает только один переданный в функцию параметр.
    // В версии mootools 1.6 bind исправили, но возникли ошибки с Array.link при инициализации классов Tips и MooRainbow

    Function.implement({
        bind: function (boundContext) {
            var originalFunction = this,
                boundArguments = Array.prototype.slice.call(arguments, 1);

            return function boundFunction () {
                var currentArguments = boundArguments.concat(Array.prototype.slice.call(arguments));
                if (this instanceof boundFunction) {
                    var stringArguments = currentArguments.map(function (argument, a) {
                        return 'a' + a;
                    }).join(',');

                    return (new Function(
                        stringArguments,
                        'var C = this; return new C(' + stringArguments + ');'
                    )).apply(originalFunction, currentArguments);
                } else {
                    return originalFunction.apply(boundContext, currentArguments);
                }
            }
        }
    });

    if (!Date.now) { // emulates Date.now() for elder browsers
        Date.now = function () {
            return new Date().getTime();
        }
    }

    window.parseDate = function(str) {
        var mask = '39.19.2099', result = '';
        
        for (var i = 0; i < mask.length && str; i ++ ) {
            var s, ok = false;

            while (str && ! ok) {
                s = str[0];
                str = str.substr(1);

                if (mask[i] == '.' && s == mask[i] || mask[i].match(/[0-9]/) && s.match(new RegExp('[0-' + mask[i] + ']'))) {
                    (ok = true) && (result += s);

                    if (mask[i + 1] == '.') {
                        result += mask[ ++ i];
                    }
                }
            }
        }
        
        return result;
    };

	(function(property) {
	    Element.Custom.Styles[property].set = function(element, rule, value) {    
			var r = [];

			for (var i in value) {
				r.push(i + '(' + (value[i] instanceof Array ? value[i] : [value[i]]).join(', ') + ')');
			}

			return element.setStyle(Element.Custom.vendorStylePrefix + property, r.join(' '));
	    };
	})('transform');
	
	Class.Mutators.Static = function(members) {
	    this.extend(members);
	}

    $extend = (function(parent) {
        return function() {
            var object = arguments[0];

            Array.prototype.slice.call(arguments, 1).each(function(options) {
                parent.call(this, object, options);
            });

            return object;
        };
    })($extend);

    (function(global) {

          'use strict';

          //  ValueError :: String -> Error
          var ValueError = function(message) {
            var err = new Error(message);
            err.name = 'ValueError';
            return err;
          };

          //  defaultTo :: a,a? -> a
          var defaultTo = function(x, y) {
            return y == null ? x : y;
          };

          //  create :: Object -> String,*... -> String
          var create = function(transformers) {
            return function(template) {
              var args = Array.prototype.slice.call(arguments, 1);
              var idx = 0;
              var state = 'UNDEFINED';

              return template.replace(
                /([{}])\1|[{](.*?)(?:!(.+?))?[}]/g,
                function(match, literal, key, xf) {
                  if (literal != null) {
                    return literal;
                  }
                  if (key.length > 0) {
                    if (state === 'IMPLICIT') {
                      throw ValueError('cannot switch from ' +
                                       'implicit to explicit numbering');
                    }
                    state = 'EXPLICIT';
                  } else {
                    if (state === 'EXPLICIT') {
                      throw ValueError('cannot switch from ' +
                                       'explicit to implicit numbering');
                    }
                    state = 'IMPLICIT';
                    key = String(idx);
                    idx += 1;
                  }
                  var value = defaultTo('', lookup(args, key.split('.')));

                  if (xf == null) {
                    return value;
                  } else if (Object.prototype.hasOwnProperty.call(transformers, xf)) {
                    return transformers[xf](value);
                  } else {
                    throw ValueError('no transformer named "' + xf + '"');
                  }
                }
              );
            };
          };

          var lookup = function(obj, path) {
            if (!/^\d+$/.test(path[0])) {
              path = ['0'].concat(path);
            }
            for (var idx = 0; idx < path.length; idx += 1) {
              var key = path[idx];
              obj = typeof obj[key] === 'function' ? obj[key]() : obj[key];
            }
            return obj;
          };

          //  format :: String,*... -> String
          var format = create({});

          //  format.create :: Object -> String,*... -> String
          format.create = create;

          //  format.extend :: Object,Object -> ()
          format.extend = function(prototype, transformers) {
            var $format = create(transformers);
            prototype.format = function() {
              var args = Array.prototype.slice.call(arguments);
              args.unshift(this);
              return $format.apply(global, args);
            };
          };

          /* istanbul ignore else */
          if (typeof module !== 'undefined') {
            module.exports = format;
          } else if (typeof define === 'function' && define.amd) {
            define(format);
          } else {
            global.format = format;
          }

        }.call(this, this));
})();

/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.4",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b="length"in a&&a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/'|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\f]' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",P)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){
return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ba=/<([\w:]+)/,ca=/<|&#?\w+;/,da=/<(?:script|style|link)/i,ea=/checked\s*(?:[^=]|=\s*.checked.)/i,fa=/^$|\/(?:java|ecma)script/i,ga=/^true\/(.*)/,ha=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ia={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function ka(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,"script"),g.length>0&&ma(g,!i&&oa(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement("div")),g=(ba.exec(e)||["",""])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),"script"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||"")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(aa,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,"script"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,"")))}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),"none"!==c&&c||(qa=(qa||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp("^("+Q+")(.*)$","i"),Ba=new RegExp("^([+-])=("+Q+")","i"),Ca={position:"absolute",visibility:"hidden",display:"block"},Da={letterSpacing:"0",fontWeight:"400"},Ea=["Webkit","O","Moz","ms"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Ha(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ia(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?"border":"content"),d,f)+"px"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",ta(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),"normal"===e&&b in Da&&(e=Da[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xa,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pa=/queueHooks$/,Qa=[Va],Ra={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||ta(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?ta(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta("show"),slideUp:Ta("hide"),slideToggle:Ta("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),
void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ab," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ab," ").indexOf(b)>=0)return!0;return!1}});var bb=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cb=n.now(),db=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \t]*([^\r\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\/\//,kb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,lb={},mb={},nb="*/".concat("*"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:"GET",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":nb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+"").replace(eb,"").replace(jb,pb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(pb[3]||("http:"===pb[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,"$1_="+cb++):d+(db.test(d)?"&":"?")+"_="+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+nb+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\[\]$/,xb=/\r?\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Ab(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join("&").replace(vb,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,"\r\n")}}):{name:b.name,value:c.replace(xb,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&&"withCredentials"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Cb[g]=b("abort");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fb=[],Gb=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Fb.pop()||n.expando+"_"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gb.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,"$1"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});
jQuery.noConflict ();
(function ($) {
    $.fn.pulsar = function (method, options) {
        if (method === 'stop') {
            var options = this.data('__pulsar-options__') || {};
            this.removeData('__pulsar-options__').finish().css(options.property, options.value);
        } else if (method === 'start') {
            options = options || {};

            var that = this,
                params = {},
                value = options.value = this.css(options.property),
                callback = function () {
                    params[options.property] = options[params[options.property] === options.from ? 'to' : 'from'];
                    that.animate(params, {
                        duration: +options.duration || 300,
                        easing: options.easing || 'linear',
                        complete: function () {
                            that.data('__pulsar-options__') && callback();
                        }
                    });
                };

            if (options.from === undefined) options.from = value;
            if (options.to === undefined) options.to = value;

            this.data('__pulsar-options__', options);

            callback();
        } else {
            throw 'Only start and stop methods are available for pulsar!';
        }
    };
})(jQuery);

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(["jquery"], function ($) {
      return (root.returnExportsGlobal = factory($));
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like enviroments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"));
  } else {
    factory(jQuery);
  }
}(this, function ($) {

//@ sourceMappingURL=jquery.caret.map
/*
  Implement Github like autocomplete mentions
  http://ichord.github.com/At.js

  Copyright (c) 2013 chord.luo@gmail.com
  Licensed under the MIT license.
*/

/*
本插件操作 textarea 或者 input 内的插入符
只实现了获得插入符在文本框中的位置，我设置
插入符的位置.
*/

"use strict";
var EditableCaret, InputCaret, Mirror, Utils, discoveryIframeOf, methods, oDocument, oFrame, oWindow, pluginName, setContextBy;

pluginName = 'caret';

EditableCaret = (function() {
  function EditableCaret($inputor) {
    this.$inputor = $inputor;
    this.domInputor = this.$inputor[0];
  }

  EditableCaret.prototype.setPos = function(pos) {
    var fn, found, offset, sel;
    if (sel = oWindow.getSelection()) {
      offset = 0;
      found = false;
      (fn = function(pos, parent) {
        var node, range, _i, _len, _ref, _results;
        _ref = parent.childNodes;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          node = _ref[_i];
          if (found) {
            break;
          }
          if (node.nodeType === 3) {
            if (offset + node.length >= pos) {
              found = true;
              range = oDocument.createRange();
              range.setStart(node, pos - offset);
              sel.removeAllRanges();
              sel.addRange(range);
              break;
            } else {
              _results.push(offset += node.length);
            }
          } else {
            _results.push(fn(pos, node));
          }
        }
        return _results;
      })(pos, this.domInputor);
    }
    return this.domInputor;
  };

  EditableCaret.prototype.getIEPosition = function() {
    return this.getPosition();
  };

  EditableCaret.prototype.getPosition = function() {
    var inputor_offset, offset;
    offset = this.getOffset();
    inputor_offset = this.$inputor.offset();
    offset.left -= inputor_offset.left;
    offset.top -= inputor_offset.top;
    return offset;
  };

  EditableCaret.prototype.getOldIEPos = function() {
    var preCaretTextRange, textRange;
    textRange = oDocument.selection.createRange();
    preCaretTextRange = oDocument.body.createTextRange();
    preCaretTextRange.moveToElementText(this.domInputor);
    preCaretTextRange.setEndPoint("EndToEnd", textRange);
    return preCaretTextRange.text.length;
  };

  EditableCaret.prototype.getPos = function() {
    var clonedRange, pos, range;
    if (range = this.range()) {
      clonedRange = range.cloneRange();
      clonedRange.selectNodeContents(this.domInputor);
      clonedRange.setEnd(range.endContainer, range.endOffset);
      pos = clonedRange.toString().length;
      clonedRange.detach();
      return pos;
    } else if (oDocument.selection) {
      return this.getOldIEPos();
    }
  };

  EditableCaret.prototype.getOldIEOffset = function() {
    var range, rect;
    range = oDocument.selection.createRange().duplicate();
    range.moveStart("character", -1);
    rect = range.getBoundingClientRect();
    return {
      height: rect.bottom - rect.top,
      left: rect.left,
      top: rect.top
    };
  };

  EditableCaret.prototype.getOffset = function(pos) {
    var clonedRange, offset, range, rect, shadowCaret;
    if (oWindow.getSelection && (range = this.range())) {
      if (range.endOffset - 1 > 0 && range.endContainer !== this.domInputor) {
        clonedRange = range.cloneRange();
        clonedRange.setStart(range.endContainer, range.endOffset - 1);
        clonedRange.setEnd(range.endContainer, range.endOffset);
        rect = clonedRange.getBoundingClientRect();
        offset = {
          height: rect.height,
          left: rect.left + rect.width,
          top: rect.top
        };
        clonedRange.detach();
      }
      if (!offset || (offset != null ? offset.height : void 0) === 0) {
        clonedRange = range.cloneRange();
        shadowCaret = $(oDocument.createTextNode("|"));
        clonedRange.insertNode(shadowCaret[0]);
        clonedRange.selectNode(shadowCaret[0]);
        rect = clonedRange.getBoundingClientRect();
        offset = {
          height: rect.height,
          left: rect.left,
          top: rect.top
        };
        shadowCaret.remove();
        clonedRange.detach();
      }
    } else if (oDocument.selection) {
      offset = this.getOldIEOffset();
    }
    if (offset) {
      offset.top += $(oWindow).scrollTop();
      offset.left += $(oWindow).scrollLeft();
    }
    return offset;
  };

  EditableCaret.prototype.range = function() {
    var sel;
    if (!oWindow.getSelection) {
      return;
    }
    sel = oWindow.getSelection();
    if (sel.rangeCount > 0) {
      return sel.getRangeAt(0);
    } else {
      return null;
    }
  };

  return EditableCaret;

})();

InputCaret = (function() {
  function InputCaret($inputor) {
    this.$inputor = $inputor;
    this.domInputor = this.$inputor[0];
  }

  InputCaret.prototype.getIEPos = function() {
    var endRange, inputor, len, normalizedValue, pos, range, textInputRange;
    inputor = this.domInputor;
    range = oDocument.selection.createRange();
    pos = 0;
    if (range && range.parentElement() === inputor) {
      normalizedValue = inputor.value.replace(/\r\n/g, "\n");
      len = normalizedValue.length;
      textInputRange = inputor.createTextRange();
      textInputRange.moveToBookmark(range.getBookmark());
      endRange = inputor.createTextRange();
      endRange.collapse(false);
      if (textInputRange.compareEndPoints("StartToEnd", endRange) > -1) {
        pos = len;
      } else {
        pos = -textInputRange.moveStart("character", -len);
      }
    }
    return pos;
  };

  InputCaret.prototype.getPos = function() {
    if (oDocument.selection) {
      return this.getIEPos();
    } else {
      return this.domInputor.selectionStart;
    }
  };

  InputCaret.prototype.setPos = function(pos) {
    var inputor, range;
    inputor = this.domInputor;
    if (oDocument.selection) {
      range = inputor.createTextRange();
      range.move("character", pos);
      range.select();
    } else if (inputor.setSelectionRange) {
      inputor.setSelectionRange(pos, pos);
    }
    return inputor;
  };

  InputCaret.prototype.getIEOffset = function(pos) {
    var h, textRange, x, y;
    textRange = this.domInputor.createTextRange();
    pos || (pos = this.getPos());
    textRange.move('character', pos);
    x = textRange.boundingLeft;
    y = textRange.boundingTop;
    h = textRange.boundingHeight;
    return {
      left: x,
      top: y,
      height: h
    };
  };

  InputCaret.prototype.getOffset = function(pos) {
    var $inputor, offset, position;
    $inputor = this.$inputor;
    if (oDocument.selection) {
      offset = this.getIEOffset(pos);
      offset.top += $(oWindow).scrollTop() + $inputor.scrollTop();
      offset.left += $(oWindow).scrollLeft() + $inputor.scrollLeft();
      return offset;
    } else {
      offset = $inputor.offset();
      position = this.getPosition(pos);
      return offset = {
        left: offset.left + position.left - $inputor.scrollLeft(),
        top: offset.top + position.top - $inputor.scrollTop(),
        height: position.height
      };
    }
  };

  InputCaret.prototype.getPosition = function(pos) {
    var $inputor, at_rect, end_range, format, html, mirror, start_range;
    $inputor = this.$inputor;
    format = function(value) {
      value = value.replace(/<|>|`|"|&/g, '?').replace(/\r\n|\r|\n/g, "<br/>");
      if (/firefox/i.test(navigator.userAgent)) {
        value = value.replace(/\s/g, '&nbsp;');
      }
      return value;
    };
    if (pos === void 0) {
      pos = this.getPos();
    }
    start_range = $inputor.val().slice(0, pos);
    end_range = $inputor.val().slice(pos);
    html = "<span style='position: relative; display: inline;'>" + format(start_range) + "</span>";
    html += "<span id='caret' style='position: relative; display: inline;'>|</span>";
    html += "<span style='position: relative; display: inline;'>" + format(end_range) + "</span>";
    mirror = new Mirror($inputor);
    return at_rect = mirror.create(html).rect();
  };

  InputCaret.prototype.getIEPosition = function(pos) {
    var h, inputorOffset, offset, x, y;
    offset = this.getIEOffset(pos);
    inputorOffset = this.$inputor.offset();
    x = offset.left - inputorOffset.left;
    y = offset.top - inputorOffset.top;
    h = offset.height;
    return {
      left: x,
      top: y,
      height: h
    };
  };

  return InputCaret;

})();

Mirror = (function() {
  Mirror.prototype.css_attr = ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopStyle", "borderRightStyle", "borderBottomStyle", "borderLeftStyle", "borderTopWidth", "boxSizing", "fontFamily", "fontSize", "fontWeight", "height", "letterSpacing", "lineHeight", "marginBottom", "marginLeft", "marginRight", "marginTop", "outlineWidth", "overflow", "overflowX", "overflowY", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "textAlign", "textOverflow", "textTransform", "whiteSpace", "wordBreak", "wordWrap"];

  function Mirror($inputor) {
    this.$inputor = $inputor;
  }

  Mirror.prototype.mirrorCss = function() {
    var css,
      _this = this;
    css = {
      position: 'absolute',
      left: -9999,
      top: 0,
      zIndex: -20000
    };
    if (this.$inputor.prop('tagName') === 'TEXTAREA') {
      this.css_attr.push('width');
    }
    $.each(this.css_attr, function(i, p) {
      return css[p] = _this.$inputor.css(p);
    });
    return css;
  };

  Mirror.prototype.create = function(html) {
    this.$mirror = $('<div></div>');
    this.$mirror.css(this.mirrorCss());
    this.$mirror.html(html);
    this.$inputor.after(this.$mirror);
    return this;
  };

  Mirror.prototype.rect = function() {
    var $flag, pos, rect;
    $flag = this.$mirror.find("#caret");
    pos = $flag.position();
    rect = {
      left: pos.left,
      top: pos.top,
      height: $flag.height()
    };
    this.$mirror.remove();
    return rect;
  };

  return Mirror;

})();

Utils = {
  contentEditable: function($inputor) {
    return !!($inputor[0].contentEditable && $inputor[0].contentEditable === 'true');
  }
};

methods = {
  pos: function(pos) {
    if (pos || pos === 0) {
      return this.setPos(pos);
    } else {
      return this.getPos();
    }
  },
  position: function(pos) {
    if (oDocument.selection) {
      return this.getIEPosition(pos);
    } else {
      return this.getPosition(pos);
    }
  },
  offset: function(pos) {
    var offset;
    offset = this.getOffset(pos);
    return offset;
  }
};

oDocument = null;

oWindow = null;

oFrame = null;

setContextBy = function(settings) {
  var iframe;
  if (iframe = settings != null ? settings.iframe : void 0) {
    oFrame = iframe;
    oWindow = iframe.contentWindow;
    return oDocument = iframe.contentDocument || oWindow.document;
  } else {
    oFrame = void 0;
    oWindow = window;
    return oDocument = document;
  }
};

discoveryIframeOf = function($dom) {
  var error;
  oDocument = $dom[0].ownerDocument;
  oWindow = oDocument.defaultView || oDocument.parentWindow;
  try {
    return oFrame = oWindow.frameElement;
  } catch (_error) {
    error = _error;
  }
};

$.fn.caret = function(method, value, settings) {
  var caret;
  if (methods[method]) {
    if ($.isPlainObject(value)) {
      setContextBy(value);
      value = void 0;
    } else {
      setContextBy(settings);
    }
    caret = Utils.contentEditable(this) ? new EditableCaret(this) : new InputCaret(this);
    return methods[method].apply(caret, [value]);
  } else {
    return $.error("Method " + method + " does not exist on jQuery.caret");
  }
};

$.fn.caret.EditableCaret = EditableCaret;

$.fn.caret.InputCaret = InputCaret;

$.fn.caret.Utils = Utils;

$.fn.caret.apis = methods;


}));

globals = {
	parent_site : '',
	current_user : false
};

Colors = {
	'text_color' : '#FFFFFF',
	'header_color' : '#556e8c',
	'links_color' : '#556e8c',
	'links_visited_color' : '#666666',
	'links_system_color' : '#888888',
	'irony_color' : '#CC3333',
	'moderator_color' : '#666666',
	'inputs_bg_color' : '#f3f0df',
	'inputs_text_color': '#000000',
	'inputs_text_blur_color': '#000000',
	'inputs_border_color': '#E9E9E9',
	'inputs_border_top_color': '#CCCCCC',
	'background_color': '#FFFFFF',
	'footer_gradient_color': '#969696',
	'tagline_border_color': '#CCCCCC',
	'tagline_text_color' : '#666666',
	'tagline_links_color' : '#556e8c',
	'information_bg_color': '#E9DFC3',
	'rating_text_color' : '#666666',
	'rating_bg_color' : '#F4F4F2',
	'rating_border_color' : '#E0E0E0',
	'rating_shadow_color' : '#FFFFFF',
	'rating_plus_color' : '#D4D4D4',
	'rating_plus_active_color' : '#666666',
	'info_bg_color' : '#E6E6E6',
	'info_text_color' : '#666666',
	'info_links_color' : '#556e8c'
};
var futuAlerts = {};
var futuAlert = new Class({
	duration: 222,
	initialize: function(text, close, className, animateAlertInQueue, errorsQuantity, closeTimeout){
		this.text = text;
		this.closeControl = close;
		this.closeTimeout = closeTimeout ? closeTimeout : 5000;
		this.className = className;
		this.errorsQuantity = errorsQuantity != undefined ? errorsQuantity : 1;
		this.alertHolder = $('futu_alerts_holder');
		this.animateAlertInQueue = typeof animateAlertInQueue !== 'undefined' ? animateAlertInQueue : true;

		// Если алерт уже существует — удаляется текущий элемент, таймаут автоматического скрытия попапа
		// и отрисовывается новый такой же алерт
		if (futuAlerts[text]) {
			clearTimeout(futuAlerts[this.text].timeout);
			//this.futuAlert = futuAlerts[this.text].el;
			// Если уже происходит анимация скрытия предыдущего попапа, ее нужно остановить
			if (futuAlerts[this.text].hideAnimation) {
				futuAlerts[this.text].hideAnimation.cancel();
			}
			futuAlerts[this.text].el.destroy();
			delete futuAlerts[this.text];

			this.renderAlert();
			if (this.animateAlertInQueue) {
				this.animateAlert({
					'margin-top':-10,
					'opacity': 100,
					'width': this.alertHolder.getCoordinates().width,
					'left':0
				});
			} else {
				ajaxHandler.loadingHighlight({
					button: this.futuAlert.getElement('.futu_dialog_popup_text'),
					color1: '0.5',
					color2: '1',
					attribute: 'opacity',
					loadingCheck: function () {
						return false;
					}
				});
			}
		} else {
			this.renderContainer();
			this.renderAlert();
			this.animateAlert();
		}
	},
	// Создание контейнера, в который вставляются все алерты
	renderContainer: function() {
		if (!this.alertHolder) {
			var futuAlertOuter = new Element('div', {
				'class' : 'futu_alert_outer'
			}).injectInside(document.body);

			var futuAlertFrame = new Element('div', {
				'class' : 'frame'
			}).injectInside(futuAlertOuter);

			this.alertHolder = new Element('div', {
				'class' : 'futu_alerts_holder',
				'id' : 'futu_alerts_holder'
			}).injectInside(futuAlertFrame);
		}
	},
	renderAlert: function() {
		var className = this.className || '';

		this.futuAlert = new Element('div', {
			'class' : ('futu_alert '+className)
		}).injectTop(this.alertHolder);

		var windowWidth = window.getSize().x;
		var futuAlertWidth = this.futuAlert.getSize().x;

		this.futuAlert.setStyle('width', windowWidth < futuAlertWidth ? windowWidth * 0.9 : futuAlertWidth);

		var futuAlertCoords = this.futuAlert.getCoordinates();

		$('futu_alerts_holder').setStyle('left', windowWidth/2 - futuAlertCoords.width/2);

		var futuAlertText =  new Element('div', {
			'class' : 'futu_dialog_popup_text'
		}).injectInside(this.futuAlert);

		futuAlertText.innerHTML = this.text;
		datesHandler.setDates();

		// Добавление текущего сообщения в список видимых на странице сообщений
		// (ключи объекта — текст сообщения)
		futuAlerts[this.text] = {
			text: this.text,
			el: this.futuAlert
		};

		if (this.closeControl) {
			var futuAlertCloseButton =  new Element('a', {
				'href' : '#',
				'class' : 'futu_alert_close_button',
				'events' : {
					'click' : function (event) {
						if (!Browser.Engine.trident) {
							event.preventDefault();
						} else {
							event.returnValue = false;
						}

						this.close();
					}.bind(this)
				}
			}).injectInside(this.futuAlert);
		} else {
			var close_duration = this.errorsQuantity > 1 ? this.errorsQuantity * this.closeTimeout : this.closeTimeout;
			// Сохранение таймаута на скрытие алерта
			futuAlerts[this.text].timeout = setTimeout(function () {
				this.close();
			}.bind(this), close_duration);

			// Навешивание события клика на алерт для быстрого скрытия алерта
			this.futuAlert.addEvent('click', function () {
				clearTimeout(futuAlerts[this.text].timeout);
				this.close();
			}.bind(this));
		}
	},

	animateAlert: function(params) {
		var futuAlertCoords = this.futuAlert.getCoordinates(),
			params = params || {},
			styles = {
				'position':'relative',
				'top':0,
				'margin-top':-futuAlertCoords.height,
				'opacity':0
			};
		Object.append(styles, params);
		this.futuAlert.setStyles(styles);
		new Fx.Morph(this.futuAlert, {
			duration: this.duration
		}).start({
			'margin-top':0,
			'opacity':1
		});
	},

	// Анимация скрытия алерта
	close: function() {
		var futuAlertCoords = this.futuAlert.getCoordinates();
		futuAlerts[this.text].hideAnimation = new Fx.Morph(this.futuAlert, {
			duration: this.duration,
			onComplete: function() {
				// На завершении анимации — удаление элемента из DOM и из списка открытых на странице алертов
				this.futuAlert.setStyle('display','none');
				this.futuAlert.destroy();
				delete futuAlerts[this.text];
			}.bind(this)
		}).start({
			'height':1,
			'overflow':'hidden',
			'margin-bottom':0
		});
	}
});

futu_password_confirm = function (text, onValidate, onSuccess) {
	if (!$('futu_alerts_holder') || !$('futu_alerts_holder').getElement('form')) {
		text = text || 'Ваш пароль?';
		var fa = new futuAlert('<form action="" style="text-align:left;">' + text + ' <input type="password" class="i-form_text_input"><input type="submit" class="pos_hidden"></form>', true, 'rock_red');
		var form = $('futu_alerts_holder').getElement('form');
		var password_input = form.getElement('input');
		form.addEvent('submit', function (e) {
			e = new Event(e);
			e.preventDefault();
			if (password_input.value.trim().length == 0) {
				ajaxHandler.highlightField(password_input, '#E9DFC3', '#FF0000');
			} else {
				onValidate(password_input.value);
			}
		});
		(function () {password_input.focus();}).delay(200);
		return fa;
	}
};
ajaxHandler = {
	alertError : function (message, errors_quantity, close) {
		var errors_quantity = errors_quantity != undefined ? errors_quantity : 1;
		var close = close != undefined ? close : false;
		if (message && message != '') {
			new futuAlert(message, close, 'red', true, errors_quantity);
		} else {
			new futuAlert('<span class="b-futu_alert_error_text">Ошибка без названия.</span>', false, 'red');
		}
	},
	checkResponse : function (ajaxObj, text, url, alerts_off) {
		var message = '';
		var close = false;
		var messages_quantity = 0;
		var kl = localMessages.fixed_error_messages.length;
		try {
			if (text) {
				var response = JSON.decode(ajaxObj);
			} else {
				var response = JSON.decode(ajaxObj.responseText);
			}
		} catch(err) {
			ajaxHandler.alertError('<span class="b-futu_alert_error_text">Сервер ответил в формате, который мы не можем расшифровать.</span>');
			return false;
		}
		
		if (!$defined(response)) {
			ajaxHandler.alertError('<span class="b-futu_alert_error_text">Сервер почему-то ничего не ответил.</span>');
			return false;
		}
		
		if (!response.status) {
			// ajaxHandler.alertError('Сервер ни с того, ни с сего сообщил следующее: «' + ajaxObj.responseText + '»');
			// return false;
		}
		
		if (response.status == 'ERR') {
			for (var i = 0; i < response.errors.length; i++) {
				messages_quantity++;
				message += localMessages.getErrorMessageByError(response.errors[i], url);
				if (response.errors.length > 1 && i < response.errors.length - 1) {
					message += '<br>';
				}
				for (var k = 0; k < kl; k++) {
					if (response.errors[i].code == localMessages.fixed_error_messages[k]) {
						close = true;
					}
				}
			}
			if (response.warnings) {
				message += '<br>';
				for (var i = 0; i < response.warnings.length; i++) {
					messages_quantity++;
					message += localMessages.getErrorMessageByError(response.warnings[i], url);
					if (response.warnings.length > 1 && i < response.warnings.length - 1) {
						message += '<br>';
					}
					for (var k = 0; k < kl; k++) {
						if (response.warnings[i].code == localMessages.fixed_error_messages[k]) {
							close = true;
						}
					}
				}
			}
			!alerts_off && ajaxHandler.alertError(message, messages_quantity, close);
			return false;
		}
		
		if (response.status == 'OK') {
			if (response.warnings) {
				for (var i = 0; i < response.warnings.length; i++) {
					messages_quantity++;
					message += localMessages.getErrorMessageByError(response.warnings[i], url);
					if (response.warnings.length > 1 && i < response.warnings.length - 1) {
						message += '<br>';
					}
					for (var k = 0; k < kl; k++) {
						if (response.warnings[i].code == localMessages.fixed_error_messages[k]) {
							close = true;
						}
					}
				}
				!alerts_off && ajaxHandler.alertError(message, messages_quantity, close);
			}
			return response;
		} else {
			return response;
		}
	},
	highlightField : function (input, bg_color, highlight_color, attribute) {
		var input = $(input);
		var bg_color = bg_color || Colors.inputs_bg_color;
		var highlight_color = highlight_color || '#FF0000';
		var attribute = attribute || 'backgroundColor';
		var loadingHighlightFx = new Fx.Tween($(input),  {'link':'cancel', 'onComplete' : function () {
			$(input).erase('style');
			$(input).removeClass('js-highlighting_field');
		}});
		if (!$(input).hasClass('js-highlighting_field')) {
			$(input).addClass('js-highlighting_field');
			//input.style.backgroundColor = highlight_color;
			loadingHighlightFx.start(attribute, highlight_color, bg_color);
		}
	},
	loadingHighlight : function (params) {
		var button = $(params.button);
		params.attribute = params.attribute || 'background-color';
		params.timing = params.timing || 333;
		var fx = new Fx.Tween($(button),  {'duration':params.timing, 'onComplete' : function () {
			if ($(button).hasClass('js-lh_to_color_2')) {
				fx.start(params.attribute, params.color1, params.color2);
				$(button).removeClass('js-lh_to_color_2');
			} else {
				if (params.loadingCheck()) {
					fx.start(params.attribute, params.color2, params.color1);
					$(button).addClass('js-lh_to_color_2');
				} else {
					if (params.transparent) {
						$(button).erase('style');
					}
					$(button).removeClass('js-lh_active');

					if (params.onHighlightAnimationComplete) {
						params.onHighlightAnimationComplete();
					}
				}
			}
		}});
		if ($(button).hasClass('js-lh_active')) {
			(function () {
				if (params.loadingCheck()) {
					fx.start(params.attribute, params.color2, params.color1);
					$(button).addClass('js-lh_to_color_2');
					$(button).addClass('js-lh_active');
				}
			}).delay(params.timing);
		} else {
			fx.start(params.attribute, params.color2, params.color1);
			$(button).addClass('js-lh_to_color_2');
			$(button).addClass('js-lh_active');
		}
		return fx;
	}
};

futuAjax = new Class({
	Implements: Options,
	options: {
		button : false,
		animated_element : false,
		remove_element_color : true,
        loading_class : 'js-loading',
        attribute : 'background-color',
		dont_stop_animation : false,
		color_to : '#FFFFFF',
		color_from : '#EDF14B',
		alerts_off : false,
		url : '/ajax/',
		data : '',
		type: 'POST',
		checkResponseFunction : ajaxHandler.checkResponse,
		onErrorFunction : false,
		onCustomErrorFunction : $empty,
		onBeforeLoadFunction : $empty,
		onLoadFunction : $empty,
		onCompleteFunction : $empty,
		alertFunction : futuAlert,
		checkAjaxLoadedFunction : function () {return this.button.hasClass(this.loading_class);},
		setAjaxLoadingFunction : function () {this.button.addClass(this.loading_class);},
		removeAjaxLoadingFunction : function () {this.button.removeClass(this.loading_class);}
    },
	initialize : function (options) {
		this.setOptions(options);
		this.promise = new promise.Promise();
		this.button = this.options.button;
		this.loading_class = this.options.loading_class;
		this.animated_element = this.options.animated_element || this.button;
		this.remove_element_color = this.options.remove_element_color;
		this.color_to = this.options.color_to;
		this.color_from = this.options.color_from;
		this.alerts_off = this.options.alerts_off;
		this.url = this.options.url;
		this.data = this.options.data;
		this.type = this.options.type;
		this.checkResponseFunction = this.options.checkResponseFunction;
		this.onErrorFunction = this.options.onErrorFunction;
		this.onCustomErrorFunction = this.options.onCustomErrorFunction;
		this.onLoadFunction = this.options.onLoadFunction;
		this.onCompleteFunction = this.options.onCompleteFunction;
		this.alertFunction = this.options.alertFunction;
		if (!this.button) {
			new this.alertFunction('Не указана обязательная кнопка.');
		}
		var completeFlags = {
			isAnimationComplete: false,
			isAjaxRequestComplete: false,
			ajaxResponse: null
		};
		var onComplete = function (completeFlag, response) {
			completeFlags[completeFlag] = true;

			if (response) {
				completeFlags.ajaxResponse = response;
			}

			if (completeFlags.isAnimationComplete && completeFlags.isAjaxRequestComplete) {
				this.onCompleteFunction(completeFlags.ajaxResponse);
			}
		}.bind(this);
		if (this.button && !this.options.checkAjaxLoadedFunction()) {
			(this.options.setAjaxLoadingFunction).bind(this).call();
			(this.options.onBeforeLoadFunction).bind(this).call();
			this.loading_animation_fx = ajaxHandler.loadingHighlight({'button':this.animated_element,
				'color1':this.color_to,
				'color2':this.color_from,
				'attribute':this.options.attribute,
				'loadingCheck':(this.options.checkAjaxLoadedFunction).bind(this),
				'transparent':this.remove_element_color,
				'onHighlightAnimationComplete': function () {
					onComplete('isAnimationComplete');
				}.bind(this)
			});
			this.postAjax(this.url, this.data, this.type, (function (ajaxObj) {
				if (!this.options.dont_stop_animation) {
					(this.options.removeAjaxLoadingFunction).bind(this).call();
				}
				var response = ajaxHandler.checkResponse(ajaxObj, false, this.url, this.alerts_off);
				if (response) {
					this.onLoadFunction(response);
					this.promise.done(null, response);
					onComplete('isAjaxRequestComplete', response);
				} else {
					response = JSON.decode(ajaxObj.responseText);
					this.onCustomErrorFunction(response);
				}
			}).bind(this), this);
		}
		return this.promise;
	},
	postAjax : function (url, data, type, ajaxCallBackFunction) {
		var parseData = data.parseQueryString();
		if (globals.user && globals.user.csrf_token && type == 'POST' && !parseData.csrf_token) {
			data += '&csrf_token=' + encodeURIComponent(globals.user.csrf_token);
		}
		var ajaxObject = null;
		if (window.XMLHttpRequest) { // branch for native XMLHttpRequest object
			ajaxObject = new XMLHttpRequest();
		} else if (window.ActiveXObject) { // branch for IE/Windows ActiveX version
			var ajaxObject = new ActiveXObject("Microsoft.XMLHTTP");
		}
		if (ajaxObject) {
			ajaxObject.onreadystatechange = (function(){
				// only if req shows "complete"
				if (ajaxObject.readyState == 4) {
					// only if "OK"
					if (ajaxObject.status == 200) {
						// ...processing statements go here...
						ajaxCallBackFunction.call(this, ajaxObject);
					} else {
						if (ajaxObject.status > 0) {
							if(this.onErrorFunction){
								this.onErrorFunction(ajaxObject);	
							}
							new futuAlert(('<span class="b-futu_alert_error_text">Ошибка сервера:</span><br>' + ajaxObject.statusText), true, 'rock_red');
						}
						(this.options.removeAjaxLoadingFunction).bind(this).call();
					}
				}
			}).bind(this);

			if (type == 'GET') {
				url += data != '' ? '?' + data : '';
			}

			ajaxObject.open(type, url, true);
			try {
				ajaxObject.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				//ajaxObject.setRequestHeader("Content-length", data.length);
				//ajaxObject.setRequestHeader("Connection", "close");
			} catch (error) {
				
			}
			ajaxObject.send(data);
		}
	}
});

ajaxHandlerNew = {
	alertError : function (message, errors_quantity, close) {
		var errors_quantity = errors_quantity != undefined ? errors_quantity : 1;
		var close = close != undefined ? close : false;
		if (message && message != '') {
			new futuAlert(message, close, 'red', true, errors_quantity);
		} else {
			new futuAlert('<span class="b-futu_alert_error_text">Ошибка без названия.</span>', false, 'red');
		}
	},
	checkResponse : function (response, text, url, alerts_off) {
		var message = '';
		var close = false;
		var messages_quantity = 0;
		var kl = localMessages.fixed_error_messages.length;

		if (!response.status) {
			ajaxHandler.alertError('Сервер ни с того, ни с сего сообщил следующее: «' + response + '»');
			return false;
		}
		if (response.status == 'error') {
			for (var i = 0; i < response.errors.length; i++) {
				messages_quantity++;
				message += localMessages.getErrorMessageByError(response.errors[i], url);
				if (response.errors.length > 1 && i < response.errors.length - 1) {
					message += '<br><br>';
				}
				for (var k = 0; k < kl; k++) {
					if (response.errors[i].code == localMessages.fixed_error_messages[k]) {
						close = true;
					}
				}
			}
			if (response.warnings) {
				message += '<br><br>';
				for (var i = 0; i < response.warnings.length; i++) {
					messages_quantity++;
					message += localMessages.getErrorMessageByError(response.warnings[i].description, url);
					if (response.warnings.length > 1 && i < response.warnings.length - 1) {
						message += '<br><br>';
					}
					for (var k = 0; k < kl; k++) {
						if (response.warnings[i].code == localMessages.fixed_error_messages[k]) {
							close = true;
						}
					}
				}
			}
			!alerts_off && ajaxHandler.alertError(message, messages_quantity, close);
			return response;
		}

		if (response.status == 'OK') {
			if (response.warnings) {
				for (var i = 0; i < response.warnings.length; i++) {
					messages_quantity++;
					message += localMessages.getErrorMessageByError(response.warnings[i], url);
					if (response.warnings.length > 1 && i < response.warnings.length - 1) {
						message += '<br>';
					}
					for (var k = 0; k < kl; k++) {
						if (response.warnings[i].code == localMessages.fixed_error_messages[k]) {
							close = true;
						}
					}
				}
				!alerts_off && ajaxHandler.alertError(message, messages_quantity, close);
			}
			return response;
		} else {
			return response;
		}
	},
	highlightField : function (input, bg_color, highlight_color, attribute) {
		var input = $(input);
		var bg_color = bg_color || Colors.inputs_bg_color;
		var highlight_color = highlight_color || '#FF0000';
		var attribute = attribute || 'backgroundColor';
		var loadingHighlightFx = new Fx.Tween($(input),  {'link':'cancel', 'onComplete' : function () {
			$(input).erase('style');
			$(input).removeClass('js-highlighting_field');
		}});
		if (!$(input).hasClass('js-highlighting_field')) {
			$(input).addClass('js-highlighting_field');
			//input.style.backgroundColor = highlight_color;
			loadingHighlightFx.start(attribute, highlight_color, bg_color);
		}
	},
	loadingHighlight : function (params) {
		var button = $(params.button);
		params.attribute = params.attribute || 'background-color';
		params.timing = params.timing || 333;
		var fx = new Fx.Tween($(button),  {'duration':params.timing, 'onComplete' : function () {
			if ($(button).hasClass('js-lh_to_color_2')) {
				fx.start(params.attribute, params.color1, params.color2);
				$(button).removeClass('js-lh_to_color_2');
			} else {
				if (params.loadingCheck()) {
					fx.start(params.attribute, params.color2, params.color1);
					$(button).addClass('js-lh_to_color_2');
				} else {
					if (params.transparent) {
						$(button).erase('style');
					}
					$(button).removeClass('js-lh_active');

					if (params.onHighlightAnimationComplete) {
						params.onHighlightAnimationComplete();
					}
				}
			}
		}});
		if ($(button).hasClass('js-lh_active')) {
			(function () {
				if (params.loadingCheck()) {
					fx.start(params.attribute, params.color2, params.color1);
					$(button).addClass('js-lh_to_color_2');
					$(button).addClass('js-lh_active');
				}
			}).delay(params.timing);
		} else {
			fx.start(params.attribute, params.color2, params.color1);
			$(button).addClass('js-lh_to_color_2');
			$(button).addClass('js-lh_active');
		}
		return fx;
	}
};

futuAjaxNew = new Class({
	Implements: Options,
	options: {
		button : false,
		animated_element : false,
		remove_element_color : true,
        loading_class : 'js-loading',
        attribute : 'background-color',
		dont_stop_animation : false,
		color_to : '#FFFFFF',
		color_from : '#EDF14B',
		alerts_off: false,
		url : '/ajax/',
		data : '',
		type: 'POST',
		checkResponseFunction : ajaxHandlerNew.checkResponse,
		onErrorFunction : function(ajaxObject){
			if (ajaxObject.status != 200) {
				new futuAlert(('<span class="b-futu_alert_error_text">Ошибка сервера:</span><br>' + ajaxObject.statusText), true, 'rock_red');
			} else {
				ajaxHandler.alertError('<span class="b-futu_alert_error_text">Сервер ответил в формате, который мы не можем расшифровать.</span>');
			}
			(this.options.removeAjaxLoadingFunction).bind(this).call();
		},
		onCustomErrorFunction : $empty,
		onBeforeLoadFunction : $empty,
		onLoadFunction : $empty,
		onCompleteFunction : $empty,
		alertFunction : futuAlert,
		headerContentType: 'application/x-www-form-urlencoded',
		headerAccept: '*/*',

		checkAjaxLoadedFunction : function () {return this.button.hasClass(this.loading_class);},
		setAjaxLoadingFunction : function () {this.button.addClass(this.loading_class);},
		removeAjaxLoadingFunction : function () {this.button.removeClass(this.loading_class);}
    },
	initialize : function (options) {
		this.setOptions(options);
		this.promise = new promise.Promise();
		this.button = this.options.button || null;
		this.loading_class = this.options.loading_class;
		this.animated_element = this.options.animated_element || this.button;
		this.remove_element_color = this.options.remove_element_color;
		this.color_to = this.options.color_to;
		this.color_from = this.options.color_from;
		this.alerts_off = this.options.alerts_off
		this.url = this.options.url;
		this.data = this.options.data;
		this.type = this.options.type;
		this.checkResponseFunction = this.options.checkResponseFunction;
		this.onErrorFunction = this.options.onErrorFunction;
		this.onCustomErrorFunction = this.options.onCustomErrorFunction;
		this.onLoadFunction = this.options.onLoadFunction;
		this.onCompleteFunction = this.options.onCompleteFunction;
		this.alertFunction = this.options.alertFunction;
		this.headerContentType = this.options.headerContentType;
		this.headerAccept = this.options.headerAccept;
		if (!this.button) {
			new this.alertFunction('Не указана обязательная кнопка.');
		}
		var completeFlags = {
			isAnimationComplete: false,
			isAjaxRequestComplete: false,
			ajaxResponse: null
		};
		var onComplete = function (completeFlag, response) {
			completeFlags[completeFlag] = true;

			if (response) {
				completeFlags.ajaxResponse = response;
			}

			if (completeFlags.isAnimationComplete && completeFlags.isAjaxRequestComplete) {
				this.onCompleteFunction(completeFlags.ajaxResponse);
			}
		}.bind(this);
		if (this.button && !this.options.checkAjaxLoadedFunction()) {
			(this.options.setAjaxLoadingFunction).bind(this).call();
			(this.options.onBeforeLoadFunction).bind(this).call();
			this.loading_animation_fx = ajaxHandlerNew.loadingHighlight({'button':this.animated_element,
				'color1':this.color_to,
				'color2':this.color_from,
				'attribute':this.options.attribute,
				'loadingCheck':(this.options.checkAjaxLoadedFunction).bind(this),
				'transparent':this.remove_element_color,
				'onHighlightAnimationComplete': function () {
					onComplete('isAnimationComplete');
				}.bind(this)
			});
			this.postAjax(this.url, this.data, this.type, (function (response) {
				if (!this.options.dont_stop_animation) {
					(this.options.removeAjaxLoadingFunction).bind(this).call();
				}
				this.onLoadFunction(response);
				onComplete('isAjaxRequestComplete', response);
			}).bind(this), this);
		}
		return this.promise;
	},
	postAjax : function (url, data, type, ajaxCallBackFunction) {
		var response = null;
		var ajaxObject = null;

		if (window.XMLHttpRequest) { // branch for native XMLHttpRequest object
			ajaxObject = new XMLHttpRequest();
		} else if (window.ActiveXObject) { // branch for IE/Windows ActiveX version
			ajaxObject = new ActiveXObject("Microsoft.XMLHTTP");
		}
		if (ajaxObject) {
			ajaxObject.onreadystatechange = (function(){
				// only if req shows "complete"
				if (ajaxObject.readyState == 4) {
					var response = null;
					try {
						response = JSON.decode(ajaxObject.responseText);
					} catch(err) {
						this.options.onErrorFunction.call(this, ajaxObject);
					}

					if (!response) {
						return false;
					}

					// only if "OK"
					if (ajaxObject.status == 200) {
						// ...processing statements go here...
						ajaxCallBackFunction.call(this, response);
						this.promise.done(null, response);
					} else {
						response = ajaxHandlerNew.checkResponse(response, false, this.url, this.alerts_off);
						if (ajaxObject.status > 0) {
							this.onCustomErrorFunction(ajaxObject);
						}
						(this.options.removeAjaxLoadingFunction).bind(this).call();
					}
				}
			}).bind(this);

			if (type == 'GET') {
				url += data != '' ? '?' + data : '';
				data = '';
			}
			ajaxObject.open(type, url, true);
			ajaxObject.setRequestHeader("Content-type", this.options.headerContentType);
			ajaxObject.setRequestHeader("Accept", this.options.headerAccept);
			ajaxObject.setRequestHeader("X-Futuware-UID", Cookie.read('uid'));
			ajaxObject.setRequestHeader("X-Futuware-SID", Cookie.read('sid'));
			ajaxObject.send(data);
		}
	}
});

if (window.jQuery) {
	(function ($) {

	    var setupOptions = {},
	        $document = $(document);

	    function setCSRFToken (object, token) {
	        if (object.csrf_token) return;
	        try {
	            object.csrf_token = token;
	        } catch (error) {};
	    };

	    $.ajaxPrefilter(function (requestOptions, originalOptions) {
	        requestOptions.method = requestOptions.method || requestOptions.type;

	        var url = requestOptions.url;
	        if (/^(?:http(?:s)?:)?\/\/(?:graph\.)?facebook\.com\//.test(url) ||
	            /^(?:http(?:s)?:)?\/\/vkontakte\.ru\//.test(url) ||
	            /^(?:http(?:s)?:)?\/\/vk\.com\//.test(url)) {
	            for (var s in setupOptions) {
	                requestOptions[s] = originalOptions[s];
	            }
	            requestOptions.global = false;
	            return;
	        }

	        if (requestOptions.method === 'POST' && globals.user && globals.user.csrf_token) {
	            if (requestOptions.processData) {
	                setCSRFToken(originalOptions.data = originalOptions.data || {}, globals.user.csrf_token);
	            } else {
	                try {
	                    var data = {};
	                    originalOptions.data = (originalOptions.data || '').replace(/^\?/, '').split('&');
	                    for (var d = 0, dl = originalOptions.data.length; d < dl; d++) {
	                        var pair = originalOptions.data[d].split('=');
	                        data[pair[0]] = pair[1];
	                    }
	                    setCSRFToken(data, globals.user.csrf_token);
	                    requestOptions.data = decodeURIComponent($.param(data));
	                } catch (error) {};
	            }
	        }

	        if (requestOptions.method !== 'GET' && requestOptions.processData === 'json/stringify') {
	            requestOptions.contentType = 'application/json';
	            requestOptions.data = JSON.stringify(originalOptions.data);
	        }
	    });

	    $.ajaxSetup(setupOptions = {
	        dataType: 'json',
	        processData: 'json/stringify',
	        contentType: 'application/x-www-form-urlencoded',
	        headers: {
	            'X-Futuware-UID': Cookie.read('uid'),
	            'X-Futuware-SID': Cookie.read('sid'),
	        }
	    });

	    $document.ajaxError(function (event, jqXHR, options, error) {
	        // Если не смогли распарсить JSON
	        if (error && (error + '').indexOf('JSON') !== -1) {
	            new futuAlert(
	                '<span class="b-futu_alert_error_text">' + 'Сервер ответил в формате, который мы не можем расшифровать.' + '</span>',
	                false,
	                'red'
	            );
	        } else if (jqXHR.responseJSON && jqXHR.responseJSON.errors) {
	            alertErrorsByData(jqXHR.responseJSON, options.url)
	        } else if (error) {
	            new futuAlert(
	                '<span class="b-futu_alert_error_text">' + 'Ошибка сервера:' + '</span><br />' + error,
	                true,
	                'rock_red'
	            );
	        }
	    });

	    $document.ajaxSuccess(function (event, jqXHR, options, data) {
	        if (data === null || data === undefined) {
	            /*new futuAlert(
	                '<span class="b-futu_alert_error_text">' + _('Сервер почему-то ничего не ответил.') + '</span>',
	                false,
	                'red'
	            );*/
	        } else {
	            alertErrorsByData(data, options.url)
	        }
	    });

	    window.FuturicoHttpRequest = function (options) {
	        var errorCallback = options.error,
	            successCallback = options.success;

	        options.error = function (jqXHR, textStatus, error, isSynthetic) {
	            var data = jqXHR.responseText;
	            if (options.dataType === 'json' || isSynthetic) {
	                try {
	                    data = JSON.parse(data);
	                } catch (error) {};
	            }
	            errorCallback && errorCallback.call(this, data, options.url, jqXHR, textStatus, error);
	        };

	        options.success = function (data, textStatus, jqXHR) {
	            if (!data || !data.status || data.status === 'OK' && !data.errors || data.status == 'CANCELLED' || data.status == 'PENDING' || data.status == 'FOUND' || data.status == 'CHATTING') {
	                successCallback && successCallback.call(this, data);
	            } else {
	                options.error.call(this, jqXHR, textStatus, data, true);
	            }
	        };
	        return $.ajax(options);
	    };


	    function alertErrorsByData(data, url) {
	        var errors = data.errors || [],
	            warnings = data.warnings || [],
	            messages = errors.concat(warnings),
	            isMessageAutoClosed = true,
	            message = '';
	        if (!messages.length) {
	            return
	        } else {
	            for (var m = 0, ml = messages.length; m<ml; m++) {
	                message += localMessages.getErrorMessageByError(messages[m], url) + '<br />';
	                isMessageAutoClosed = isMessageAutoClosed && (localMessages.fixed_error_messages.indexOf(messages[m].code) === -1);
	            }
	        }
	        new futuAlert(
	            message.slice(0, -6),
	            !isMessageAutoClosed,
	            'red',
	            true,
	            messages.length
	        );
	    }

	})(jQuery);
}

(function () {

    window.Router = function (storage) {
        this.storage = storage || {};
        this.domain = (typeof(globals) != 'undefined' && globals.base_domain) ? globals.base_domain.url : '';
    };

    window.Router.prototype.generate = function (name, params, options) {
        var template = this.storage[name];
        params = params || {};
        options = options || {};

        if (!template) throw 'Please, check the name of URL.';
        if (template.slice(-1) !== '/') {
            template += '/';
        }

        var url = template.replace(/[/?&=]:[-_A-Za-z0-9]+/g, function (match) {
            var key = match.slice(2);
            if (match[0] !== '/') {
                params[key] = encodeURIComponent(params[key]);
            }
            return match[0] + (params[key] || '');
        }).replace(/^{domain}/, this.domain);

        if (this.storage[name].slice(-1) !== '/') {
            url = url.slice(0, -1);
        }

        return url;
    };

})();

var ajaxUrls = {
	register: '/ajax/register/',
	adv: '/ajax/adv/',
	amnesia: '/ajax/amnesia/',
	login: '/ajax/auth/login/',
	logout: '/ajax/auth/logout/',

	post_submit: function() {
		if (globals.base_domain) {
			return globals.base_domain.url + '/api/posts/?domain_prefix=' + globals.domain.prefix;
		}
		else {
			return '/api/posts/';
		}
	},
	post_preview: '/ajax/post/preview/',
	post_moderate: function(post_id) {
		if (globals.base_domain) {
			return globals.base_domain.url + '/api/posts/' + post_id;
		}
		else {
			return '/api/posts/' + post_id;
		}
	},
	post_delete: '/ajax/post/delete/',
	post_edit: '/ajax/post/edit/',
	post_vote: '/ajax/vote/post/',
	post_comments: '/ajax/comments/list',
	post_comments_threshold: '/ajax/post/set_comments_threshold',
	post_view: '/ajax/post_view/',

	sandbox_post_submit: '/ajax/sandbox/yarrr/',

	comment_edit: '/ajax/comment/edit/',
	comment_delete: '/ajax/comment/delete/',
	comment_submit: '/ajax/comment/yarrr/',
	comment_vote: '/ajax/vote/comment/',

	users_ignore: '/ajax/feeds/users/ignore/',
	users_search: '/ajax/users/search/',
	users_list: '/ajax/users/list/',
	user_ban: '/ajax/user/ban/new',
	user_ban_delete: '/ajax/user/ban/delete/',
	user_comments: '/ajax/user/comments/',
	user_posts: '/ajax/user/posts/',
	user_note: '/api/user_notes/',
	user_note_set: '/api/user_notes/:note_id/',
	user_karma_list: '/ajax/user/karma/list/',
	user_karma_vote: '/ajax/user/karma/vote/',
	vote_list: '/ajax/vote/list/',
	profile_settings: '/ajax/profile/settings/',
	profile_details: '/ajax/profile/details/',
	profile_avatar: function(type, login) {
		return '/api/users/' + login + '/avatar/' + type + '/';
	},
	password: '/ajax/password/',
	profile_email_forwarding : '/ajax/profile/email_forwarding',

	inbox_comment_submit: '/ajax/inbox/comment/yarrr/',
	inbox_delete: '/ajax/inbox/delete/',
	inbox_post_submit: '/ajax/inbox/post/yarrr/',
	inbox_acl: '/ajax/inbox/acl/',
	inbox_moar: '/ajax/inbox/moar/',
	inbox_edit : '/ajax/inbox/post/edit/',
	inbox_comments: '/ajax/inbox/comments/list/',

	domain_create: '/ajax/fraud/subdomain/',
	domains: '/ajax/domains/',
	controls_acl: '/ajax/controls/acl/',
	controls_acl_add: '/ajax/controls/acl/add/',
	controls_acl_remove: '/ajax/controls/acl/remove/',
	controls_editors_add: '/ajax/controls/editors/add/',
	controls_editors_remove: '/ajax/controls/editors/remove/',
	controls_edit: '/ajax/controls/edit/',
	controls_delete: '/ajax/controls/delete/',
	controls_hand_over: '/ajax/controls/hand_over_request/',
	controls_cancel_hand_over: '/ajax/controls/cancel_hand_over/',
	controls_access: '/ajax/controls/access/',
	controls_discrimination: '/ajax/controls/discrimination/',

	media: '/ajax/media/',
	sandbox_media: '/ajax/sandbox/media/',
	media_set_add: '/ajax/media_set/add/',
	media_set_remove: '/ajax/media_set/remove/',

	greetings_add: '/ajax/greetings/add/',
	greetings_edit: '/ajax/greetings/edit/',
	greetings_delete: '/ajax/greetings/delete/',

	placeholders_add: '/ajax/post_placeholder/add/',
	placeholders_edit: '/ajax/post_placeholder/edit/',
	placeholders_delete: '/ajax/post_placeholder/delete/',

	feeds: '/ajax/feeds/index/',
	feeds_threshold : '/ajax/feeds/settings/thresholds/',
	feeds_type : '/ajax/feeds/settings/feed_type/',
	feeds_mode: '/ajax/feeds/mode/',
	feeds_domains_ignore: '/ajax/feeds/domains/ignore/',
	feeds_domains_unsubscribe: '/ajax/feeds/domains/unsubscribe/',
	feeds_random_subscribing: '/ajax/feeds/domains/random_subscribing_to_top',

	feeds_post_ignore: '/ajax/feeds/posts/ignore/',
	feeds_post_unignore: '/ajax/feeds/posts/unignore/',
	hidden_post_moar: '/ajax/post/hidden/moar',

	search_domains_hostname: '/ajax/blogs/search_by_hostname/',
	search_docs: '/ajax/search/docs/',
	search_users: '/ajax/search/users/',
	blogs_search: '/ajax/blogs/search/',

	blogs_tags_moar: '/ajax/blogs/tags/moar/',

	invite_resend: '/ajax/invite/resend/',
	invite_cancel: '/ajax/invite/cancel/',
	invite_issue: '/ajax/invite/issue/',

	index_moar: '/ajax/index/moar/',

	tags_list: '/ajax/tag/list/',
	tag_validate: '/ajax/tag/validate/',
	tags_add: '/ajax/tag/add/',
	tag_delete : '/ajax/tag/delete',
	tags_cloud : '/ajax/tag/cloud',

	favourites_list: '/ajax/favourites/list/',
	favourites_out: '/ajax/favourites/out/',
	interest_moar: '/ajax/interest/moar/',
	interest_out: '/ajax/interest/out/',
	interest_reason: '/ajax/interest/reason/',
	getMyPostsCounter: function (type) {
		return '/ajax/' + type + '/unread_count/'
	},
	getProfileData: function(data_type, user_login) {		
		if (data_type == '') {
			return '/api/users/' + user_login + '/info/' 	
		}
		if (data_type == 'favourites') {
			return '/api/users/' + user_login + '/' + data_type + '/posts' ;
		}
		return '/api/users/' + user_login + '/' + data_type + '/';
	},
	getProfileBackgroundUrl: function(login) {
		return '/api/users/' + login + '/background/'
	},

	live_stream: '/ajax/hardcore/',

	validate_login: '/ajax/validate/login/',
	validate_email: '/ajax/validate/email/',
	activation_resend_email: '/ajax/activation/resend_email/',
	activation_change_email: '/ajax/activation/change_email/',
	notifications_dismiss: '/ajax/notifications/dismiss',


	elections_settings : '/ajax/elections/settings/',
	elections_disable : '/ajax/elections/disable/',
	elections_nominate : '/ajax/elections/edit_candidate/',
	elections_candidates: '/ajax/elections/get_top_candidates',
	elections_vote : '/ajax/elections/add_vote',
	elections_unvote : '/ajax/elections/cancel_vote',
	elections_live_top: '/ajax/elections/top_candidates_live',
	

	fraud_refuel: '/fraud/refuel/',
	fraud_username: '/ajax/fraud/username/',
	fraud_greetings: '/ajax/fraud/greetings/',
	fraud_professional: '/ajax/fraud/professional/',
	fraud_freetime_preview: '/ajax/fraud/freetime/preview/',
	fraud_freetime_submit : '/ajax/fraud/freetime/',
	fraud_africa: '/ajax/fraud/africa/',
	fraud_settings: '/ajax/fraud/settings/',

	fraud_ranks_preview : '/ajax/fraud/rank/preview',
	fraud_ranks_set : '/ajax/fraud/rank/set',
	fraud_ranks_reset : '/ajax/fraud/rank/reset',
	fraud_ranks_more : '/ajax/fraud/rank/more',
	fraud_ad: '/ajax/fraud/domain_ad/add/',
	fraud_ad_delete: '/ajax/fraud/domain_ad/delete/',
	fraud_ad_preview: ' /ajax/fraud/domain_ad/preview/',

	fraud_market_order_add: ' /fraud/',

	top_delivery_regions: '/api/top_delivery/geo/regions/',
	getTopDeliveryCitiesUrl: function(region_id) {
		return '/api/top_delivery/geo/regions/' + region_id + '/cities/'
	},
	'market_products': '/api/products/',
	getMarketOrder: function(order_id) {
		return '/api/purchases/purchase/' + order_id;
	},
	getPurchaceOrderUrl: function(payment_system) {
		return '/api/purchases/order/' + payment_system + '/';
	},
	getPurchaceOrderWithDeliveryUrl: function(payment_system) {
		return '/api/purchases/order_with_deliveryprice/' + payment_system + '/';
	},
	getPurchaceDeliveryPrice: function(region, city) {
		return '/api/top_delivery/delivery_price/' + region + '/' + city + '/';
	},

	grendizer_buy: '/ajax/grendizer/buy',
	grendizer_moar: '/ajax/grendizer/moar',


	press_secretary_shout: '/ajax/democracy/press_secretary/shout/',

	

	president_latvian_access: '/ajax/democracy/enabled_latvian',


	chat_load: '/ajax/chat/load/',
	chat_add: '/ajax/chat/add/',

	adm_register: '/ajax/register/',
	adm_remove_registration: '/ajax/unregister/',
	adm_edit_contacts: '/ajax/edit_contacts',
	adm_update_status: '/ajax/update_status',

	getSubscriptionUrl: function(type, switch_position) {
		return '/ajax/feeds/' + type + '/' + switch_position + '/';
	},

	getMyThingsSubscriptionUrl: function(type, switch_position) {
		return '/ajax/my/' + switch_position + '_' + type + '/';
	},

	navthing_domains_list : '/ajax/bookmarks/domain/list',
	getNavthingUrl: function(type, switch_position) {
		return '/ajax/bookmarks/' + type + '/' + switch_position + '/';
	},
	navthing_mode : '/ajax/bookmarks/mode',

	getUsersSortUrl: function(sort) {
		return '/ajax/users/' + sort + '/';
	},

	getBlogsSortUrl: function(type, sort) {
		var urlPart = '';
		if (type == 'elections') {
			urlPart = '/ajax/democracy/';
		} else {
			urlPart = '/ajax/blogs/';
		}
		return urlPart + sort + '/';
	},

	getPostUrl: function(post_id, has_acl) {
		if (has_acl) {
			return '/ajax/inbox/post/' + post_id;
		} else {
			if (globals.base_domain) {
				return globals.base_domain.url + '/api/posts/' + post_id;
			}
			else {
				return '/api/posts/' + post_id;
			}
		}
	},
	togglePostUrl: function(target, action) {
		return '/ajax/' + target + '/' + action + '/';
	},
	getPostPin: function (post_id) {
	    return '/api/posts/' + post_id + '/pin';
	},

	getCommentUrl: function(comment_id) {
		return '/ajax/comment/' + comment_id;
	},

	getPopupUrl: function(type) {
		return '/ajax/' + type + '/get/';
	},

	getCustomStyleUrl: function(id) {
		var url = globals.base_domain.url + '/api/domains/' + globals.domain.id + '/custom_css'

		if (id) {
			url += '/' + id;
		}

		return url;
	},
	president_user_ban: '/ajax/democracy/ban/'
};

if (window.Router) {
    (function (Router) {
    
    	window.router = new Router({
            all_notifications: '{domain}/api/my/notifications/',
            unread_notifications: '{domain}/api/my/notifications/unread/',
            unread_counter: '{domain}/api/my/notifications/unread/count/',
            set_subscription: '{domain}/api/my/notifications/subscriptions/',
            set_feed_settings: '{domain}/api/my/notifications/feed_settings/',
            get_feed_settings: '{domain}/api/my/notifications/feed_settings/',
            unread_counter_grouped: '{domain}/api/my/notifications/unread/count_by_type/',
            mark_read: '{domain}/api/my/notifications/mark_read/',
            mark_one_as_read: '{domain}/api/my/notifications/:notification_id/mark_read/',
            unsubscribed: '{domain}/api/my/notifications/subscriptions/unsubscribed/',
            mark_as_seen: '{domain}/api/my/notifications/mark_seen',
            user_autocomplete: '/api/autocomplete/users/',
            enabled_latvian: '/ajax/democracy/enabled_latvian/',
            enabled_anonymous: '/api/anonymous_mode/',
            domain_design: '/api/domains/:domainId/design/',
            president_expel_self: '/ajax/democracy/president/selfexpel',
            elections_expel_vote: '/ajax/elections/expel_vote',
            elections_cancel_expel_vote: '/ajax/elections/cancel_expel_vote',
            
            press_secretary_add: '/ajax/democracy/press_secretary/add/',
            press_secretary_delete: '/ajax/democracy/press_secretary/delete/',
            
            minister_add: '/ajax/democracy/minister/add/',
            minister_delete: '/ajax/democracy/minister/delete/',
            
            president_user_ban: '/ajax/democracy/ban/',
            president_user_unban: '/ajax/democracy/unban/',
            
            set_random_text: '/api/random_texts/',
            change_random_text: '/api/random_texts/:id',
            media: '/ajax/media/',
            app_authorize: '/api/oauth/authorize/',
            apps: '/api/oauth/apps/',
            app: '/api/oauth/apps/:app_id/',
            authorized_apps: '/api/oauth/authorizedapps/',
            authorized_app: '/api/oauth/authorizedapps/:app_id/',
            app_reset_secret: '/api/oauth/apps/:app_id/resetsecret/',
            market_gift_order: '/api/admgift/order/:payment_system/',
            market_gift_attach: '/api/admgift/attach/',
            market_anon_gift_order: '/api/anongift/order/:payment_system/',
            market_anon_gift_attach: '/api/anongift/:gift_secret/attach/',

            chat_anon: '/api/public-chat/conversations/:secret',

            user_note: '/api/user_notes/',
            user_note_set: '/api/user_notes/:note_id/',
            user_notes_purchase: '/api/shop/buy_pincenez/',
            user_notes_vote: '/api/user_notes/:note_id/vote/',

            users_search: '/api/search/users/',
            user_notes_search: '/api/search/user_notes/',

            fraud_replacements: '/api/replacements/',
            fraud_replacement: '/api/replacements/:replacement_id/',
            fraud_replacement_buy: '/api/shop/buy_replacement/',
            fraud_replacement_vote: '/api/replacements/:replacement_id/vote',
            fraud_replacement_threshold: '/api/replacements/settings/rating-threshold/',
            fraud_replacement_preview: '/api/replacements/preview/',
            fraud_replacements_forbid: '/api/replacements/forbid/:user_id/'
    	});
    
    })(window.Router);
}


localMessages = {
	getErrorMessageByError : function (error, url) {
		var error_code = '';
		if (error.code) {
			error_code = error.code;
			if (localMessages.error_messages[error_code]) {
				return localMessages.error_messages[error_code](error, url);
			} else {

				return '<span class="b-futu_alert_error_text">Ошибка сервера:</span><br>&laquo;' + error_code + '&raquo;';
			}
		} else if (error.description && error.description.code) {
			error_code = error.description.code;
			if (localMessages.new_error_messages[error_code]) {
				return localMessages.new_error_messages[error_code](error, url);
			}
		} else if (error.description) {
			error_code = error.description;
			if (localMessages.error_messages[error_code]) {
				return localMessages.error_messages[error_code](error, url);
			}
		}
		if (localMessages.new_error_messages[error_code]) {
			return localMessages.new_error_messages[error_code](error, error_code, url);
		} else {
			return '<span class="b-futu_alert_error_text">Ошибка сервера:</span><br>&laquo;' + error_code + '&raquo;';
		}
	},
	new_error_messages : {
		'not_found' : function (error, error_code, url) {
			switch(error.name) {
				case 'domain_prefix':
					return 'Мы не нашли указанное вами сообщество.'
					break;
				default:
					return 'Мы не нашли поле <span style="font-family:monospace;">' + error.name + '</span> в вашем запросе на <span style="font-family:monospace;">' + url + '</span>.';
			}
		},
		'invalid_length' : function (error, error_code, url) {
			var field_name = 'Поле <span style="font-family:monospace;">' + error.name + '</span>';
			if (error.description.max_length) {
				field_restriction = 'длиннее';
				field_restriction_value = error.description.max_length + ' ' + utils.getPlural(error.description.max_length, ['символа','символов','символов']);
			} else if (error.description.min_length) {
				field_restriction = 'короче';
				field_restriction_value = error.description.min_length + ' ' + utils.getPlural(error.description.min_length, ['символа','символов','символов']);
			}
			switch(error.name) {
				case 'data.title':
					field_name = 'Заголовок';
					break;
				default:
					field_name = 'Поле <span style="font-family:monospace;">' + error.name + '</span>';
			}
			return (field_name + ' не может быть ' + field_restriction + ' ' + field_restriction_value + ', а у вас их ' + error.description.provided_length) + '.';
		},
		'required' : function (error, error_code, url) {
			return 'К сожалению мы не получили в запросе на <span style="font-family:monospace;">' + url + '</span>. поле <span style="font-family:monospace;">' + error.name + '</span>. Проверьте, пожалуйста, всё ли вы заполнили.';
		},
		'url_from_spam_domain' : function (error, error_code, url) {
			var message = '';
			message += error.description.urls && error.description.urls.length > 1 ? 'Ваши ссылки ' : 'Ваша ссылка ';
			message += error.description.urls.join(', ');
			message += error.description.urls && error.description.urls.length > 1 ? 
						' оказались у&nbsp;нас заблокированными, и&nbsp;вы&nbsp;не&nbsp;можете на&nbsp;них ссылаться.' : 
						' оказалась у&nbsp;нас заблокированной, и&nbsp;вы&nbsp;не&nbsp;можете на&nbsp;неё ссылаться.';
			return message;
		},
		'not_in_acl': function (error, url) {
			var message;
			if (url.indexOf('/api/posts/') || url.indexOf('/api/inbox/')) {
				message = localMessages.getAccessError(error.description, 'post');
			}
			return message;
		},
		'karma_limit': function (error, url) {
			var message;
			if (url.indexOf('/api/posts/') || url.indexOf('/api/inbox/')) {
				message = localMessages.getAccessError(error.description, 'post');
			}
			return message;
		},
		'only_pro_users': function (error, url) {
			var message;
			if (url.indexOf('/api/posts/') || url.indexOf('/api/inbox/')) {
				message = localMessages.getAccessError(error.description, 'post');
			}
			return message;
		},
		'experience_limit': function (error, url) {
			var message;
			if (url.indexOf('/api/posts/') || url.indexOf('/api/inbox/')) {
				message = localMessages.getAccessError(error.description, 'post');
			}
			return message;
		},
		'docs_count_limit': function (error, url) {
			var message;
			if (url.indexOf('/api/posts/') || url.indexOf('/api/inbox/')) {
				message = localMessages.getAccessError(error.description, 'post');
			}
			return message;
		},
		'banned': function (error, url) {
			var message;
			if (url.indexOf('/api/posts/') || url.indexOf('/api/inbox/')) {
				message = localMessages.getAccessError(error.description, 'post');
			}
			return message;
		},
		'invalid_password' : function (error, url) {
			return 'Вы ошиблись с паролем.';
		},
		'not_enough_money' : function () {
			return 'К сожалению, у вас не хватает ЛВ, приобрести их можно в <a href="/fraud/">магазине</a>.';
		},
		'already_exist' : function (error, url) {
			var message = 'Эта штука у нас уже существует, нужно что-то новое.';
			if (url.indexOf('/api/shop/buy_replacement/') >= 0) {
				message = 'Мы уже что-то меняем на фразу &laquo;' + $('js-fraud_replace_form_input_old').value.trim() + '&raquo;, надо придумать что-то другое.';
			} else if (url.indexOf('/api/mayday/collect/') >= 0) {
				message = 'Вы уже здесь записаны, вот какой вы везунчик!';
			}
			return message;
		},
		'captcha_required' : function () {
			return 'А подтвердите-ка, что вы не робот, будьте так любезны.';
		}
	},
	getErrorMessageByErrorCode : function (error_code, url, error) {
		var error = error || {};
		if (localMessages.error_messages[error_code]) {
			return localMessages.error_messages[error_code](error, url);
		} else {
			return '<span class="b-futu_alert_error_text">Ошибка сервера:</span><br>&laquo;' + error_code + '&raquo;';
		}
	},
	getQuotedList: function (list) {
		var str = ''
		for (var i = 0, l = list.length; i < l; i++) {
			if (i == l - 1 && l > 1) {
				str += ' и ';
			} else if (i != 0) {
				str += ', ';
			}
			str += '&laquo;' + list[i] + '&raquo;';
		}
		return str;
	},
	getAccessError: function (error, type) {
		var message,
			types = {
				vote: 'голосование разрешено ',
				comment: 'комментирование доступно',
				post: 'публикация разрешена',
				none: 'это действие доступно'
			};
		switch(error.code) {
			case 'karma_limit':
				message = types[type] + ' только когда карма выше ' + error.expected + ', а ваша&nbsp;&mdash; ' + error.actual + ', простите.';
				break;
			case 'sex_limit':
				message = types[type] + ' только ' + (error.expected == 'female' ? 'женщинам' : 'мужчинам') + '.';
				break;
			case 'money_limit':
				message = types[type] + ' только пользователям, у которых на счету ' + (error.operation == 'gt' ? 'более' : 'менее') + error.expected +' ЛВ.';
				break;
			case 'user_id_limit':
				message = types[type] + ' только пользователям с номером ' + (error.operation == 'gt' ? 'выше' : 'ниже') + ' ' + error.expected +', a ваш&nbsp;&mdash; ' + error.actual + '.';
				break;
			case 'user_id_odd_even_limit':
				message = types[type] + ' только ' + (error.expected == 'even' ? 'четникам' : 'нечетникам') + '.';
				break;
			case 'not_in_acl':
			case 'domain_is_protected_for_write':
				message = types[type] + ' только по списку, а вас в этом списке нет. Незадача.';
				break
		}
		return '<div class="b-site_message_text">' + message + '</div>';
	},
	fixed_error_messages: [ // Список ошибок, которые не исчезают автоматически и пользователь должен их закрыть сам
		'only_pro_users'
	],
	error_messages : {
		'no_such_user' : function (error) {return 'Пользователь с таким логином у нас не зарегистрирован.'},
		'invalid_user' : function (error, url) {
			var message = '';

			switch(url) {
				case ajaxUrls.user_karma_list:
					message = 'Пользователя не существует.';
					break;
				default:
					if (error.username) {
						message = 'Пользователя с логином &laquo;' + error.username + '&raquo; не существует.';
					} else {
						message = 'Пользователя с таким логином не существует.';
					}
			}
			return message;
		},
		'no_recipients': function(error, url) {
			var message = '';

			if (error.recipients_count > 1) {
				message = 'Указаны невалидные логины получателей.';
			} else {
				message = 'Указан невалидный логин получателя.';
			}
			return message;
		},
		'username_in_use' : function (error) {return 'C прискорбием вам сообщаем, что выбранный вами ник уже занял кто-то более проворный. Напрягите фантазию и придумайте более оригинальный.'},
		'not_this_users_email' : function (error) {return 'Этот адрес почты вами никогда не использовался, как так?'},
		'invalid_url' : function (error) {return 'У вас ошибка в ссылке. Проверьте, пожалуйста'},
		'invalid_password' : function (error, url) {
			switch(url) {
				case ajaxUrls.invite_issue:
					return 'Вы ошиблись с паролем.';
					break;
				default:
					return 'Вы ошиблись с паролем, и теперь мы попросим вас подтвердить, что вы не робот.';
			}
		},
		'wrong_password' : function (error) {return 'Я дико извиняюсь, но ваш логин или пароль неверен. Повторите попытку еще раз и, даст Бог, все у вас получится.'},
		'invalid_current_password' : function (error) {return 'Текущий пароль неверен, будьте внимательней.'},
		'password_too_short' : function (error) {return 'Новый пароль слишком короткий, а должен быть не менее ' + error.minimal_length + ' ' + utils.getPlural(error.limit, ['символа','символов','символов']);},
		'fatal_error' : function (error) {return 'Роковая ошибка. Это сообщение самоликвидируется через 5 секунд.'},
		'invalid_caption' : function (error) {return 'Наша ЭВМ не придумала ни одного нормального заголовка. Помогите ей, пожалуйста.'},
		'invalid_email' : function (error) {return 'Постарайтесь ввести правильный и существующий в природе адрес почты, а то мы после регистрации собираемся прислать на него письмо для активации аккаунта. Естественно, мы никогда и никому не отдадим этот адрес. Вообще, как вы могли так о нас подумать?'},
		'email_in_use' : function (error, url) {
			switch(url) {
				case ajaxUrls.validate_email:
					return 'Дорогой %username%, нам кажется, что вы уже зарегистрированы и, на наш взгляд, совершенно не стоит делать это еще раз. Но, опять же, кто мы такие, чтоб стоять на пути шизофрении. Но вдруг вы захотите попробовать <a href="/amnesia/">восстановить пароль</a>?';
					break;
				default:
					return 'Простите нас, конечно, но на этот e-mail уже регистрировались.'
			}
		},
		'already_exists' : function (error, url) {
			return 'Эта вещь, оказывается, уже существует.';
		},
        'invite_already_exists' : function (error, url) {
            return 'На эту почту уже отправили инвайт.';
        },
		'greeting_already_exists' : function (error, url) {
			return 'Такое приветствие уже было добавлено.';
		},
		'already_invited' : function (error) {return 'Этот пользователь уже приглашен.'},
		'already_activated' : function (error) {return 'Аккаунт уже активирован.'},
		'invalid_username' : function (error, url) {
			switch(url) {
				case ajaxUrls.register:
				case ajaxUrls.validate_login:
				case ajaxUrls.fraud_username:
					return 'Ну вы и ник себе придумали. Может, он и прикольный, но у нас разрешены символы алфавита, цифры, дефис и знак подчеркивания. Ну и длина более 1-го символа, разумеется. Не умничайте и исправьте.';
					break;
				default:
					return 'Пользователя с&nbsp;таким логином не&nbsp;существует.';
			}
		},
		'invalid_users': function(error, url) {
			var users = '',
				message = '';
			if (error.users) {
				users = localMessages.getQuotedList(error.users);
				if (error.users.length > 1) {
					message = 'Пользователей c логинами ' + users + ' не существует.';
				} else {
					message = 'Пользователя c логином ' + users + ' не существует.';
				}
			}
			return message;
		},
		'invalid_gender': function(error) {return 'Вы не указали свой пол.'},
		'invalid_captcha_response' : function (error) { return 'Вы ошиблись со словами, простите.'; },
		'tag_length_exceeds_limit' : function (error) {
			var output_text = 'Метка &laquo;' + error.tag + '&raquo; не может быть длиннее ' + error.limit + ' ' + utils.getPlural(error.limit, ['символа','символов','символов']);
			return output_text;
		},
		'tags_per_post_limit_exceeded' : function (error) {
			var output_text = 'У поста не может быть более ' + error.limit + ' ' + utils.getPlural(error.limit, ['метки','меток','меток']);
			return output_text;
		},
		'not_enough_golden_posts' :  function (error) {
			var output_text = 'Для нового сайта нужен золотой пост. Вот такое новое, золотое правило.';
			return output_text;
		},
		'captcha_required' : function () {
			return 'Пожалуйста, подтвердите, что вы не робот.';
		},
		'invalid_prefix' : function () {
			return 'Префикс сайта должен состоять из латинских букв и цифр. Можно еще использовать подчеркивание и дефис.';
		},
		'prefix_in_use' : function () {
			return 'Доменное имя &laquo;' + $('js-new_domain_prefix').value + '&raquo; уже занято.';
		},
		'not_authorized' : function (error, url) {
			switch(url) {
				case ajaxUrls.invite_issue:
					return 'У вас недостаточно прав чтобы отправить приглашение.';
					break;
				default:
					return 'В доступе отказано, извините.';
			}
		},
		'too_late_to_modify' : function () {
			return 'К сожалению, время на смену вашей записи истекло.';
		},
		'temporary_unavailable' : function () {
			return 'Сервис временно недоступен.';
		},
		'not_a_socialist' : function () {
			return 'Вы ни на кого не подписаны,<br>исправить это можно <a href="/users/">здесь</a>.';
		},
		'rotten_invite': function() {
			return 'Срок действия приглашения истек.';
		},
		'invalid_invite': function() {
			return 'Приглашения не существует.';
		},
		'invalid_code': function() {
			return 'Неверная ссылка регистрации.';
		},
		'limit_exceeded': function(error, url) {
			var limit_item = ['пост','поста','постов'];
			var limit_action = 'писать';
			var periods = ['минуту', 'час', 'сутки'];
			switch(url) {
				case ajaxUrls.comment_submit:
					limit_item = ['комментарий','комментария','комментариев'];
					break;
				case ajaxUrls.domain_create:
					limit_item = ['сайт','сайта','сайтов'];
					limit_action = 'создавать';
					break;
				case ajaxUrls.post_vote:
				case  ajaxUrls.comment_vote:
				case  ajaxUrls.user_karma_vote:
					limit_item = ['раз','раза','раз'];
					limit_action = 'голосовать';
					break;
				case ajaxUrls.invite_issue:
				case '/my/invite':
					limit_item = ['раз','раза','раз'];
					limit_action = 'высылать приглашения';
					break;
				default:
			}

			var output_text = 'Вам разрешено {limit_action} только {limit} в {period}, извините.'.substitute({
				'limit' : error.limit + ' ' + utils.getPlural(error.limit, limit_item),
				'period' : periods[error.period],
				'limit_action' : limit_action
			});
			return output_text;
		},
		'domain_not_found' : function (error) {
			return 'Домен не найден.';
		},
		'invalid_params' : function (error, url) {
			var message = 'Неверные параметры запроса.';
			if (error.param) {
				if (error.param == 'date') {
					message = 'Неверный формат даты.';
				} else if (error.param == 'who' || error.param == 'receiver') {
					message = 'Неверный номер или имя пользователя.';
				} else if (error.param == 'amount') {
					message = 'Что-то у нас тут с суммой, посмотрите?';
				}
			}
			return message;
		},
		'invalid_controls': function (error) {
			return 'Неверные параметры запроса.';
		},
		'invalid_subscription': function (error) {
			return 'Неверные параметры запроса.';
		},
		'invalid_input' : function (error, url) {
			switch(url) {
				case ajaxUrls.adv:
					var output_text = '';
					if (error.errors && error.errors.length > 0) {
						for (var i = 0; i < error.errors.length; i++) {
							var input_error_code = error.errors[i];
							if (i > 0) {
								output_text += '<br>';
							}
							output_text += localMessages.getErrorMessageByError({code : input_error_code, field : error.field}, url);
						}
					} else {
						return 'Неверный ввод данных.';
					}
					return output_text;
					break;
				case ajaxUrls.search_docs:
					if (error.field) {
						var output_text = 'Судя по всему, вы ошиблись в ';
						switch(error.field) {
							case 'author':
								output_text += 'имени пользователя'
								break
							case 'date_start':
							case 'date_end':
								output_text += 'дате'
								break
						}
					} else {
						var output_text = 'Неверный ввод данных';
					}
					return output_text;
					break;
				default:
					return 'Неверный ввод данных.';
			}

		},
		'max_length_exceeded' : function (error, url) {
			switch(url) {
				case ajaxUrls.adv:
					return 'Превышена длина поля &laquo;' + error.field + '&raquo;';
					break;
				case ajaxUrls.user_note_set:
					return 'Заметка не должна быть длиннее ' + error.max_length + '&nbsp;' + utils.getPlural(error.max_length, ['символ', 'символа', 'символов']) + '.';
					break;
				case ajaxUrls.controls_edit:
					var length_exceeded_field = 'Поле';
					if (error.param == 'name') {
						length_exceeded_field = 'Заголовок';
					} else if (error.param == 'title') {
						length_exceeded_field = 'Title';
					} else if (error.param == 'description') {
						length_exceeded_field = 'Описание';
					}
					return length_exceeded_field + ' не может быть длиннее ' + error.max_length + '&nbsp;' + utils.getPlural(error.max_length, ['символ', 'символа', 'символов']) + '.';
					break;
				default:
					var length_exceeded_field = error.name || error.param || error.field || false;
					if (length_exceeded_field) {
						return length_exceeded_field + ' не может быть длиннее ' + error.max_length + '&nbsp;' + utils.getPlural(error.max_length, ['символ', 'символа', 'символов']) + '.';
					} else {
						return 'Превышена длина вводимых данных.';
					}
			}
		},
		'banned' : function (error, url) {
			var output_text = 'Вы забанены';
			if (error.ban.domain) {
				output_text += ' на <a href="//{domain_url}">{domain_url}</a>'.substitute({
					domain_url : error.ban.domain.url
				});
			}
			if (error.ban.moderator) {
				output_text += ' по распоряжению <a href="{domain}/users/{moderator_login}">{moderator_login}</a>'.substitute({
					domain: globals.base_domain ? globals.base_domain.url : '',
					moderator_login : error.ban.moderator.login
				});
			}
			if (error.ban.expires) {
				output_text += ' <span style="white-space:nowrap;"> до ' + (new Date(error.ban.expires*1000)).format('dd.mm.yyyy HH:MM') + '</span>';
			}
			if (error.ban.reason) {
				output_text += ', по причине: &laquo;' + error.ban.reason + '&raquo;';
			}
			output_text += '.';
			return output_text;
		},
		'not_enough_karma': function(error, url) {
			var action = '';
			var target = 'вас';
			var message;
			switch(url) {
				case ajaxUrls.inbox_post_submit:
					action = 'писать в инбокс';
					break;
				case ajaxUrls.inbox_delete:
					action = 'удалить письмо';
					break;
				case ajaxUrls.post_preview:
				case ajaxUrls.post_submit:
					action = 'написать пост';
					break;
				case ajaxUrls.post_edit:
					action = 'редактировать пост';
					break;
				case ajaxUrls.comment_submit:
					action = 'писать комментарии';
					break;
				case ajaxUrls.comment_edit:
					action = 'редактировать комментарии';
					break;
				case ajaxUrls.post_vote:
				case  ajaxUrls.comment_vote:
				case ajaxUrls.user_karma_vote:
					action = 'голосовать';
					break;
				case ajaxUrls.domain_create:
					action = 'создать подсайт';
					break;
				case ajaxUrls.controls_hand_over:
					action = 'передать подсайт';
					target = 'принимающей стороны';
					break;
				case ajaxUrls.elections_vote:
					if (error.required_karma) {
						message = 'Карма этого пользователя ниже ' + error.required_karma + ', поэтому он не может избираться в Президенты Грузии.';
					} else {
						message = 'Этот пользователь не имеет права избираться в Президенты Грузии.';
					}
					break;
				default:
					action = 'сделать то, что вы задумали';
			}
			if (!message) {
				if (error.hasOwnProperty('expected') && error.hasOwnProperty('actual')) {
					message = 'Для того чтобы ' + action + ', нужна карма выше ' + error.expected + ', а у ' + target + ' она ' + error.actual + '.';
				} else {
					message = 'Не хватает кармы, чтобы ' + action + '.';
				}
			}
			return message;
		},
		'must_not_vote_for_self': function(error, url) {
			return 'Нельзя голосовать за самого себя.';
		},
		'not_a_number': function(error, url) {
			return 'Должно быть указано числовое значение.';
		},
		'moderators_limit_exceeded' : function(error, url) {
			return 'Максимальное количество модераторов на подсайте&nbsp;&mdash; ' + error.limit + '.';
		},
		'primes_limit_exceeded' : function(error, url) {
			return 'Премьер-министр может быть только один.';
		},
		'unknown_image_type': function() {
			return 'Сервер не смог распознать тип изображения.';
		},
		'inaccessible_inbox' : function() {
			return 'Вам запрещено писать в этот инбокс, извините.';
		},
		'inbox_members_limit_exceeded': function() {
			return 'Превышено допустимое количество участников инбокса.';
		},
		'already_banned' : function (error, url) {
			var banned_user = error.users[0];
			return banned_user.login + ' уже здесь забанен' + (banned_user.gender == 'female' ? 'а' : '') + '.';
		},
		'too_many_subscribers': function(error) {
			return 'Нельзя удалить сайт, если количество подписчиков больше ' + error.max_count_to_del + '.';
		},
		'handover_for_himself': function(error) {
			return 'Нельзя передавать сайт самому себе.';
		},
		'already_process_handover': function() {
			return 'Сайт уже в процессе передачи.';
		},
		'not_in_processing_handover': function() {
			return 'Сайт не находится в процессе передачи.';
		},
		'tags_per_domain_limit_exceeded': function(error) {
			var limit_item = ['метки','меток','меток'];
			return 'Для сайта можно задать не более ' + error.limit + ' ' + utils.getPlural(error.limit, limit_item) + '.';
		},
		'greeting_is_empty': function() {
			return 'Приветствие не может быть пустым.';
		},
		'greeting_max_length_exceeded': function(error) {
			return 'Приветствие не должно быть длиннее ' + error.max_length + '&nbsp;' + utils.getPlural(error.max_length, ['символ', 'символа', 'символов']) + '.';
		},
		'post_placeholder_max_length_exceeded': function(error) {
			return 'Подсказка не должна быть длиннее ' + error.max_length + '&nbsp;' + utils.getPlural(error.max_length, ['символ', 'символа', 'символов']) + '.';
		},
		'greeting_has_no_profile_link': function() {
			return 'Обязательно укажите в своем приветствии обращение к посетителю&nbsp;&mdash; %username%.';
		},
		'greeting_has_too_many_profile_links': function(error) {
			return 'В приветствии нельзя указывать обращение %username% более ' + error.allowed + '&nbsp;' + utils.getPlural(error.max_length, ['раза', 'раз', 'раз']) + '.';
		},
		'devito_text_max_length_exceeded': function(error) {
			return 'В Приветствие для Денни ДеВито не должно быть длиннее ' + error.max_length + '&nbsp;' + utils.getPlural(error.max_length, ['символ', 'символа', 'символов']) + '.';
		},
		'inactive_user' : function () {
			return 'Вам необходимо подтвердить свою электронную почту, перейдя по ссылке из письма, которые мы вам послали после регистрации. Попробуйте проверить почту ещё раз, но если прошло много времени, а письма всё нет, напишите нам на <a href="mailto:wtf@futurico.ru">wtf@futurico.ru</a>.';
		},
		'cannot_ignore_himself' : function () {
			if (globals.user && globals.user.gender == 'female') {
				return 'Вам запрещено саму себя игнорировать!';
			} else {
				return 'Вам запрещено самого себя игнорировать!';
			}
		},
		'already_ignoring': function() {
			return 'Вы уже игнорируете это.'
		},
		'video_not_found': function() {
			return 'Видео не найдено.';
		},
		'private_video': function() {
			return 'Видео с ограниченным доступом.';
		},
		'invalid_id': function() {
			return 'Неверный ID видео.';
		},
		'system_message_not_found': function() {
			return 'Сообщения не существует.';
		},
		'invalid_system_message_id': function() {
			return 'Невалидный идентификатор сообщения.';
		},
		'system_message_is_not_closeable': function() {
			return 'Нельзя удалить сообщение.';
		},
		'age_less_than_18' : function () {
			return 'Вам меньше 18 лет, вам пока нельзя здесь регистрироваться.';
		},
		'recently_registered' : function (error, url) {
			var action = '';
			var target = 'вас';
			switch(url) {
				case ajaxUrls.inbox_post_submit:
					action = 'писать в инбокс';
					break;
				case ajaxUrls.inbox_delete:
					action = 'удалить письмо';
					break;
				case ajaxUrls.post_preview:
				case ajaxUrls.post_submit:
					action = 'написать пост';
					break;
				case ajaxUrls.post_edit:
					action = 'редактировать пост';
					break;
				case ajaxUrls.comment_submit:
					action = 'писать комментарии';
					break;
				case ajaxUrls.comment_edit:
					action = 'редактировать комментарии';
					break;
				case ajaxUrls.post_vote:
				case ajaxUrls.comment_vote:
					action = 'голосовать';
					break;
				case ajaxUrls.user_karma_vote:
					action = 'голосовать за карму';
					break;
				case ajaxUrls.domain_create:
					action = 'создать подсайт';
					break;
				case ajaxUrls.controls_hand_over:
					action = 'передать подсайт';
					target = 'принимающей стороны';
					break;
				default:
					action = 'сделать то, что вы задумали';
			}

			return 'Вы зарегистрировались совсем недавно, и нужно подождать некоторое время, чтобы можно было ' + action + '.';
		},
		'invalid_birthday' : function () {
			return 'Будьте добры, укажите дату вашего рождения. Спасибо.';
		},
		'already_edited_by_moderator' : function () {
			return 'Запрещено редактировать после правок модератора, извините.';
		},
		'invalid_parent' : function (error, url) {
			var message = '';
			switch(url) {
				case ajaxUrls.comment_submit:
					message = 'Комментарий, на который вы хотите ответить, по всей видимости, удалён.';
					break;
				default:
					message = 'Родителя этого объекта не существует.';
			}
			return message;
		},
		'user_ignores_you' : function (error, url) {
			var message = '';
			if (error.users) {
				var users = localMessages.getQuotedList(error.users);
				if (error.users.length > 1) {
					message = 'Пользователи c логинами ' + users + ' игнорируют вас.';
				} else {
					message = 'Пользователь c логином ' + users + ' игнорирует вас.';
				}
			} else {
				message = 'Нельзя писать инбоксы тем, кто вас игнорирует.';
			}
			return message;
		},
		'elections_disabled' : function () {
			return 'Выборы на этом сайте выключены, и номинироваться в президенты нельзя.';
		},
		'election_is_not_in_nomination_state' : function () {
			return 'К сожалению вы не успели номинироваться в президенты, удачи в следующий раз!';
		},
		'already_voted_for_expel' : function() {
			return 'Вы уже голосовали.';
		},
		'user_is_not_a_president' : function() {
			return 'Этот пользователь не является президентом в данный момент.'
		},
		'vote_for_expel_not_found' : function() {
			return 'Возможно вы уже отменили свое решение об импичменете.'
		},
		'requirement_is_not_met' : function () {
			return 'К сожалению, вам запрещено номинироваться в президенты этого сайта.';
		},
		'url_from_spam_domain' : function (error, url) {
			var message = 'К сожалению, у нас на сайте запрещено писать ссылки на ';
			if (error.urls && error.urls.length > 0) {
				for (var i = 0, l = error.urls.length; i < l; i++) {
					message += (i > 0 && i == l - 1 ? ' и на ' : '') + error.urls[i] + (i == l - 1 ? '.' : '') + (i < l - 2 ? ', ' : '');
				}
			} else {
				message += 'указанный вами сайт.';
			}
			return message;
		},
		'election_is_in_wrong_state' : function (error) {
			var message = '';
			if (error.expected && error.expected.length > 0) {
				message = 'Выборы должны быть в статусе';
				for (var i = 0; i < error.expected.length; i++) {
					if (i == 0 && error.expected.length > 2) {
						message += ' или';
					}
					if (i > 0 && error.expected.length > 2) {
						message += ','
					}
					if (i > 0) {
						message += ' или'
					}
					if (error.expected[i] == 'nomination') {
						message += ' номинации'
					}
					if (error.expected[i] == 'vote') {
						message += ' голосования'
					}
					if (error.expected[i] == 'rule') {
						message += ' правления'
					}
				}
				message += '.'
			} else {
				message = 'Выборы сейчас в неверном статусе, попробуйте немного подождать.';
			}
			return message;
		},
		'domain_has_public_access_for_reading': function () {
			return 'Сайт доступен для чтения всем пользователям.';
		},
		'domain_has_public_access_for_writing': function () {
			return 'Писать на сайте могут все пользователи, чья карма удовлетворяет условиям ограничений по карме.';
		},
		'cannot_expel_primes': function (error, url) {
			var message = '';
			if (error.users) {
				message = 'Пользователь ' + error.users[0] + ' назначен премьер-министром и поэтому не может быть исключен из этого списка.';
			}
			return message;
		},
		'cannot_expel_moderators': function (error, url) {
			var message = '',
				usersList;

			if (error.users) {
				usersList = error.users.join(', ');
				if (error.users.length > 1) {
					message = 'Пользователи ' + usersList + ' назначены модераторами и поэтому не могут быть исключены из этого списка.';
				} else if (error.users.length == 1) {
					message = 'Пользователь ' + usersList + ' назначен модератором и поэтому не может быть исключен из этого списка.';
				}
			}
			return message;
		},
		'cannot_ban_moderators': function (error, url) {
			var users = '',
				message = '';
			if (error.users) {
				users = localMessages.getQuotedList(error.users);
				if (error.users.length > 1) {
					message = 'Пользователи ' + users + ' являются модераторами, их нельзя забанить.';
				} else {
					message = 'Пользователь ' + users + ' является модератором, его нельзя забанить.';
				}
			}
			return message;
		},
		'cannot_expel_owner': function () {
			return 'Нельзя исключить владельца сайта.';
		},
		'cannot_expel_self': function () {
			return 'Нельзя исключить самого себя из списка.';
		},
		'domain_is_protected_for_read': function () {
			return 'Сайт доступен для чтения только пользователям из списка и поэтому писать могут тоже только пользователи из списка.';
		},
		'access_preserved_until_election_is_over' : function () {
			return 'Менять настройки доступа к сайту можно только после окончания номинации и выборов.';
		},
		'domain_is_protected_for_write' : function () {
			return 'Какая неудача, вам запретили писать на этот подсайт.';
		},
		'cannot_ban_self': function (error, url) {
			return 'Нельзя забанить самого себя.';
		},
		'password_required': function (error, url) {
			return 'Необходимо указать пароль.';
		},
		'not_enough_money': function (error, url) {
			var message;
			if (url == ajaxUrls.fraud_africa) {
				message = 'Для перевода ';
			} else {
				message = 'Для покупки ';
			}
			message += 'требуется ' + (error.required / 100) + '&nbsp;ЛВ, а у вас на счету только ' + (error.balance / 100) + '. Пополнить счёт можно в <a href="' + globals.base_domain.url + '/fraud/refuel/">магазине</a>';

			return message;
		},
		'invalid_amount': function (error, url) {
			return 'Что-то у нас тут с суммой, посмотрите?';
		},
		'too_small_price' : function (error) {
			var message = 'Звание внезапно стоит ' + (error.required_price / 100) + '&nbsp;ЛВ, а у вас на счету только ' + (error.balance / 100) + '.';
			return message;
		},
		'invalid_rank_length' : function (error) {
			var message = 'Звание не может быть длиннее ' + error.maximum_length + ' ' + utils.getPlural(error.maximum_length, ['символа', 'символов', 'символов']) + '.';
			return message;
		},
		'invalid_candidate': function () {
			return 'Пользователя с таким логином не существует, или он деактивирован.';
		},
		'empty_user_list': function () {
			return 'Укажите, пожалуйста, имя пользователя. Можно даже сразу несколько.';
		},
		'cannot_unsubscribe_from_self': function () {
			return 'Нельзя отписаться от самого себя.';
		},
		'cannot_subscribe_to_self': function () {
			return 'Нельзя подписаться на самого себя.';
		},
		'election_is_not_in_vote_state': function () {
			return 'Выборы уже закончились. Приходите в среду.';
		},
		'max_presidential_term_series_was_exceeded': function () {
			return 'Ваш кандидат попадает под ограничения. Он побывал президентом 2 раза подряд, извините.';
		},
		'user_was_president_during_past_8_weeks': function () {
			return 'Ваш кандидат попадает под ограничения. Он побывал президентом в течение последних 8 недель, извините.';
		},
		'ministers_limit_exceeded': function (error, url) {
			return 'Вы могли назначить ' + error.limit + ' ' + utils.getPlural(error.limit, ['министра','министров','министров']) + ' и с успехом сделали это.';
		},
		'minister_assignments_limit_exceeded': function (error, url) {
			return 'В течение одного срока вы могли назначить максимум ' + error.limit + ' ' + utils.getPlural(error.limit, ['человека','человек','человек']) + ' министрами и с успехом сделали это.';
		},
		'domain_already_have_press_secretary': function () {
			return 'Пресс-секретарь уже назначен.';
		},
		'bans_limit_exceeded': function (error, url) {
			var message = '';
			if (error.limit > 0) {
				message = 'У вас была возможность забанить пять процентов от принимавших участие в выборах. Все, вы это сделали, больше нельзя.';
			} else {
				message = 'Вы не можете никого забанить, потому что в выборах участвовало слишком мало человек.';
			}
			return message;
		},
		'candidate_banned_from_nominating': function (error, url) {
			return 'Этому пользователю было запрещено быть президентом Лепрозория.';
		},
		'selfexpel_disabled_after_vote_start': function (error, url) {
			return 'Вы не можете увольняться с поста президента Лепрозория в день выборов, извините.';
		},
		'invalid_url_domain' : function () {
			return 'Вы указали ссылку не на тот сайт&nbsp;&mdash; проверьте, пожалуйста.';
		},
		'freetime_would_finish_before_started': function () {
			return 'У Вас тут все перепутано - сначала надо указать "с" какого времени, а потом уже только "по" какое.';
		},
		'invalid_email_username_format': function () {
			return 'У вас ошибка в названии почты. Возможно в ней есть русские буквы? Или оно слишком длинное? Попробуйте что-то попроще.';
		},
		'email_username_is_not_available': function () {
			return 'Несмотря на хорошую идею, вам эту почту использовать нельзя, придумайте другую.';
		},
		'user_blocked_external_ranks': function () {
			return 'Этот пользователь запретил звания от других.';
		},
		'invalid_quantity' : function () {
			return 'Неверное количество, проверьте, будьте добры.';
		},
		'max_vote_weight_exceeded' : function (error) {
			if (error.max_vote_weight) {
				return 'Вес голоса не может быть больше ' + error.max_vote_weight + '.';
			} else {
				return 'Вес голоса не может быть таким большим.';
			}
		},
		'vote_weight_must_be_positive_integer' : function () {
			return 'Вес голоса должен быть целым и больше нуля.';
		},
		'user_already_on_leprosorium' : function () {
			return 'Вы уже здесь зарегистрированы, и более того, вошли на сайт.';
		},
		'invalid_list_name': function () {
			return 'Такого типа списка не существует.';
		},
		'invalid_access_type': function () {
			return 'Указан несуществующий тип доступа.';
		},
		'non_expelable_user': function (error, url) {
			return 'Пользователя с логином &laquo;' + error.user.login + '&raquo; нельзя удалить из этого списка.';
		},
		'karma_limit': function (error, url) {
			var message;
			switch(url) {
				case ajaxUrls.comment_submit:
					message = localMessages.getAccessError(error, 'comment');
					break;
				case ajaxUrls.post_submit:
				case '/write':
					message = localMessages.getAccessError(error, 'post');
					break;
				case ajaxUrls.post_vote:
				case ajaxUrls.comment_vote:
					message = localMessages.getAccessError(error, 'vote');
					break;
				default :
					message = localMessages.getAccessError(error, 'none');
			}

			return message;
		},
		'sex_limit': function (error, url) {
			var message;
			switch(url) {
				case ajaxUrls.comment_submit:
					message = localMessages.getAccessError(error, 'comment');
					break;
				case ajaxUrls.post_submit:
					message = localMessages.getAccessError(error, 'post');
					break;
				case ajaxUrls.post_vote:
				case ajaxUrls.comment_vote:
					message = localMessages.getAccessError(error, 'vote');
					break;
				default :
					message = localMessages.getAccessError(error, 'none');
			}

			return message;
		},
		'money_limit': function (error, url) {
			var message;
			switch(url) {
				case ajaxUrls.comment_submit:
					message = localMessages.getAccessError(error, 'comment');
					break;
				case ajaxUrls.post_submit:
					message = localMessages.getAccessError(error, 'post');
					break;
				case ajaxUrls.post_vote:
				case ajaxUrls.comment_vote:
					message = localMessages.getAccessError(error, 'vote');
					break;
				default :
					message = localMessages.getAccessError(error, 'none');
			}

			return message;
		},
		'user_id_limit': function (error, url) {
			var message;
			switch(url) {
				case ajaxUrls.comment_submit:
					message = localMessages.getAccessError(error, 'comment');
					break;
				case ajaxUrls.post_submit:
					message = localMessages.getAccessError(error, 'post');
					break;
				case ajaxUrls.post_vote:
				case ajaxUrls.comment_vote:
					message = localMessages.getAccessError(error, 'vote');
					break;
				default :
					message = localMessages.getAccessError(error, 'none');
			}

			return message;
		},
		'user_id_odd_even_limit': function (error, url) {
			var message;
			switch(url) {
				case ajaxUrls.comment_submit:
					message = localMessages.getAccessError(error, 'comment');
					break;
				case ajaxUrls.post_submit:
					message = localMessages.getAccessError(error, 'post');
					break;
				case ajaxUrls.post_vote:
				case ajaxUrls.comment_vote:
					message = localMessages.getAccessError(error, 'vote');
					break;
				default :
					message = localMessages.getAccessError(error, 'none');
			}

			return message;
		},
		'phone_is_not_a_number': function () {
			return 'Номер телефона указан в неверном формате.';
		},
		'phone_has_invalid_country_code': function () {
			return 'Указан несуществующий код страны в номере телефона. Введите, пожалуйста, номер в международном формате, например +79098888888.';
		},
		'phone_is_too_short': function () {
			return 'Слишком короткий номер телефона.';
		},
		'phone_is_too_long': function () {
			return 'Слишком длинный номер телефона.';
		},
		'user_is_already_registered_for_this_adm': function () {
			return 'Вы уже прошли регистрацию на участие.';
		},
		'user_is_not_registered_for_this_adm': function (error, url) {
			var message = '';

			switch(url) {
				case ajaxUrls.adm_update_status:
					message = 'Вы не проходили регистрацию на участие.';
					break;
				default:
					message = 'Вы еще не проходили регистрацию на участие.';
			}
			return message;
		},
		'year_required': function (error, url) {
			if (url = ajaxUrls.adm_update_status) {
				return 'Неверные параметры запроса.';
			}
		},
		'year_missing_adm': function () {
			return 'В этом году АДМ не проводился.'
		},
		'presents_exchange_is_not_started_yet': function () {
			return 'Обмен подарками еще не начинался.'
		},
		'address_city_required': function () {
			return 'Необходимо указать город или район.';
		},
		'address_street_required': function () {
			return 'Необходимо указать улицу.';
		},
		'address_zip_code_required': function () {
			return 'Необходимо указать индекс.';
		},
		'address_name_required': function () {
			return 'Необходимо указать имя получателя.';
		},
		'address_house_required': function () {
			return 'Необходимо указать номер дома.';
		},
		'address_country_required': function () {
			return 'Необходимо указать страну.';
		},
		'adm_registration_is_closed': function () {
			return 'Регистрация уже закончилась.';
		},
		'invalid_promocode' : function (error, url) {
			return 'Ваш промо-код недействителен. Попробуйте обратиться к тому, кто его вам дал.';
		},
		'invalid_donate_session' : function () {
			return 'Что-то не так с вашей сессией пожертвования. Может, попробуете ещё раз?';
		},
		'invalid_donate_sum' : function (error) {
			return 'Минимальная сумма пожертвований в фонд Хаоса&nbsp;&mdash; ' + error.min_amount + '&nbsp;' + utils.getPlural(error.min_amount, ['рубль', 'рубля', 'рублей']) + '.'
		},
		'already_paid' : function (error, url) {
			var message = '';

			switch(url) {
				case ajaxUrls.grendizer_buy:
					message = 'Вы уже узнавали, кто автор этой фотографии. Попробуйте обновить cтраницу, вдруг всё встанет на свои места.';
					break;
				default:
					message = 'Вы уже заплатили за эту услугу, что-то видимо пошло не так.';
			}
			return message;
		},
		'sandbox_post_day_limit_exceeded' : function () {
			return 'К&nbsp;сожалению, сегодня для вас это форма не&nbsp;больше работает. Подождите час, может вам кто-то пришлёт инвайт, или приходите завтра.';
		},
		'pro_account_required' : function() {
			return 'К сожалению, вы не гражданин Лепрозория. Вы можете <a href="https://leprosorium.ru/fraud/">приобрести</a> профессиональный аккаунт хоть сейчас.';
		},
		'custom_css_limit_exceeded': function() {
			return 'Можно создать только 5 стилей, не больше.'
		}


	}
};

animatePosts = { 
	animation : null,
	posts : false,
	mine: false,
	loaded : false,
	run : function () {
		animatePosts.addEventListeners();
	},
	// waiting for ctrl + up, down keypress
	addEventListeners : function () {
		animatePosts.animation = new Fx.Scroll(window, {
			duration : 250
		});
		document.addEvent('keyup', function (event) {
			e = new Event(event);
			if ((e.key == 'up' || e.key == 'down') && e.control) {
				if (Browser.Engine.presto && !e.shift) {
					return false;
				}
				e.preventDefault();
				animatePosts.navigateToComment(e.key, e);
			}
		});
		document.addEvent('keydown', function (event) {
			e = new Event(event);
			if ((e.key == 'up' || e.key == 'down') && e.control) {
				e.preventDefault();
			}
		});
	},

	navigateToComment: function(dir, event) {
		e = new Event(event);
		var mine = $(e.target).getParent('.js-comments_jump[data-class="mine"]');
		var nearestPost = null;
		var lastHighlightedPost = $$('.js-last_highlighted_post')[0];
		animatePosts.posts = animatePosts.getPostsPositions();
		animatePosts.mine = animatePosts.getPostsPositions(true);
		nearestPost = (nearestPost) ? nearestPost : animatePosts.getNearestPost(mine ? animatePosts.mine : animatePosts.posts, dir, e);
		if (lastHighlightedPost) {
			lastHighlightedPost.removeClass('js-last_highlighted_post');
		}
		if (nearestPost) {
			$(nearestPost).addClass('navigation_highlighted');
			$(nearestPost).addClass('js-last_highlighted_post');
			setTimeout(function(){
				$(nearestPost).removeClass('navigation_highlighted');
			}, 700)
			var target_scroll_y_position = $(nearestPost).getPosition().y - window.getCoordinates().height/2 + $(nearestPost).getCoordinates().height/2;
			target_scroll_y_position = (target_scroll_y_position < $(nearestPost).getPosition().y) ? target_scroll_y_position : $(nearestPost).getPosition().y;
			animatePosts.animation.start($(window).getScroll().x, target_scroll_y_position);
		} 
		else if (!mine) {
			(dir == 'up') ? windowScroll.toTop() : windowScroll.toBottom();
		}
	},
	
	getPostsPositions : function (mine) {
		// post mode - new_comments
		if ($('js-comments')) {
			var allPosts = mine ? $$('#js-comments_holder .mine:not(.hidden)') : $$('#js-comments_holder .new:not(.hidden)');
			if (allPosts.length == 0) {
				allPosts = $$('.post, .comment:not(.hidden)');
			}
		} else {
			var allPosts = $$('.post, .comment:not(.hidden)');
		}
		allPosts.each(function (post, i) {
			allPosts[i].pos = allPosts[i].getPosition().y;
		});
		return allPosts;
	},
	
	getNearestPost : function (allPosts, dir, e) {
		var myPosition = document.getScroll().y + window.getCoordinates().height/2;
		var lastHighlightedPost = $$('.js-last_highlighted_post')[0];
		if (lastHighlightedPost && lastHighlightedPost.getPosition().y >= $(window).getScroll().y && lastHighlightedPost.getPosition().y <= $(window).getScroll().y + window.getCoordinates().height) {
			myPosition = lastHighlightedPost.getPosition().y;
		}
		for (var i = 0; i < allPosts.length; i++) {
			if (myPosition < allPosts[i].pos) {
				return (dir == 'down' || dir == null) ? allPosts[i] : ((i == 0) ? false : allPosts[i-1]);
			} else if (myPosition == allPosts[i].pos) {
				return (dir == 'down' || dir == null) ? ((i == allPosts.length - 1) ? ((dir == null) ? allPosts[0] : false) : allPosts[i+1]) : ((i == 0) ? false : allPosts[i-1]);
			} else if (i == allPosts.length - 1 && dir == null) {
				return allPosts[0];
			}
		}
		return (dir == 'up') ? allPosts[allPosts.length-1] : false;
	},
	
	scrollTo : function (nearestPost) {
		animatePosts.animation.toElement(nearestPost);
	}
};

var futuDialogPopup = new Class({
	Implements: Options,
	options: {
		text: '',
		type: '',
		callback: false,
		cancel: false,
		duration: 100
	},

	initialize: function(options) {
		this.setOptions(options);

		if ($(document.body).hasClass('l-touch_capable')) {
			this.renderNativePopup();
		} else {
			this.renderContainer();
			this.renderOverlay();
			this.renderPopup();

			this.boundPopupKeyPress = this.popupKeyPress.bind(this);
			this.boundWindowResize = this.onWindowResize.bind(this);
			window.addEvent('keydown', this.boundPopupKeyPress);
			window.addEvent('resize', this.boundWindowResize);
		}
	},
	renderNativePopup: function() {
		if (this.options.type == 'confirm' && typeof this.options.callback == 'function') {
			if (window.confirm(this.options.text)) {
				this.options.callback();
			}
		}
	},

	renderPopup: function() {
		// Popup
		this.popup = new Element('div', {
			'class': 'futu_alert',
			'id': 'futu_dialog_popup'
		}).injectInside(this.container);

		// Контейнер с текстом
		new Element('div', {
			'class': 'futu_dialog_popup_text',
			html: this.options.text
		}).injectInside(this.popup);

		// Контейнер с контролами
		var controls = new Element('div', {
			'class': 'futu_dialog_popup_controls'
		}).injectInside(this.popup);

		// Кнопки
		if (this.options.type == 'confirm') {
			var okButton = new Element('a', {
				'class': 'b-confirm_button b-confirm_button_white',
				html: '<i>OK</i><em></em>',
				href: '#'
			}).injectInside(controls);

			var cancelButton = new Element('a', {
				'class': 'b-confirm_button b-confirm_button_white b-confirm_button_cancel',
				html: '<i>Отмена</i><em></em>',
				href: '#'
			}).injectInside(controls);

			okButton.addEvent('click', function(event) {
				event.preventDefault();
				if (typeof this.options.callback == 'function') {
					this.options.callback();
					this.close();
				}
			}.bind(this));
			cancelButton.addEvent('click', function(event) {
				event.preventDefault();
				if (typeof this.options.cancel == 'function') {
					this.options.cancel();
				}
				this.close();
			}.bind(this))
		} else if (this.options.type == 'alert') {
			var okButton = new Element('a', {
				'class': 'b-confirm_button b-confirm_button_white',
				html: '<i>OK</i><em></em>',
				href: '#'
			}).injectInside(controls);
			okButton.addEvent('click', function(event) {
				event.preventDefault();
				if (typeof this.options.callback == 'function') {
					this.options.callback();
				}
				this.close();
			}.bind(this));
		}
		this.setPopupPosition();

		new Fx.Morph(this.container, {
			duration: this.options.duration
		}).start({
			opacity: 1
		});
	},

	setPopupPosition: function() {
		var popupCoordinates = this.popup.getCoordinates(),
			containerHeight = this.container.getCoordinates().height;

		this.popup.setStyles({
			top: Math.min((containerHeight - popupCoordinates.height) / 2, (containerHeight * 20) / 100),
			left: '50%',
			marginLeft: - popupCoordinates.width / 2
		});
	},

	renderContainer: function() {
		this.container = $('futu_dialog_popup_holder');
		if (!this.container) {
			this.container = new Element('div', {
				'class': 'futu_dialog_popup_holder',
				'id': 'futu_dialog_popup_holder'
			}).injectBottom(document.body);

			this.container.addEvent('click', function(event) {
				event.stopPropagation();
			}.bind(this));
		}
		this.container.setStyle('display', 'block');
	},

	renderOverlay: function() {
		if (!$('futu_dialog_popup_overlay')) {
			new Element('div', {
				'class': 'futu_dialog_popup_overlay',
				'id': 'futu_dialog_popup_overlay'
			}).injectInside(this.container);
		}
	},

	popupKeyPress: function(event) {
		if (event.code == 27) {
			this.close();
		} else if (event.code == 13) {
			if (typeof this.options.callback == 'function') {
				this.options.callback();
			}
			this.close();
		}
	},

	close: function() {
		new Fx.Morph(this.container, {
			duration: this.options.duration,
			onComplete: function() {
				this.container.setStyle('display', 'none');
				this.container.empty();
				window.removeEvent('keydown', this.boundPopupKeyPress);
			}.bind(this)
		}).start({
			opacity: 0
		});
	},

	onWindowResize: function() {
		this.setPopupPosition();
	}
});
document.futuControls = [];
closeAllFutuControls = function () {
	for (var i = 0; i < document.futuControls.length; i++) {
		document.futuControls[i].hide();
	}
};
futuControls = function (options) {
	if (!options || !options.button) {
		new futuAlert('futuControls требует кнопку');
		return false;
	}
	this.options = options;
	this.button = options.button;
	
	this.options.container = options.container||$(document.body);
	this.onClose = options.onClose||(function () {});
	this.options.close_button_text = this.options.close_button_text || '&times;';
	
	this.holder_element = new Element('div', {
		'class' : 'b-futu_controls pos_hidden ' + (options.class_name||''),
		'events' : {
			'click' : function (event) {
				event.stopPropagation();
			},
			'touchend' : function (event) {
				event.stopPropagation();
			}
		},
		'style' : 'max-height:0; max-width:0;',
		'html' : '<ul></ul>'
	});
	this.holder_element.set('morph', {duration : 111});
	this.holder_element.inject(this.options.container);
	
	if (options.options) {
		$A(options.options).each((function (option, i) {
			if (option.type == 'caption') {
				var option_element = new Element('li', {
					'class' : 'b-futu_controls_item',
					'html' : '<span class="b-futu_controls_item_link"><span class="b-futu_controls_item_link_text">' + option.caption + '</span></span>'
				});
			} else {
				var option_element = new Element('li', {
					'class' : 'b-futu_controls_item',
					'html' : '<a href="#" class="b-futu_controls_item_link"><span class="b-futu_controls_item_link_text">' + option.caption + '</span></a>'
				});
				option_element.getElement('a').onclick = (function (event) {
					var e = new Event(event);
					e.preventDefault();
					option.onclick.call(this, option_element);
				}).bind(this);
			}
			
			option_element.inject(this.holder_element.getElement('ul'));
		}).bind(this));
	}
	

	var close_element = new Element('a', {
		'class' : 'b-futu_controls_close ' + this.options.close_button_class,
		'href' : '#',
		'events' : {
			'click' : (function (event) {
				var e = new Event(event);
				e.preventDefault();
				this.hide();
			}).bind(this),
			'touchend' : (function (event) {
				var e = new Event(event);
				e.preventDefault();
				this.hide();
			}).bind(this)
		},
		'html' : this.options.close_button_text
	});
	close_element.inject(this.holder_element);
	
	this.show();
	
	document.futuControls.push(this);
};

futuControls.prototype.show = function () {
	var window_scroll_y = window.getScroll().y;
	var window_scroll_x = window.getScroll().x;
	var window_height = window.getSize().y;
	var window_width = window.getSize().x;
	
	var holder_height = this.holder_element.getElement('ul').offsetHeight;
	var holder_width = this.holder_element.getElement('ul').getScrollSize().x;

	var holder_top = this.button.getPosition().y;
	var holder_left = this.button.getPosition().x;
	
	var holder_relative_top = holder_top - window_scroll_y;
	var holder_relative_left = holder_left - window_scroll_x;
	
	if (window_height - holder_relative_top < holder_height) {
		holder_top = window_scroll_y + window_height - holder_height;
	}
	
	if (window_scroll_y > holder_top) {
		holder_top = window_scroll_y;
	}
	
	if (window_width - holder_relative_left < holder_width) {
		holder_left = window_scroll_x + window_width - holder_width;
	}
	
	if (window_scroll_x > holder_left) {
		holder_left = window_scroll_x;
	}
	
	this.holder_element.style.top = holder_top - 5 + 'px';
	this.holder_element.style.left = holder_left - 5 + 'px';
	
	this.holder_element.removeClass('pos_hidden');
	
	this.holder_element.morph({maxHeight : holder_height, maxWidth:300});
	(function () {
		$(document.body).addEvent('click', closeAllFutuControls);
		$(document.body).addEvent('touchend', closeAllFutuControls);
	}).delay(200);
};

futuControls.prototype.hide = function () {
	this.holder_element.setAttribute('style', 'max-height:0; max-width:0;');
	this.holder_element.addClass('pos_hidden');
	$(document.body).removeEvent('click', closeAllFutuControls);
	$(document.body).removeEvent('touchend', closeAllFutuControls);
	this.holder_element.destroy();
	this.onClose();
	for (var i = 0; i < document.futuControls.length; i++) {
		if (document.futuControls[i] == this) {
			document.futuControls.splice(i, 1);
			break;
		}
	}
};
futuSelects = [];
futuSelect = new Class({
	initialize: function(select){
		if ($(select)) {
			futuSelects.push(this);
			this.built = false;
			this.shown = false;

			this.select = $(select);
			this.holder = this.select.getParent();
			this.button = new Element('span', {'class':'threshold_select_button'});
			this.button.inject(this.select, 'after');
			this.select.addClass('hidden');

			this.options = new Hash();
			this.optionsTags = [];
			$A(this.select.options).each((function (opt) {
				var selected_option = (opt.selected) ? true : false;
				this.options.include(opt.value, {'text' : opt.innerHTML, 'selected' : selected_option});
				var new_opt = new Element('a', {'href':'', 'class':'threshold_select_option'});
				new_opt.innerHTML = '<em><span class="threshold_select_option_text">' + opt.innerHTML + '</span></em>';
				if (selected_option) {
					new_opt.addClass('threshold_select_option_selected');
					this.button.innerHTML = this.button.innerHTML = '<span>' + opt.innerHTML + '</span>';
				}
				this.optionsTags.push(new_opt);
			}).bind(this));
			this.options_col = this.optionsTags.length;

			this.button.addEvent('click', (function (e) {
				e = new Event(e);
				e.preventDefault();
				e.stopPropagation();

				this.toggle();

			}).bind(this));

			this.closefunc = (this.hide).bind(this);
		}
	},

	toggle: function () {
		if (!this.built) {
			this.buildOpts();
		} else {
			if (!this.shown) {
				this.show();
			} else {
				this.hide();
			}
		}
	},
	buildOpts : function () {
		var half = Math.floor(this.optionsTags.length / 2);
		this.topOptions = new Element('div', {'class':'threshold_select_options_holder'});
		this.bottomOptions = new Element('div', {'class':'threshold_select_options_holder'});
		$A(this.optionsTags).each((function (opt, i){
			/*if (i <= half) {
			 opt.inject(this.topOptions);
			 } else {
			 opt.inject(this.bottomOptions);
			 }*/
			opt.inject(this.bottomOptions);

			opt.addEvent('click', (function (e) {
				e = new Event(e);
				e.preventDefault();
				e.stopPropagation();
				this.makeActive(opt, i);

			}).bind(this));
		}).bind(this));

		//this.makeOptionsEqual(this.getActiveOption());

		this.bottomOptions.inject(document.body);
		this.topOptions.inject(document.body);

		this.bottomOptionsFx = new Fx.Morph(this.bottomOptions, {duration:222});
		this.topOptionsFx = new Fx.Tween(this.topOptions, {duration:200});

		this.built = true;
		this.show();
	},

	makeActive : function (opt, i) {

		this.getActiveOption().removeClass('threshold_select_option_selected');

		opt.addClass('threshold_select_option_selected');

		this.makeOptionsEqual(opt);

		this.button.innerHTML = '<span>' + this.select.options[i].innerHTML + '</span>';
		this.select.selectedIndex = i;
		if (this.select.onchange) {
			this.select.onchange();
		}
		else {
			this.select.fireEvent('change');
		}
		this.hide();
	},

	setValue : function (value) {
		this.select.getElements('option').each(function(option, index) {
			option.get('value') == value && this.optionsTags[index].fireEvent('click', {type: 'click'});
		}.bind(this));
	},

	getActiveOption : function () {
		if (this.bottomOptions.getElement('.threshold_select_option_selected')) {
			return this.bottomOptions.getElement('.threshold_select_option_selected');
		} else if (this.topOptions.getElement('.threshold_select_option_selected')) {
			return this.topOptions.getElement('.threshold_select_option_selected');
		} else {
			return false;
		}
	},

	makeOptionsEqual : function (opt) {
		if (this.options_col > 2) {
			var top_col = this.topOptions.getElements('.threshold_select_option').length;
			var bottom_col = this.bottomOptions.getElements('.threshold_select_option').length;
			if (opt.getParent() ==  this.topOptions) {
				if (top_col < bottom_col) {
					this.bottomOptions.getElements('.threshold_select_option')[0].inject(this.topOptions);
				}
			} else if (opt.getParent() ==  this.bottomOptions) {
				if (top_col > bottom_col) {
					this.topOptions.getElements('.threshold_select_option')[top_col - 1].inject(this.bottomOptions, 'top');
				}
			}
		}

	},

	show : function () {
		this.bottomOptions.style.left = '-10000px';
		this.topOptions.style.left = '-10000px';

		this.bottomOptions.removeClass('hidden');
		this.topOptions.removeClass('hidden');

		this.bottomOptions_width = this.bottomOptions.getSize().x;
		this.bottomOptions_height = this.bottomOptions.getSize().y;

		this.topOptions_width = this.topOptions.getSize().x;
		this.topOptions_height = this.topOptions.getSize().y;

		this.buttonHeight = this.button.getCoordinates().height;
		this.buttonWidth = this.button.getCoordinates().width;
		this.buttonTop = this.button.getCoordinates(document.body).top;
		this.buttonLeft = this.button.getCoordinates(document.body).left + this.button.getStyle('padding-left').toInt();

		this.holder = document.body;

		var insidePadding = this.holder.getElements('.threshold_select_option')[0].getStyle('padding-left').toInt() + this.holder.getElements('.threshold_select_option_text')[0].getStyle('padding-left').toInt();

		var bottom_options_top = this.buttonTop + this.buttonHeight + 5;
		var bottom_options_left = this.buttonLeft - insidePadding;

		var window_scroll_y = window.getScroll().y;
		var window_scroll_x = window.getScroll().x;
		var window_height = window.getSize().y;
		var window_width = window.getSize().x;

		var bottom_options_relative_top = bottom_options_top - window_scroll_y;
		var bottom_options_relative_left = bottom_options_left - window_scroll_x;

		if (window_height - bottom_options_relative_top < this.bottomOptions_height) {
			bottom_options_top = window_scroll_y + window_height - this.bottomOptions_height;
		}

		if (window_scroll_y > bottom_options_top) {
			bottom_options_top = window_scroll_y;
		}

		if (window_width - bottom_options_relative_left < this.bottomOptions_width) {
			bottom_options_left = window_scroll_x + window_width - this.bottomOptions_width;
		}

		if (window_scroll_x > bottom_options_left) {
			bottom_options_left = window_scroll_x;
		}

		this.bottomOptions.setStyles({
			top: bottom_options_top,
			left: bottom_options_left,
			height: 0
		});

		this.bottomOptionsFx.start({
			height: this.bottomOptions_height
		});

		document.addEvent('click', this.closefunc);
		this.shown = true;

		this.hideAll();
	},

	hide: function () {
		if (this.built) {
			this.bottomOptions.addClass('hidden');
			this.topOptions.addClass('hidden');
			document.removeEvent('click', this.closefunc);
			this.shown = false;
		}
	},

	hideAll : function () {
		$A(futuSelects).each((function (thresholdSel) {
			if (thresholdSel != this) {
				thresholdSel.hide();
			}
		}).bind(this));
	}
});
futuFileUploader = new Class({
	Implements: Options,
	options: {
		container: null,
		browseButton: null,
		dropElement: null,
		dropElementNode: null,
		uploadProgress: null,
		uploadComplete: null,
		filesAdded: null,
		uploadErrors: null,
		url: ajaxUrls.media
	},
	initialize: function(options){
		this.setOptions(options);
		this.initUploader();
		if (this.options.dropElement) {
			this.initDragListeners();
		}
	},

	initUploader: function() {
		this.file_uploader = new plupload.Uploader({
			runtimes : 'html5,flash',
			container: this.options.container,
			browse_button : this.options.browseButton,
			drop_element: this.options.dropElement,
			max_file_size : '10mb',
			url : this.options.url,
			flash_swf_url: '/js/plupload.flash.swf',
			urlstream_upload: true,
			multipart_params : {
				csrf_token : globals.user ? globals.user.csrf_token : ''
			}
		});
		this.file_uploader.init();
		this.file_uploader.bind('FilesAdded', function(up, files) {
			window.setTimeout(function () {
				up.start();
				if (this.options.filesAdded && typeof this.options.filesAdded === 'function') {
					this.options.filesAdded();
				}
			}.bind(this), 200);
		}.bind(this));

		if (this.options.uploadProgress) {
			this.file_uploader.bind('UploadProgress', this.options.uploadProgress);
		}

		if (this.options.uploadComplete) {
			this.file_uploader.bind('UploadComplete', this.options.uploadComplete);
		}

		if (this.options.fileUploaded) {
			this.file_uploader.bind('FileUploaded', this.options.fileUploaded);
		}

		this.file_uploader.bind('Error', (function(up, error) {
			if (error.status == 413) {
				new futuAlert('<span class="b-futu_alert_error_text">Это слишком большой файл, большой по весу, в смысле, в мегабайтах. А должен быть не более 25 мегабайт.</span>');
				if (this.options.uploadErrors && this.options.uploadErrors['status_' + error.status]) {
					this.options.uploadErrors['status_' + error.status]();
				}
			} else if (error.status == 404) {
				new futuAlert('Сервер ответил 404.');
			} else {
				new futuAlert('Файл не приложился, попробуйте ещё раз.');
			}
		}).bind(this));
	},

	refreshUploader: function() {
		this.file_uploader.refresh();
	},

	initDragListeners: function() {
		if (utils.isFileDragAndDropSupported()) {
			utils.addListener(this.options.dropElementNode, 'dragover', (function (e) {
				this.options.dropElementNode.addClass('b-file_uploader_drag_hover');
			}).bind(this));

			utils.addListener(this.options.dropElementNode, 'drop', (function (e) {
				this.options.dropElementNode.removeClass('b-file_uploader_drag_hover');
			}).bind(this));

			utils.addListener(this.options.dropElementNode, 'dragexit', (function (e) {
				this.options.dropElementNode.removeClass('b-file_uploader_drag_hover');
			}).bind(this));

			utils.addListener(this.options.dropElementNode, 'dragend', (function (e) {
				this.options.dropElementNode.removeClass('b-file_uploader_drag_hover');
			}).bind(this));
		} else {
			this.options.dropElementNode.innerHTML = '';
		}
	}

});
var futuPopup = new Class({
	Implements: Options,
	options: {
		target: null,
		popupEl: null,
		closeBtn: null
	},

	initialize: function (options) {
		this.setOptions(options);
		if (!futuPopup.isInitialized) {
			window.addEvent('click', function (event) {
				if (!this.options.popupEl.hasClass('hidden') && (event.target != this.options.popupEl && !event.target.getParent('#' + this.options.popupEl.get('id')))) {
					this.hide();
				}
			}.bind(this));
			window.addEvent('keydown', function (event) {
				if (event.code == 27 && !this.options.popupEl.hasClass('hidden')) {
					this.hide();
				}
			}.bind(this));
			if (this.options.closeBtn) {
				this.options.closeBtn.addEvent('click', function (event) {
					event.preventDefault();
					this.hide();
				}.bind(this));
			}
			futuPopup.isInitialized = true;
		}
		if (this.options.popupEl.hasClass('hidden')) {
			this.show();
		} else {
			this.hide();
		}
	},
	show: function () {
		var targetCoordinates = this.options.target.getCoordinates();
		this.options.popupEl
			.removeClass('hidden')
			.setStyles({
				top: targetCoordinates.top + 30
			});
	},
	hide: function () {
		this.options.popupEl
			.addClass('hidden');
	}
});
var futuMediaPlayers = [];
var futuMediaPlayer = new Class({
	Implements: Options,
	options: {
		url: null,
		media_player_container: null
	},
	initialize: function (options) {
		if (!options.url) {
			new futuAlert('Нет ссылки для медиа-плеера.');
			return false;
		}
		options.height = options.height || 359;
		options.width = options.width || 500;
		this.destroyPlayer = options.destroyPlayer || function () {};
		this.embed = options.embed || false;
		
		var media_uri = new URI(options.url);
		var media_player_element = null;
		
		var file_extension = media_uri.get('file').split('.')[media_uri.get('file').split('.').length - 1];
		
		switch(file_extension) {
			case 'webm':
			case 'mp4':
			case 'ogv':
			case '3gp':
				media_player_element = this.getFilePlayer(media_uri, file_extension);
				break;
			default :
				switch(media_uri.get('host')) {
					case 'youtube.com':
					case 'www.youtube.com':
					case 'youtu.be':
					case 'www.youtu.be':
					case 'm.youtube.com':
						media_player_element = this.getYoutubePlayer(media_uri, options.width, options.height);
						break;
					case 'coub.com':
					case 'www.coub.com':
						media_player_element = this.getCoubPlayer(media_uri, options.width, options.height);
						break;
					case 'vimeo.com':
					case 'www.vimeo.com':
						media_player_element = this.getVimeoPlayer(media_uri, options.width, options.height);
						break;
					case 'soundcloud.com':
					case 'www.soundcloud.com':
						media_player_element = this.getSoundcloudPlayer(media_uri, options.width, options.height);
						break;
					case 'twitch.tv':
					case 'www.twitch.tv':
						media_player_element = this.getTwitchPlayer(media_uri, options.width, options.height);
						break;
					case 'ustream.tv':
					case 'www.ustream.tv':
						media_player_element = this.getUstreamPlayer(media_uri, options.width, options.height);
						break;
					case 'rutube.ru':
					case 'www.rutube.ru':
						media_player_element = this.getRutubePlayer(media_uri, options.width, options.height);
						break;
					case 'gfycat.com':
					case 'www.gfycat.com':
						media_player_element = this.getGfycatPlayer(media_uri, options.width, options.height);
						break;
					case 'i.imgur.com':
						media_player_element = this.getImgurPlayer(media_uri, options.width, options.height);
						break;
					default :
						//new futuAlert('Неизвестный медиа формат на сайте' + media_uri.get('host'));
				}
		}
		if (media_player_element) {
			this.media_player_element = media_player_element;
		} else {
			this.media_player_element = null;
		}
	},
	getGfycatPlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<video {autoplay} loop="" preload="metadata" controls="" width="500">\
			<source src="//zippy.gfycat.com/{media_id}.webm" type="video/webm">\
			<source src="//zippy.gfycat.com/{media_id}.mp4" type="video/webm">\
			<source src="//fat.gfycat.com/{media_id}.webm" type="video/mp4">\
			<source src="//fat.gfycat.com/{media_id}.mp4" type="video/mp4">\
			<source src="//giant.gfycat.com/{media_id}.webm" type="video/webm">\
			<source src="//giant.gfycat.com/{media_id}.mp4" type="video/mp4">\
		</video>';
		var media_id = media_uri.get('file') ? media_uri.get('file') : media_uri.get('directory').split('/')[1];
		media_player_html = media_player_html.substitute({
			media_id : media_id,
			autoplay: this.embed ? '' : 'autoplay=""'
		});
		media_player_element = new Element('div', {
			'class' : 'js-media_player',
			'html' : media_player_html,
			'styles' : {
				'padding' : '5px 0'
			}
		});
		var video_element = media_player_element.getElement('video');
		video_element.addEvent('click', function (event) {
			var e = new Event(event);
			$$('video').each(function (other_video_element) {
				if (other_video_element != video_element) {
					other_video_element.pause();
				}
			});
			if (!e.alt) {
				futuMediaPlayer.destroyAllPlayers(video_element);
			}
			if (video_element.paused) {
				video_element.play();
			} else {
				video_element.pause();
			}
		});
		return media_player_element;
	},
	getUstreamPlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<iframe class="b-video_player" width="480" height="302" src="//www.ustream.tv/embed/{media_id}?v=3&amp;wmode=direct" scrolling="no" frameborder="0" style="border: 0px none transparent;"></iframe>';
		var media_id = media_uri.get('file') ? media_uri.get('file') : media_uri.get('directory').split('/')[2];
		media_player_html = media_player_html.substitute({
			media_id : media_id
		});
		media_player_element = new Element('div', {
			'class' : 'js-media_player',
			'html' : media_player_html,
			'styles' : {
				'padding' : '5px 0'
			}
		});
		return media_player_element;
	},
	
	getRutubePlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<iframe class="b-video_player" width="500" height="359" src="//rutube.ru/play/embed/{media_id}" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowfullscreen></iframe>';
		var media_id = media_uri.get('file') ? media_uri.get('file') : media_uri.get('directory').split('/')[2];
		media_player_html = media_player_html.substitute({
			media_id : media_id
		});
		media_player_element = new Element('div', {
			'class' : 'js-media_player',
			'html' : media_player_html,
			'styles' : {
				'padding' : '5px 0'
			}
		});
		return media_player_element;
	},
	
	getImgurPlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<video class="b-video_player" autoplay="" preload="metadata" controls="" width="500">\
			<source src="//i.imgur.com/{media_id}.webm" type="video/webm">\
			<source src="//i.imgur.com/{media_id}.mp4" type="video/mp4">\
		</video>';
		var media_id = media_uri.get('file').split('.')[0];
		media_player_html = media_player_html.substitute({
			media_id : media_id
		});
		media_player_element = new Element('div', {
			'class' : 'js-media_player',
			'html' : media_player_html,
			'styles' : {
				'padding' : '5px 0'
			}
		});
		return media_player_element;
	},
	
	getTwitchPlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<iframe class="b-video_player" src="//twitch.tv/{media_id}/embed" frameborder="0" scrolling="no" height="378" width="620"></iframe>';
		
		var media_id = media_uri.get('file') ? media_uri.get('file') : media_uri.get('directory').split('/')[1];
		
		media_player_html = media_player_html.substitute({
			media_id : media_id
		});
		
		media_player_element = new Element('div', {
			'class' : 'js-media_player',
			'html' : media_player_html,
			'styles' : {
				'padding' : '5px 0'
			}
		});
		
		return media_player_element;
	},
	getSoundcloudPlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<iframe class="b-video_player" width="100%" height="166" scrolling="no" frameborder="no"src="//w.soundcloud.com/player/?url={soundcloud_url_as_get_parameter}&auto_play=true"></iframe>';
		
		var soundcloud_url_as_get_parameter = encodeURIComponent(media_uri);
		
		media_player_html = media_player_html.substitute({
			soundcloud_url_as_get_parameter : soundcloud_url_as_get_parameter
		});
		
		media_player_element = new Element('div', {
			'class' : 'js-media_player',
			'html' : media_player_html,
			'styles' : {
				'padding' : '5px 0'
			}
		});
		
		return media_player_element;
	},
	getFilePlayer: function (file_uri, file_type, media_width, media_height) {
		var media_player_html = '<video {autoplay} loop="" preload="metadata" controls="" width="500">\
			<source src="{file_src}" type="video/{file_type}">\
		</video>';
		var file_src = file_uri.toString();
		media_player_html = media_player_html.substitute({
			file_src : file_src,
			file_type : file_type,
			autoplay: this.embed ? '' : 'autoplay=""'
		});
		media_player_element = new Element('div', {
			'class' : 'js-media_player',
			'html' : media_player_html,
			'styles' : {
				'padding' : '5px 0'
			}
		});
		var video_element = media_player_element.getElement('video');
		video_element.addEvent('click', function (event) {
			var e = new Event(event);
			e.preventDefault();
			$$('video').each(function (other_video_element) {
				if (other_video_element != video_element) {
					other_video_element.pause();
				}
			});
			if (!e.alt) {
				futuMediaPlayer.destroyAllPlayers(video_element);
			}
			if (video_element.paused) {
				video_element.play();
			} else {
				video_element.pause();
			}
		});
		return media_player_element;
	},
	
	getVimeoPlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<iframe class="b-video_player" src="{media_player_src}" width="{media_width}" height="{media_height}" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';
		var media_id = media_uri.get('file') ? media_uri.get('file') : media_uri.get('directory').split('/')[1];
		if (media_id) {
			var media_player_src = '//player.vimeo.com/video/' + media_id + '?html5=0&version=3&wmode=transparent&autoplay=1';
			media_player_html = media_player_html.substitute({
				media_player_src : media_player_src,
				media_width : media_width,
				media_height : media_width*(media_height/media_width)
			});
			media_player_element = new Element('div', {
				'class' : 'js-media_player',
				'html' : media_player_html,
				'styles' : {
					'padding' : '5px 0'
				}
			});
			return media_player_element;
		} else {
			new futuAlert('Нет параметра "v" в ссылке на youtube-видео ' + media_uri + '.');
			return null;
		}
	},
	getYoutubePlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<iframe class="b-video_player" src="{media_player_src}" width="{media_width}" height="{media_height}" frameborder="0" allowfullscreen></iframe>';
		var media_id = media_uri.getData('v');
		if (media_uri.get('host') == 'youtu.be') {
			media_id = media_uri.get('file') ? media_uri.get('file') : media_uri.get('directory').split('/')[1];
		} else {
			media_id = media_uri.getData('v');
		}
		if (media_id) {
			var media_time = media_uri.getData('t') || media_uri.get('fragment').parseQueryString().t || null;
			var media_time_offset = 0;
			if (media_time) {
				media_time_offset_hours = media_time.match(/[0-9]+h/) ? parseInt(media_time.match(/[0-9]+h/)[0]) : 0;
				media_time_offset_minutes = media_time.match(/[0-9]+m/) ? parseInt(media_time.match(/[0-9]+m/)[0]) : 0;
				media_time_offset_seconds = media_time.match(/[0-9]+s/) ? parseInt(media_time.match(/[0-9]+s/)[0]) : 0;
				if (!media_time_offset_hours && !media_time_offset_minutes && !media_time_offset_seconds && parseInt(media_time)) {
					media_time_offset = parseInt(media_time);
				} else {
					media_time_offset = (media_time_offset_hours ? media_time_offset_hours * 3600 : 0) + 
										(media_time_offset_minutes ? media_time_offset_minutes * 60 : 0) + 
										(media_time_offset_seconds ? media_time_offset_seconds * 1 : 0);
				}
			}
			var media_player_src = '//www.youtube.com/embed/' + media_id + '?html5=0&version=3&wmode=transparent&autoplay=1';
			media_player_src += media_time_offset ? '&start=' + media_time_offset : '';
			media_player_html = media_player_html.substitute({
				media_player_src : media_player_src,
				media_width : media_width,
				media_height : media_width*(media_height/media_width)
			});
			media_player_element = new Element('div', {
				'class' : 'js-media_player',
				'html' : media_player_html,
				'styles' : {
					'padding' : '5px 0'
				}
			});
			return media_player_element;
		} else {
			new futuAlert('Нет параметра "v" в ссылке на youtube-видео ' + media_uri + '.');
			return null;
		}
	},
	getCoubPlayer: function (media_uri, media_width, media_height) {
		var media_player_html = '<iframe class="b-video_player" src="{media_player_src}" width="{media_width}" height="{media_height}" frameborder="0" allowfullscreen></iframe>';
		var media_id = media_uri.get('file') ? media_uri.get('file') : media_uri.get('directory').split('/')[2];
		if (media_id) {
			var media_player_src = '//coub.com/embed/' + media_id + '?muted=false&autostart=true&originalSize=false&hideTopBar=true&startWithHD=false';
			media_player_html = media_player_html.substitute({
				media_player_src : media_player_src,
				media_width : media_width,
				media_height : media_width*(media_height/media_width)
			});
			media_player_element = new Element('div', {
				'class' : 'js-media_player',
				'html' : media_player_html,
				'styles' : {
					'padding' : '5px 0 0'
				}
			});
			return media_player_element;
		} else {
			new futuAlert('Не нашли id coub-видео ' + media_uri + '.');
			return null;
		}
	},
	Static : {
	    getMediaElements: function (container) {
	        container = container || document.body;
	        var media_hosts = [
				'youtube.com/watch',
				'youtu.be/',
				'm.youtube.com/',
				'coub.com/view',
				'vimeo.com/',
				'soundcloud.com/',
				'twitch.tv/',
				//'i.imgur.com/',
				'ustream.tv/',
				'rutube.ru/video/',
				'gfycat.com/'
			];

			var link_href_starts_with = [];
			media_hosts.each(function (media_host) {
				link_href_starts_with.push('http://' + media_host);
				link_href_starts_with.push('http://www.' + media_host);
				link_href_starts_with.push('https://' + media_host);
				link_href_starts_with.push('https://www.' + media_host);
			});

			var media_extensions = [
				'.webm',
				'.mp4',
				'.ogv',
				'.3gp'
			];

			var media_links_rule = link_href_starts_with.map(function (link_start) {
				return 'a[href^=' + link_start + ']'
			}).join(', ') + 
			', ' + 
			media_extensions.map(function (media_extension) {
				return 'a[href$=' + media_extension + ']'
			}).join(', ');

			return container.getElements(media_links_rule);
	    },
		initPopupMedia: function (container) {
		    var media_extensions = [
				'.webm',
				'.mp4',
				'.ogv',
				'.3gp'
			];
			
			var link_elements = futuMediaPlayer.getMediaElements(container);
			
			link_elements.each(function (link_element) {
				var embed_media = false;
				media_extensions.forEach(function (media_extension) {
					if (link_element.getAttribute('href').endsWith(media_extension)) {
						embed_media = true;
					}
				});
				if (link_element.getAttribute('href').indexOf('gfycat.com/') >= 0) {
					embed_media = true;
				}

				if (!link_element.hasClass('js-popup_media_inited')) {
					link_element.addClass('js-popup_media_inited');

					if ((link_element.getAttribute('data-preview') && 
						link_element.innerHTML.length == 0) || 
						link_element.getElement('img')) {
						if (link_element.getElement('img')) {
							var link_element_img_width = link_element.getElement('img').width;
							var link_element_img_height = link_element.getElement('img').height;
							link_element.getElement('img').addClass('hidden');
						}

						var player_preview_element = new Element('span', {
							'class' : 'b-media_player_preview',
							'html' : '<span class="b-media_player_preview_pic_holder">\
								<img src="{preview_src}" width="{preview_width}" height="{preview_height}" alt="{preview_alt}">\
								<span class="b-media_player_preview_play"></span>\
							</span>'.substitute({
								preview_src : link_element.getAttribute('data-preview') || link_element.getElement('img').src,
                                preview_width : link_element.getAttribute('data-preview_width') || link_element_img_width,
                                preview_height : link_element.getAttribute('data-preview_height') || link_element_img_height,
								preview_alt : link_element.getElement('img') && link_element.getElement('img').getAttribute('alt') ? link_element.getElement('img').getAttribute('alt') : ''
							})
						});

						if (link_element.getElement('img')) {
							player_preview_element.inject(link_element.getElement('img'), 'after');
						} else {
							player_preview_element.inject(link_element, 'top');
						}

						player_preview_element.getElement('.b-media_player_preview_pic_holder').addEvent('click', function (e) {
							e.preventDefault();
							e.stopPropagation();
							
							var destroyPlayer = function () {
								player_preview_element.getElement('.b-media_player_preview_pic_holder').removeClass('hidden');
								media_player.media_player_element.destroy();
							}
							
							player_preview_element.getElement('.b-media_player_preview_pic_holder').addClass('hidden');
							var media_player = new futuMediaPlayer({
								url: link_element.getAttribute('href'),
								width: link_element.getAttribute('data-preview_width'),
								height: link_element.getAttribute('data-preview_height'),
								destroyPlayer: destroyPlayer
							});
							if (media_player.media_player_element) {
								media_player.media_player_element.inject(player_preview_element.getElement('.b-media_player_preview_pic_holder'), 'after');
								if (!e.alt) {
									futuMediaPlayer.destroyAllPlayers();
								}
								media_player.media_player_element.inject(link_element, 'after');
								futuMediaPlayers.push(media_player);
							}
						});
					} else if (link_element.getAttribute('href') == link_element.innerHTML.replace(/–/g, '-') && embed_media) {
						var media_player = new futuMediaPlayer({
							url: link_element.getAttribute('href'),
							embed: true
						});
						media_player && media_player.media_player_element && $(media_player.media_player_element).replaces(link_element);
					} else {
						var player_toggle_button_element = new Element('a', {
							href : link_element.href,
							html : '&#9654;',
							'class' : 'b-popup_video_toggle js-popup_media_inited'
						});
						player_toggle_button_element.inject(link_element, 'before');
						player_toggle_button_element.addEvent('click', function (e) {
							e.preventDefault();
							var destroyPlayer = function () {
								player_toggle_button_element.innerHTML = '&#9654;';
								player_toggle_button_element.removeClass('active');
								if (link_element.getNext()) {
									link_element.getNext().destroy();
									link_element.appendText(' ', 'after');
								}
							}
							if (link_element.getNext() && link_element.getNext().hasClass('js-media_player')) {
								if (!e.alt) {
									futuMediaPlayer.destroyAllPlayers();
								} else {
									destroyPlayer();
								}
							} else {
								player_toggle_button_element.innerHTML = 'll';
								player_toggle_button_element.addClass('active');
								var media_player = new futuMediaPlayer({
									url: link_element.getAttribute('href'),
									width: link_element.getAttribute('data-preview_width'),
									height: link_element.getAttribute('data-preview_height'),
									destroyPlayer: destroyPlayer
								});
								if (media_player.media_player_element) {
									if (!e.alt) {
										futuMediaPlayer.destroyAllPlayers();
									}
									media_player.media_player_element.inject(link_element, 'after');
									futuMediaPlayers.push(media_player);
								}
							}
						});

					}
				}
			});

			futuMediaPlayer.setImgurPlayers(container);
		},
		destroyAllPlayers: function (except_video_element) {
			futuMediaPlayers.each(function (opened_media_player) {
				opened_media_player.destroyPlayer();
				futuMediaPlayers = futuMediaPlayers.splice(1, futuMediaPlayers.indexOf(opened_media_player));
			});
			$$('video').each(function (video_element) {
				if (except_video_element != video_element) {
					video_element.pause();
				}
			});
		},
		setImgurPlayers: function (container) {
			container = container || document.body;
			container.getElements('a[data-imgur_id]').each(function (imgur_link) {
				if (!imgur_link.getParent('.imgur-embed-pub')) {
					var imgur_holder = new Element('blockquote', {
						'class': 'imgur-embed-pub',
						'data-id': imgur_link.getAttribute('data-imgur_id'),
						'lang': 'rus'
					});
					imgur_holder.inject(imgur_link, 'before');
					imgur_link.inject(imgur_holder);
					if (window.imgurEmbed) {
						imgurEmbed.tasks++
						window.imgurEmbed.createIframe?imgurEmbed.createIframe():imgurEmbed.tasks++;
					}
				}
			});
		}
	}
});

futuShare = {
  shown : false,
  comments : [],

  showPopup: function(el, post_id, comment_id, comment_link, comment_level) {

    // Проверяем, показывается ли уже какой-то попап
    if (this.shown == true) {
      if (this.comment_id == comment_id) {
        return false;
      } 
      else {
        this.destroyPopup();
        this.shown = false; 
      }
    }

    this.el = el;
    // сбор id всех комментариев в дереве 
    this.comments.push(comment_id);

    (function() {
      var comment = el.getParent('.comment');
      if (comment_level != 0) {
        for (var i = comment_level; i != 0; i--) {
          parent_comment_id = comment.getProperty('data-parent_comment_id');
          this.comments.push(parseInt(parent_comment_id));
          comment = $(parent_comment_id);
          if (!comment) break
        }
      }
    }).call(this);

    if (this.comments.length > 4) this.comments.splice(this.comments.length-1, this.comments.length-4);
    // приветствие
    this.greeting = this.greeting == null ? 'Привет, %username%' : this.greeting ;
    this.post_id - post_id;
    this.comment_link = comment_link;
    this.comment_level = comment_level;
    this.comment_id = comment_id;

    // Собрали нужные данные. Теперь показываем попап.
  
    if (!$('js-futu_share')) {
      var container =  $(document.body);
      this.popup = new Element('div', {
          'class' : 'b-futu_share',
          'id' : 'js-futu_share'
        });  
      this.popup.inject(container);
    } else {
      this.popup = $('js-futu_share');
    }
    this.popup_displayed = this.popup;
    var popupInner = '<a href="javascript:;" class="b-futu_share-close" onclick="futuShare.destroyPopup()">x</a>'+
      '<div class="b-futu_share-image b-futu_share-loading" id="js-futu_share-image">'+
        '<div class="b-futu_share_load_wrap" id="js-futu_share_load_wrap">'+
          '<div class="b-loading_animation" id="js-futu_share-preloader"><span></span><span></span><span></span></div>'+
        '</div>'+
      '</div>';
    this.popup.innerHTML = popupInner; 

    // Вставляем приветствие 

    this.getGreeting()
    
    // Показали попап и позиционируем его
    this.setPosition(this.el, this.popup);

    // Идем за изображением
    this.getScreenshot(this.comments.slice(0,1)); 
    this.requested_level = 1;

    // Обработчики событий 
    document.addEvent('keyup', function(e){
      if (e.code == 27) {
        this.destroyPopup();
      }
    }.bind(this));

    document.addEvent('click', function(e){
      if (!e.target.getParent('.b-futu_share') && !e.target.hasClass('b-futu_share') && !e.target.getParent('.b-button_share')) {
        this.destroyPopup();
      }
    }.bind(this));
  },

  getGreeting: function(){
    if ($('js-futu_share-greeting')) {
      $('js-futu_share-greeting').destroy();
    }  
    setTimeout(function(){
      this.greeting_block = new Element('div', {
        'class': 'b-futu_share-greeting',
        'id':'js-futu_share-greeting',
        'html':this.greeting
      })
      this.greeting_block.inject($('js-futu_share_load_wrap'),'bottom')
    }.bind(this),1000);
  },

  getScreenshot: function(comments) {
    this.loader();
    this.setPosition(this.el, this.popup);
    var url ='/api/sharing/comments/image/?ids='+comments.join(',');
    new futuAjaxNew({
      button: new Element('a'),
      url : url,
      type: 'GET',
      headerContentType: 'application/x-www-form-urlencoded',
      onLoadFunction : function (response) {
        if (this.shown != true) {
          this.renderControls(response);
        }
        this.redraw(response)
      }.bind(this)
    });
  },

  renderControls: function(response){
    var popupInner = '<div class="b-futu_share-controls" id="js-futu_share-controls">'+
      '<input type="text" class="b-futu_share-input" id="js-futu_share-input" placeholder="Генерирую ссылку" readonly/>'+
      '<div class="b-futu_share-buttons">'+
          '<a href="javascript:;" class="b-futu_share-copy" id="js-futu_share-link" onclick="futuShare.copyLink(this,$(\'js-futu_share-input\'),\'link\')">Ссылка на картинку</a>'+
          '<a href="'+ response.url +'" class="b-futu_share-copy" download target="_blank">Скачать</a>'+
          '<a href="javascript:;" class="b-futu_share-copy" id="js-futu_share-blog" onclick="futuShare.copyLink(this,$(\'js-futu_share-input\'),\'blog\')">Вставить в блог</a>'+
        '</div>'
      if (this.comment_level) {
        popupInner += '<a href="javascript:;" class="b-futu_share-parent" id="js-futu_share-parent">Добавить комментарий сверху</a> \
                       <a href="javascript:;" class="b-futu_share-parent" id="js-futu_share-no-parent">Удалить </a>';
      } 
      else {
        popupInner += '</div>';
      }
      this.popup.innerHTML +=popupInner;
      if (this.comment_level != 0) {
        $('js-futu_share-parent').addEvent('click', function(){
          if (this.requested_level < 4) {
            futuShare.getScreenshot([this.comments.slice(0, this.requested_level+1)])
            this.requested_level ++;
          }
        }.bind(this));

        $('js-futu_share-no-parent').addEvent('click', function(){
          futuShare.getScreenshot([this.comments.slice(0, this.requested_level-1)])
          this.requested_level --;
        }.bind(this))
      }
  },

  loader: function() {
    var $preloader = $('js-futu_share_load_wrap'),
        $share_image = $('js-futu_share-image');
        $share_image_height = $share_image.getSize().y;
    $share_image.addClass('b-futu_share-loading');
    if ($preloader) $preloader.removeClass('hidden');
    if ($share_image.getElement('.image')) $share_image.getElement('.image').destroy();    
    this.getGreeting(); 
  },


  redraw: function(response) {
    var $preloader = $('js-futu_share_load_wrap'),
        $share_image = $('js-futu_share-image');
    this.setPosition(this.el, this.popup);

    if ($('js-futu_share-no-parent')) {
      if (this.requested_level < 2) {
          $('js-futu_share-no-parent').addClass('hidden')
      } 
      else {
        $('js-futu_share-no-parent').removeClass('hidden')
      }

      if (this.requested_level > 3 || this.requested_level >= this.comments.length) {
        $('js-futu_share-parent').addClass('b-futu_share-parent__hidden')
      } else {
        $('js-futu_share-parent').removeClass('b-futu_share-parent__hidden') 
      }

      if ($('js-futu_share-parent')) {
        this.get_parent_input = $('js-futu_share-parent').getElement('input');  
      }
    }

    this.url = response.url;

    $share_input = $('js-futu_share-input'),
    $share_input.addEvent('click', function(e){
      e.target.setSelectionRange(0,e.target.value.length);
    });

    if (this.image) this.image.destroy();
    this.image = new Element('img', {
      'class': 'image',
      'src': response.url,
      'width': response.width,
      'height': response.height
    });
    this.image_url = response.url;
    if ($preloader) $preloader.addClass('hidden');
    this.image.inject($share_image);
    $share_input.setProperty('value',response.url);
    $share_image.removeClass('b-futu_share-loading');

    this.image.addEvent('load', function(){
        this.setPosition(this.el,this.popup);
    }.bind(this))
    this.shown = true;
  },

  destroyPopup: function() {
    if (this.popup_displayed) {
      this.popup_displayed.destroy();
      this.shown = false;
      this.include_parent = 0;
      this.get_parent_input = null;
      this.comments = [];
      if (this.bg) this.bg.fade('out');
      document.body.setStyles({
        'height': 'auto',
        'overflow': 'visible'
      })
    }
  },

  setPosition: function(el,popup) {
    if (document.body.hasClass('l-touch') && window.getSize().x <= 640) {
      if (!this.bg) {
          var container =  $(document.body);
          this.bg = new Element('div', {
            'class': 'b-futu_share-bg'
          }); 
          this.bg.inject(container)
      }
      else {
        this.bg.fade('in')
      }
    }
    var popup_x = el.getPosition().x + popup.getSize().x > window.getSize().x ? el.getPosition().x - popup.getSize().x+12 : el.getPosition().x+12,
        popup_y;
    if (document.body.hasClass('l-500','l-touch')) {
        popup_y = window.getScroll().y + (window.getSize().y - popup.getSize().y)/2;
    } else {
        popup_y = popup.getSize().y > el.getPosition().y ? 0 : el.getPosition().y - popup.getSize().y+5;
    }

    if (document.body.hasClass('l-touch') && window.getSize().x <= 640) {
        body_h = window.getSize().y;
        document.body.setStyles({
          'height': body_h,
          'overflow': 'hidden'
        });
        if (popup.getSize().y > window.getSize().y) {
          popup.setStyle('height', body_h);
          popup_y = window.getScroll().y;
          var img_height = body_h - ($('js-futu_share-controls').getSize().y + 33*2 + 25);
          $('js-futu_share-image').setStyle('max-height', img_height);
        } 
        else {
          popup_y = window.getScroll().y + (window.getSize().y - popup.getSize().y)/2;
          this.bg.setStyles({
            'height': window.getSize().y,
            'top': window.getScroll().y
          })
        };
    }    
    popup.setStyles({
      'left':popup_x,
      'top': popup_y
    });
  },

  copyLink: function(el, input, type) {
    if (type == 'link') {
      input.setProperty('value', this.url);    
    } else if (type == 'blog') {
      input.setProperty('value', '<a href="https:'+this.comment_link+'"><img src="'+this.url+'"></a>');    
    }
    if (input.getProperty('value')) {
      input.setSelectionRange(0, input.getProperty('value').length);
      try {
        var successful = document.execCommand('copy');
        if (successful) {
          el.addClass('b-futu_share-successfull');

          if (type == 'link') {
            new futuAlert('Ссылка на изображение скопирована', false, 'futu_share-alert', true, 1, 1000)
          } else if (type == 'blog') {
            new futuAlert('Код для вставки скопирован', false, 'futu_share-alert', true, 1, 1000)
          }
        } else {
          new futuAlert('Ваш браузер не поддерживает функцию копирования. </br> Воспользуйтесь полем со ссылкой.'  )
        }
      } catch (err) {
        new futuAlert('Ваш браузер не поддерживает функцию копирования. </br> Воспользуйтесь полем со ссылкой.'  )
      }  
    }
  }
};



futuPics = {
	preparePic : function (target_src, preview_image_coordinates, preview_image) {
		var expanding_image = new Element('a', {
			'class' : 'js-image_opened b-image_can_shrink'
		});
		expanding_image.set('styles', {
			'display' : 'block',
			'position' : 'absolute',
			'left' : preview_image_coordinates.left + 'px',
			'top' : preview_image_coordinates.top + 'px',
			'width' : preview_image_coordinates.width + 'px',
			'height' : preview_image_coordinates.height + 'px',
			'zIndex' : 2,
			//'background-color': Colors.background_color,
			// 'background-image' :  background_image,
			'background-position' : '50% 50%',
			'background-repeat' : 'no-repeat',
			'background-size' : 'cover'
		});
		var background_image;
		var background_image = preview_image ? 'url(' + preview_image.getAttribute('src') + ')' : 'url(' + target_src + ')'
		if (preview_image) {
			background_image = 'url(' + preview_image.getAttribute('src') + ')';
			expanding_image.setStyle('background-image', background_image )
		} 
		else {
			background_image = new Element('img', {
				'src' : target_src,
				'style' : 'position:absolute; top:0; left:0; width:100%; height:100%;'
			});
			background_image.inject(expanding_image);
		}
		expanding_image.get('morph').removeEvents('complete');
		expanding_image.set('morph', {
			duration : 333,
			link : 'cancel',
			onStart: function() {
				if (!preview_image) {
					background_image.setStyle('opacity', 1)
				}
			},
			onComplete : function () {
				if (expanding_image.getElement('.js-image_expanding_description')) {
					var image_desciption_element = expanding_image.getElement('.js-image_expanding_description');
					image_desciption_element.morph({
						'opacity' : 1
					});
				}
			}
		});
		expanding_image.inject(document.body);
		return expanding_image;
	},
	addLoader : function (expanding_image) {
		var loader_element = new Element('span', {
			'class' : 'b-loading_animation',
			'html' : '<span></span><span></span><span></span>'
		});
		loader_element.set('styles', {
			'opacity' : 0
		});
		loader_element.set('morph', {
			duration : 222
		});
		loader_element.inject(expanding_image);
		loader_element.morph({
			'opacity' : 1
		});
	},
	expandPic : function (expanding_image, preview_image_coordinates, window_coordinates,original_image_width, original_image_height) {
		var target_width = original_image_width < window_coordinates.width ? original_image_width : window_coordinates.width;
		var target_height = original_image_height < window_coordinates.height ? original_image_height : window_coordinates.height;
		var k1 = target_width / original_image_width;
		var k2 = target_height / original_image_height;
		var k = k1 > k2 ? k2 : k1;
		if (k == k1) {
			target_height = original_image_height * k;
		} else {
			target_width = original_image_width * k;
		}


		var target_top = $(window).getScroll().y + window_coordinates.height / 2 - target_height/2;
		if (target_top < $(window).getScroll().y) {
			target_top = $(window).getScroll().y;
		}
		var target_left = preview_image_coordinates.left - ((target_width - preview_image_coordinates.width)/2);
		if ((target_left + parseInt(target_width)) > window_coordinates.width) {
			target_left = window_coordinates.width - target_width
		}
		if (target_left < $(window).getScroll().x) {
			target_left = $(window).getScroll().x;
		}

		if (preview_image_coordinates.width < target_width) {
			expanding_image.morph({
				'height' : target_height,
				'width' : target_width,
				'top' : target_top,
				'left' : target_left
			});
		}
	},
	shrinkPic : function (expanding_image, preview_image_coordinates, onShrinkComplete) {
		expanding_image.get('morph').removeEvents('complete');
		expanding_image.set('morph', {
			duration : 333,
			onComplete : function () {
				expanding_image.destroy();
				onShrinkComplete();
			}
		});
		expanding_image.morph({
			'height' : preview_image_coordinates.height,
			'width' : preview_image_coordinates.width,
			'top' : preview_image_coordinates.top,
			'left' : preview_image_coordinates.left,
			'opacity' : 0
		});

		if (expanding_image.getElement('.js-image_expanding_description')) {
			var image_desciption_element = expanding_image.getElement('.js-image_expanding_description');
			image_desciption_element.morph({
				'opacity' : 0
			});
		}
	},
	initExpandingPics : function (container) {
		container = container || document;
		var elements_classes = [
			'.b-group_image_wrap'
		];
		var comments_images_elements = container.getElements(elements_classes.join(', '));
		comments_images_elements.addClass('js-image_expanding').each(function (preview_image) {
			if (
					(! preview_image.getParent('.b-post_cover') && ( ! preview_image.getParent('a') || 
					preview_image.getParent('a').hasClass('b-post_preview_pic'))) || 
					!preview_image.hasClass('b-post_domain-icon')
				) {

				var target_src = preview_image.getAttribute('data-src') || preview_image.getAttribute('href') || preview_image.getAttribute('src'),
					target_src_width = preview_image.getAttribute('data-src-width') || null,
					target_src_height = preview_image.getAttribute('data-src-height') || null;

					/* 
						target_src_height и target_src_width нужны здесь для использования в futuPics.addZoomCursor
						в случае, если мы имеем гифку в мп4, т.к. избегаем загрузки гифки в image_copy 
						при выполнеии функции futuPics.addZoomCursor.
						Соответственно эти параметры есть только у гифок с видеоверсией.
					*/
				if (target_src) {
					futuPics.addZoomCursor(preview_image, target_src, target_src_width, target_src_height);
					preview_image.addEvent('click', function (event) {
						if (event.target.className != 'b-button_gif') {
							var show_timer = null;
							var loader_timer = null;

							var showPic = function () {
								var target_src_width = preview_image.getAttribute('data-src-width') || preview_image.getAttribute('width') || image_copy.width || null,
									target_src_height = preview_image.getAttribute('data-src-height') || preview_image.getAttribute('height') || image_copy.height || null;
								if (preview_image.getAttribute('data-video')) {
									var video_url = preview_image.getAttribute('data-video');
									var video = new Element ('video', {
										'html': '<source src="'+video_url+'">',
										'id':'js-expand-video',
										'width': '100%',
										'poster': preview_image.getAttribute('src') || null,
										autoplay: 'autoplay',
										preload: 'preload', 
										loop: 'loop',
										'style': 'opacity:0'
									});
									if (document.body.hasClass('l-touch_phone') || document.body.hasClass('l-touch_tablet')) {
										video.setAttribute('controls','controls');
									}
									var gif_link = new Element('a',{
										href: target_src,
										'class': 'b-button_gif',
										target: '_blank', 
										'html': 'GIF',
										events: {
											click: function(event){
												event.stopPropagation();
											}
										}
									})
									gif_link.inject(expanding_image)
									video.inject(expanding_image)
									video.onloadeddata = function(){
										video.setStyle('opacity', 1);
									}
										
								} 
								expanding_image.setAttribute('href', target_src);

								if (target_src != preview_image.getAttribute('src') || target_src_width > preview_image_coordinates.width || target_src_height > preview_image_coordinates.height) {
									if (expanding_image.getElement('.b-loading_animation')) {
										expanding_image.getElement('.b-loading_animation').destroy();
									}
									if (preview_image.getParent('.b-post_preview_pic')) {
										preview_image.getParent('.b-post_preview_pic').setStyle('opacity', 0);
									}

									futuPics.addDescription(expanding_image, preview_image);
									futuPics.expandPic(expanding_image, preview_image_coordinates, window_coordinates, target_src_width, target_src_height);
									setTimeout(function(){
										if (expanding_image.getElement('video')) {
											expanding_image.getElement('video').play();
										}
									},200)
									

									// Небольшой хак, который надо будет исправить. Связан с тем, что в профиле при клике на картинку сразу срабатывает и клик по expanding_image
									setTimeout(function(){ 
										expanding_image.addEvent('click', function (event) {
											if (!event || event.event.button != 1) {
												if (event) {
													event.preventDefault();
												}
												futuPics.shrinkPic(expanding_image, preview_image_coordinates, function () {
													if (preview_image.getElement('i')) {
														preview_image.getElement('i').removeClass('hidden');
													}
													preview_image.removeClass('js-image_expanding_opened');
													preview_image.setStyle('opacity', null);
													if (preview_image.getParent('.b-post_preview_pic')) {
														preview_image.getParent('.b-post_preview_pic').setStyle('opacity', null);
													}
												});
											}
										});
									},100)
									
								} else {
									expanding_image.destroy();
								}
							};

							if (event.event.button != 1) {
								event.preventDefault();
								$$('.js-image_opened').fireEvent('click');
								if (!preview_image.hasClass('js-image_expanding_opened')) {
									preview_image.addClass('js-image_expanding_opened');

									var preview_image_coordinates = preview_image.getCoordinates();
									var expanding_image = preview_image.getAttribute('data-video') ? futuPics.preparePic(target_src, preview_image_coordinates, preview_image) : futuPics.preparePic(target_src, preview_image_coordinates);
									var window_coordinates = $(window).getCoordinates();

									futuPics.addLoader(expanding_image);

									if (preview_image.getAttribute('data-video')) {
										var target_src_width = preview_image.getAttribute('data-src-width'),
											target_src_height = preview_image.getAttribute('data-src-height');
									} 
									else {
										var image_copy = new Element('img', {
											'src' : target_src,
											'class' : 'js-image_opened'
										});
										var target_src_width = image_copy.width,
											target_src_height = image_copy.height;
									}
									if (preview_image.hasAttribute('data-video')) {
										// следующее условие было обернуто в 100мс дилэй. Не думаю, что он был критичен.
										if (target_src_width && target_src_width > 0) {
											showPic();

										}
									} else {
										setTimeout(function(){
											showPic();
										},0)
										// image_copy.addEvent('load', function () {
										// 	showPic();
										// });
									}
								}
							}
						}	
					});

				}
			}
		});
	},
	addZoomCursor : function (preview_image, target_src, target_src_width, target_src_height) {
		if (!$(document.body).hasClass('l-touch_capable')) {
			if ((!preview_image.getAttribute('data-src') || preview_image.getAttribute('data-src') == preview_image.getAttribute('src')) && !preview_image.getParent('.b-post_gallery_preview')) {
				preview_image.addEvent('mouseenter', function () {
					if (!target_src_width || !target_src_height) {
						var image_copy = new Element('img', {
							'src' : target_src
						});
						var target_src_width = image_copy.width;
						var target_src_height = image_copy.height;
					}

					if (target_src_width && target_src_width > preview_image.getCoordinates().width) {
						preview_image.addClass('b-image_can_expand');
						if (image_copy) { 
							image_copy.destroy() 
						}
					}
					
				});
			} else {
				preview_image.addClass('b-image_can_expand');
			}
		}
	},
	addDescription : function (expanding_image, preview_image) {
		if (!preview_image.getParent('.post')) {
			return false;
		}
		var image_description = null;
		if (preview_image.getParent('.b-post_gallery_preview')) {
			var gallery_url = preview_image.getParent('.post').getElement('h3 a').href;
			var gallery_length = preview_image.getParent('.b-post_gallery_preview').getAttribute('data-gallery_length');
			image_description = '<a href="{gallery_url}">{total_gallery}</a>'.substitute({
				gallery_url : gallery_url,
				total_gallery: _('Всего {number} {object}').substitute({
					number : gallery_length,
					object : pluralize(ngettext('картинка', 'картинки'), 'картинок', gallery_length)
				})
			});
		} else if (preview_image.getParent('.post').getAttribute('data-post_type') == 'article') {
			var article_url = preview_image.getParent('.post').getElement('h3 a').href;
			image_description = '<a href="{article_url}">{read_article}</a>'.substitute({
				article_url : article_url,
				read_article: _('Читать статью')
			});
		}
		if (image_description) {
			var expanding_image_description = new Element('div', {
				'html' : image_description,
				'class': 'js-image_expanding_description'
			});
			expanding_image_description.set('styles', {
				'position' : 'absolute',
				'right' : 0,
				'bottom' : 0,
				'width' : 'auto',
				'height' : 'auto',
				'zIndex' : 2,
				'background-color': 'rgba(255, 255, 255, 0.8)',
				'padding' : '10px 20px',
				'font' : 'italic 1.09375em/1.28em Georgia, "Times New Roman", serif',
				'opacity' : 0
			});
			expanding_image_description.getElement('a').addEvent('click', function (event) {
				event.stopPropagation();
			});
			expanding_image_description.get('morph').removeEvents('complete');
			expanding_image_description.set('morph', {
				duration : 222,
				link : 'cancel'
			});
			expanding_image_description.inject(expanding_image);
		}
	}
};

wysiwyg = function (buttons_panel, textarea, is_moderator, is_president) {
	if (!$(textarea)) {
		new futuAlert('Ошибка зрения.');
		return false;
	}
	if (!$(buttons_panel)) {
		new futuAlert('Ошибка осязания.');
		return false;
	}
	this.textarea = textarea;
	this.buttons_panel = buttons_panel;
	this.is_moderator = is_moderator;
	this.is_president = is_president;
	this.init();
};
wysiwyg.prototype.init = function () {
	var html = '<a href="#" class="b-textarea_editor_button"><b>Bold</b></a>\
		<a href="#" class="b-textarea_editor_button"><i>Italic</i></a>\
		<a href="#" class="b-textarea_editor_button"><u>Underline</u></a>\
		<a href="#" class="b-textarea_editor_button">x<sup>2</sup></a>\
		<a href="#" class="b-textarea_editor_button">x<sub>2</sub></a>\
		<a href="#" class="b-textarea_editor_button"><span class="irony">Irony</span></a>\
		<a href="#" class="b-textarea_editor_button b-textarea_editor_link"><b>Link</b></a>\
		<a href="#" class="b-textarea_editor_button b-textarea_editor_image"><b>Image</b></a>\
		<a href="#" class="b-textarea_editor_button b-textarea_editor_spoiler"><b>Spoiler</b></a>\
		<a href="#" class="b-textarea_editor_button b-textarea_editor_code"><b>Code</b></a>';

	if (this.is_president) {
		html += '<a href="#" class="b-textarea_editor_button"><h2>H2</h2></a>';
	}
	if (this.is_moderator) {
		html += '<a href="#" class="b-textarea_editor_button"><span class="moderator">Moderator</span></a>';
	}
	
	this.buttons_panel.innerHTML = html;

	var buttons_controls = [
		(function () {this.insert_text('b');}).bind(this),
		(function () {this.insert_text('i');}).bind(this),
		(function () {this.insert_text('u');}).bind(this),
		(function () {this.insert_text('sup');}).bind(this),
		(function () {this.insert_text('sub');}).bind(this),
		(function () {this.insert_text('irony');}).bind(this),
		(function () {this.insert_link();}).bind(this),
		(function () {this.insert_image();}).bind(this),
		(function () {this.insert_text('spoiler');}).bind(this),
		(function () {this.insert_text('code');}).bind(this)
	];
	if (this.is_president) {
		buttons_controls.push((function () {this.insert_text('h2');}).bind(this));
	}
	if (this.is_moderator) {
		buttons_controls.push((function () {this.insert_text('moderator');}).bind(this));
	}
	$A(this.buttons_panel.getElements('a')).each((function (button, i) {
		button.addEvent('click', (function (e) {
			e = new Event(e);
			e.preventDefault();
			buttons_controls[i]();
		}).bind(this));
	}).bind(this));	
};
wysiwyg.prototype.tr = function (obj) {
	/* trim */
	s=obj.value;
	re=/^\s+/;s=s.replace(re, '');
	re=/\s+$/;s=s.replace(re, '');
	obj.value=s;return s;
};
wysiwyg.prototype.getCursor = function (input) {
	var result = {start: 0, end: 0};
	if (input.setSelectionRange){
		result.start= input.selectionStart;
		result.end = input.selectionEnd;
	} else if (!document.selection) {
		return false;
	} else if (document.selection && document.selection.createRange) {
		var range = document.selection.createRange();
		var stored_range = range.duplicate();
		stored_range.moveToElementText(input);
		stored_range.setEndPoint('EndToEnd', range);
		result.start = stored_range.text.length - range.text.length;
		result.end = result.start + range.text.length;
	}
	return result;
};
wysiwyg.prototype.setCursor = function (txtarea, start, end) {
	if(txtarea.createTextRange) {
		var range = txtarea.createTextRange();
		range.move("character", start);
		range.select();
	} else if(txtarea.selectionStart) {
		txtarea.setSelectionRange(start, end);
	}
};
wysiwyg.prototype.insert_tag = function (startTag, endTag) {
	var txtarea = this.textarea;
	txtarea.focus();

	var scrtop = txtarea.scrollTop;

	var cursorPos = this.getCursor(txtarea);
	var txt_pre = txtarea.value.substring(0, cursorPos.start);
	var txt_sel = txtarea.value.substring(cursorPos.start, cursorPos.end);
	var txt_aft = txtarea.value.substring(cursorPos.end);

	if (cursorPos.start == cursorPos.end){
		var nuCursorPos = cursorPos.start + startTag.length;
	}else{
		var nuCursorPos=String(txt_pre + startTag + txt_sel + endTag).length;
	}
	txtarea.value = txt_pre + startTag + txt_sel + endTag + txt_aft;
	this.setCursor(txtarea,nuCursorPos,nuCursorPos);

	if (scrtop) txtarea.scrollTop=scrtop;
};
wysiwyg.prototype.insert_text = function (tagName) {
	var startTag = '<' + tagName + '>';
	var endTag = '</' + tagName + '>';
	this.insert_tag(startTag, endTag);	
	return false;
};
wysiwyg.prototype.insert_image = function () {
	var timeout = navigator.userAgent.match(/iPhone|iPad|iPod/i) ? 100 : 0,
		src;
	setTimeout((function(){
		src = prompt('enter image src', 'http://');
		if(src){
			this.insert_tag('<img src="' + src + '" alt="image">', '');
		}
	}).bind(this), timeout);
};
wysiwyg.prototype.insert_link = function () {
	var timeout = navigator.userAgent.match(/iPhone|iPad|iPod/i) ? 100 : 0,
		href;
	setTimeout((function(){
		href = prompt('enter a href', 'http://');
		if(href){
			this.insert_tag('<a href="' + href + '">', '</a>');
		}
	}).bind(this), timeout);
};

iconsHandler = {
	spriteUrl: '/static/i/icons_sprite.png',
	icons: {
		comments: {
			svg: '<svg version="1.1" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path fill="#010101" d="M10,6.5c1.93,0,3.5,1.295,3.5,2.888c0,0.822-0.437,1.437-0.802,1.808l-0.288,0.292v0.41v1.109l-1.672-0.688 l-0.218-0.09l-0.235,0.018c-0.061,0.004-0.121,0.011-0.18,0.018c-0.035,0.005-0.069,0.011-0.104,0.011c-1.93,0-3.5-1.295-3.5-2.888 S8.07,6.5,10,6.5 M10,5.5c-2.485,0-4.5,1.741-4.5,3.888s2.015,3.888,4.5,3.888c0.122,0,0.237-0.022,0.357-0.031 c1.33,0.548,3.053,1.255,3.053,1.255v-2.602c0.67-0.68,1.09-1.548,1.09-2.51C14.5,7.241,12.485,5.5,10,5.5L10,5.5z"/></svg>'
		},
		subscribed: {
		    svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path fill="#040303" d="M10,14c-0.487,0-0.974-0.162-1.36-0.487L3,8.762L5.72,6L10,9.604L14.28,6L17,8.762l-5.641,4.751 C10.974,13.838,10.487,14,10,14z"/></svg>'
		},
		unsubscribe: {
		    svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><rect x="4" y="8" fill="#040303" width="12" height="4"/></svg>'
		},
		subscribe: {
		    svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><polygon fill="#040303" points="16,8 12,8 12,4 8,4 8,8 4,8 4,12 8,12 8,16 12,16 12,12 16,12 "/></svg>'
		},
		refresh: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path d="M15,8.75h-3.75l1.401-1.401C11.943,6.64,11.002,6.25,10,6.25S8.057,6.64,7.349,7.349 C6.64,8.057,6.25,8.998,6.25,10s0.39,1.943,1.099,2.651C8.057,13.36,8.998,13.75,10,13.75s1.943-0.39,2.651-1.099 c0.06-0.059,0.116-0.12,0.171-0.183l0.94,0.824C12.846,14.339,11.501,15,10,15c-2.762,0-5-2.238-5-5s2.238-5,5-5 c1.381,0,2.63,0.56,3.535,1.465L15,5V8.75z"/></svg>'
		},
		paint_mode: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="216px" height="146px" viewBox="0 0 216 146" enable-background="new 0 0 216 146" xml:space="preserve"><g><path d="M46.284,100.823v33.893h33.893l67.786-67.786L114.07,33.037L46.284,100.823z M75.859,124.287L75.859,124.287l-8.718,0.001 v-10.429H56.713v-8.719l7.414-7.414l19.146,19.146L75.859,124.287z M116.678,46.888c1.194,0,1.791,0.598,1.791,1.792 c0,0.544-0.189,1.005-0.57,1.386L73.74,94.225c-0.38,0.379-0.842,0.569-1.385,0.569c-1.194,0-1.792-0.599-1.792-1.792 c0-0.544,0.19-1.005,0.57-1.386l44.159-44.158C115.672,47.078,116.134,46.888,116.678,46.888z"/><path d="M166.701,33.443l-19.146-19.064c-2.063-2.063-4.535-3.096-7.414-3.096c-2.934,0-5.377,1.033-7.332,3.096l-13.524,13.443 l33.893,33.893l13.525-13.524c2.01-2.01,3.014-4.454,3.014-7.333C169.716,38.034,168.712,35.562,166.701,33.443z"/></g></svg>'
		},
		paint_undo: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"  width="216px" height="146px" viewBox="0 0 216 146" enable-background="new 0 0 216 146" xml:space="preserve"> <path d="M165.6,48.723c-3.312-7.713-7.766-14.367-13.36-19.961c-5.595-5.594-12.248-10.047-19.962-13.361 c-7.713-3.314-15.805-4.97-24.278-4.97c-7.984,0-15.71,1.506-23.179,4.521c-7.468,3.015-14.108,7.265-19.92,12.751L54.308,17.192 c-1.63-1.684-3.503-2.064-5.622-1.141c-2.173,0.924-3.259,2.527-3.259,4.808v36.5c0,1.412,0.516,2.634,1.548,3.666 c1.033,1.032,2.255,1.548,3.667,1.548h36.5c2.282,0,3.884-1.086,4.807-3.259c0.923-2.118,0.543-3.992-1.141-5.622L79.646,42.449 c3.803-3.585,8.148-6.341,13.036-8.27c4.889-1.928,9.994-2.893,15.317-2.893c5.649,0,11.04,1.101,16.173,3.3 c5.133,2.2,9.572,5.174,13.32,8.922c3.748,3.747,6.722,8.187,8.922,13.32c2.199,5.133,3.299,10.523,3.299,16.173 s-1.1,11.039-3.299,16.172c-2.2,5.133-5.174,9.573-8.922,13.321s-8.188,6.722-13.32,8.921c-5.133,2.2-10.525,3.3-16.173,3.3 c-6.464,0-12.574-1.412-18.332-4.236c-5.757-2.824-10.618-6.816-14.583-11.977c-0.38-0.543-1.005-0.87-1.874-0.979 c-0.815,0-1.494,0.244-2.037,0.733L60.011,109.5c-0.434,0.436-0.665,0.991-0.692,1.67c-0.027,0.68,0.15,1.29,0.53,1.833 c5.921,7.17,13.09,12.724,21.509,16.661s17.3,5.907,26.642,5.907c8.473,0,16.566-1.657,24.279-4.97 c7.713-3.313,14.365-7.768,19.961-13.361c5.594-5.596,10.047-12.248,13.361-19.961c3.313-7.713,4.969-15.807,4.969-24.279 C170.57,64.526,168.913,56.436,165.6,48.723z"/> </svg>'
		},
		paint_erase: {
			svg: '<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="31.666px" height="31.666px" viewBox="0 0 31.666 31.666" style="enable-background:new 0 0 31.666 31.666;" xml:space="preserve"><g> <g> <path d="M28.118,10.573c-0.014,0.035-0.03,0.067-0.046,0.103c0.019-0.031,0.038-0.061,0.056-0.091 C28.125,10.581,28.12,10.577,28.118,10.573z"/> <path d="M15.081,29.559c-0.546,0.709-1.404,1.115-2.356,1.115c-0.765,0-1.533-0.266-2.164-0.75l-7.827-6.018 c-0.169-0.131-0.323-0.274-0.465-0.428c0.233,0.785,0.702,1.494,1.379,2.014l6.951,5.342c0.699,0.537,1.554,0.832,2.407,0.832 c1.101,0,2.1-0.479,2.74-1.312l13.382-17.417c0.543-0.705,0.689-1.721,0.696-2.567L15.081,29.559z"/> <path d="M2.904,23.686l7.828,6.019c0.582,0.446,1.289,0.692,1.993,0.692c0.865,0,1.644-0.366,2.136-1.008L29.814,9.926 c-0.003-0.074-0.006-0.15-0.012-0.219c-0.07-0.912-0.47-2.623-1.652-3.533l-6.951-5.342C20.501,0.296,19.646,0,18.793,0 c-0.972,0-1.658,0.35-2.112,0.697L2.143,19.617c-0.006,0.007-0.009,0.016-0.015,0.023c-0.262,0.606-0.381,1.33-0.196,2.207 c0.11,0.604,0.14,0.764,0.177,0.973C2.318,23.146,2.583,23.439,2.904,23.686z M16.292,2.5c0.641-0.834,1.64-1.313,2.739-1.313 c0.854,0,1.708,0.296,2.405,0.832l5.777,4.21c1.183,0.909,1.503,1.596,1.572,2.508c0.028,0.527-0.125,0.99-0.292,1.327 l0.007,0.005l-0.036,0.057c-0.072,0.139-0.142,0.244-0.201,0.326l-0.428,0.685l-0.079,0.104c0.125-0.174,0.229-0.361,0.314-0.563 c-0.029,0.055-0.058,0.109-0.098,0.161l-0.221,0.407L22.73,17.8l-0.721-0.552l-0.014,0.018l-9.075-6.973l-1.564-1.194L16.292,2.5z "/> </g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>'
		},
		paint_help: {
			svg: '<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="216px" height="146px" viewBox="0 0 216 146" enable-background="new 0 0 216 146" xml:space="preserve"> <g> <path d="M116.639,99.07H97.086c-0.868,0-1.629,0.328-2.281,0.979c-0.652,0.652-0.978,1.412-0.978,2.281v19.554 c0,0.869,0.327,1.63,0.978,2.281c0.652,0.651,1.412,0.978,2.281,0.978h19.553c0.869,0,1.631-0.326,2.281-0.978 c0.653-0.651,0.979-1.412,0.979-2.281V102.33c0-0.869-0.325-1.629-0.979-2.281C118.27,99.396,117.508,99.07,116.639,99.07z"/> <path d="M142.305,40.535c-2.227-4.103-5.105-7.564-8.636-10.389c-3.53-2.824-7.497-5.079-11.896-6.762 c-4.399-1.683-8.771-2.525-13.117-2.525c-16.511,0-29.112,7.224-37.803,21.672c-0.434,0.706-0.584,1.466-0.448,2.281 c0.136,0.814,0.557,1.493,1.263,2.036L85.03,57.033c0.706,0.434,1.385,0.651,2.037,0.651c0.978,0,1.819-0.435,2.526-1.304 c3.91-4.888,6.816-8.011,8.717-9.369c2.336-1.575,5.268-2.362,8.799-2.362c3.313,0,6.232,0.869,8.758,2.606 c2.525,1.738,3.787,3.748,3.787,6.029c0,2.552-0.678,4.617-2.036,6.192c-1.358,1.575-3.64,3.095-6.845,4.562 c-4.235,1.901-8.12,4.848-11.649,8.84c-3.531,3.992-5.296,8.242-5.296,12.75v3.667c0,1.032,0.284,2.05,0.855,3.055 c0.571,1.006,1.263,1.508,2.078,1.508h19.553c0.869,0,1.629-0.42,2.281-1.264c0.651-0.841,0.978-1.723,0.978-2.646 c0-1.357,0.747-3.178,2.239-5.459c1.494-2.281,3.354-4.047,5.582-5.297c2.117-1.194,3.773-2.158,4.969-2.892 c1.197-0.732,2.758-1.915,4.687-3.544c1.927-1.63,3.421-3.246,4.479-4.848c1.06-1.602,2.011-3.68,2.853-6.233 c0.843-2.553,1.263-5.296,1.263-8.229C145.645,48.938,144.531,44.634,142.305,40.535z"/> </g> </svg>'
		},
		comments_navigation_mine: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="40px" height="40px" viewBox="0 0 40 40" enable-background="new 0 0 40 40" xml:space="preserve"><g><polygon fill="#D2D3D4" points="29.749,20 37,14.821 27.695,14.708 30.506,6.053 22.904,11.198 20,3 17.096,11.198 9.494,6.053 12.305,14.708 3,14.821 10.252,20 3,25.179 12.305,25.292 9.494,33.947 17.096,28.802 20,37 22.904,28.802 30.506,33.947 27.695,25.292 37,25.179 	"/><ellipse fill="#EC2227" cx="15.842" cy="18.441" rx="1.195" ry="1.173"/><ellipse fill="#EC2227" cx="24.573" cy="18.442" rx="1.195" ry="1.172"/></g></svg>'
		},
		comments_navigation_new: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="40px" height="40px" viewBox="0 0 40 40" enable-background="new 0 0 40 40" xml:space="preserve"><polygon fill="#D2D3D4" points="12,32 20,8 28,32 "/></svg>'
		},
		mark_as_read: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><polygon fill="#231F20" points="10,12.414 6.293,8.707 7.707,7.293 10,9.586 14.293,5.293 15.707,6.707 "/><g><path fill="#231F20" d="M13.963,9.865C13.773,12.174,11.856,14,9.5,14C7.019,14,5,11.981,5,9.5c0-0.209,0.034-0.409,0.062-0.61l0.075-0.44C5.612,6.476,7.382,5,9.5,5c1.029,0,1.968,0.361,2.727,0.945l0.725-0.725C12.008,4.458,10.808,4,9.5,4C6.462,4,4,6.462,4,9.5S6.462,15,9.5,15S15,12.538,15,9.5c0-0.214-0.016-0.425-0.039-0.633L13.963,9.865z"/></g></svg>'
		},
		futurico: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path fill="#1E1E1C" d="M10.285,5.657c-1.834,0-2.653,1.402-2.653,2.791V8.9H6.526v0.921h1.105v5.383h1.044V9.821h1.839V8.9H8.676 V8.476c0-1.195,0.537-1.856,1.515-1.856c0.259,0,0.517,0.052,0.726,0.144l0.095,0.042l0.286-0.962l-0.08-0.029 C10.929,5.709,10.623,5.657,10.285,5.657"/><path fill="#1E1E1C" d="M13.833,5.734c-0.985,0-1.647,0.631-1.647,1.569c0,0.926,0.679,1.572,1.647,1.572 c0.987,0,1.649-0.631,1.649-1.572C15.482,6.365,14.82,5.734,13.833,5.734 M13.833,6.428c0.723,0,0.8,0.613,0.8,0.876 c0,0.323-0.104,0.863-0.8,0.863c-0.709,0-0.784-0.602-0.784-0.863C13.049,6.977,13.151,6.428,13.833,6.428"/></svg>'
		},
		instagram: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path d="M15.484,3.834c0.211,0,0.389,0.072,0.533,0.217s0.217,0.322,0.217,0.533v10.5c0,0.211-0.072,0.389-0.217,0.533 s-0.322,0.217-0.533,0.217h-10.5c-0.211,0-0.389-0.072-0.533-0.217s-0.217-0.322-0.217-0.533v-10.5c0-0.211,0.072-0.389,0.217-0.533 s0.322-0.217,0.533-0.217H15.484z M14.734,14.334v-5.25h-1.605c0.031,0.117,0.057,0.238,0.076,0.363s0.029,0.254,0.029,0.387 c0,0.414-0.078,0.803-0.234,1.166s-0.371,0.682-0.645,0.955S11.764,12.443,11.4,12.6s-0.752,0.234-1.166,0.234 S9.432,12.756,9.068,12.6s-0.682-0.371-0.955-0.645S7.625,11.363,7.469,11s-0.234-0.752-0.234-1.166c0-0.133,0.01-0.262,0.029-0.387 S7.309,9.201,7.34,9.084H5.734v5.25H14.734z M8.734,9.834c0.227,1,0.727,1.5,1.5,1.5s1.273-0.5,1.5-1.5c-0.312-1-0.812-1.5-1.5-1.5 S9.047,8.834,8.734,9.834z M14.734,7.584v-2.25h-2.25v2.25H14.734z"/></svg>'
		},
		lock: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"  width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path d="M13.659,8.157c0.181,0,0.357,0.086,0.529,0.258c0.172,0.172,0.258,0.349,0.258,0.529v5.164c0,0.181-0.06,0.354-0.181,0.522 c-0.12,0.168-0.267,0.282-0.438,0.342l-0.801,0.246c-0.172,0.06-0.383,0.109-0.632,0.148c-0.25,0.038-0.47,0.058-0.658,0.058H7.915 c-0.189,0-0.409-0.02-0.659-0.058c-0.25-0.039-0.46-0.089-0.632-0.148l-0.8-0.246c-0.172-0.06-0.318-0.174-0.439-0.342 s-0.181-0.342-0.181-0.522V8.945c0-0.181,0.064-0.357,0.194-0.529c0.129-0.172,0.284-0.258,0.464-0.258h1.317V7.228 c0-0.474,0.056-0.899,0.168-1.278c0.112-0.378,0.277-0.697,0.497-0.955c0.22-0.258,0.495-0.456,0.826-0.594 c0.332-0.138,0.717-0.207,1.155-0.207c0.439,0,0.824,0.069,1.155,0.207c0.331,0.138,0.608,0.335,0.827,0.594 c0.22,0.258,0.386,0.577,0.497,0.955c0.112,0.379,0.168,0.805,0.168,1.278v0.929H13.659z M8.508,6.97v1.188h2.632V6.97 c0-0.482-0.12-0.846-0.361-1.091s-0.559-0.368-0.955-0.368c-0.396,0-0.714,0.123-0.955,0.368C8.629,6.124,8.508,6.488,8.508,6.97z" /></svg>'
		},
		man: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"  width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path d="M11.689,7.686v3.472l1.735,6.074h-0.867l-2.604-6.074l-2.603,6.074H6.483l1.735-6.074V7.686L3.88,5.95V5.082l6.074,1.736 l6.074-1.736V5.95L11.689,7.686z M8.652,4.648c0,0.361,0.126,0.669,0.379,0.922C9.285,5.824,9.593,5.95,9.954,5.95 s0.669-0.126,0.922-0.379c0.252-0.253,0.379-0.561,0.379-0.922c0-0.362-0.127-0.669-0.379-0.922c-0.253-0.253-0.561-0.38-0.922-0.38 s-0.669,0.127-0.922,0.38C8.779,3.979,8.652,4.287,8.652,4.648z"/></svg>'
		},
		twitter: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"  width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><path d="M16.512,5.921c-0.171,0.26-0.366,0.505-0.586,0.734c-0.22,0.229-0.455,0.433-0.707,0.612c0,0.054,0,0.11,0,0.168 c0,0.059,0,0.115,0,0.168c0,0.861-0.161,1.731-0.484,2.611c-0.322,0.879-0.796,1.674-1.42,2.383 c-0.623,0.709-1.395,1.287-2.314,1.736c-0.92,0.448-1.981,0.672-3.183,0.672c-0.736,0-1.44-0.103-2.113-0.309 c-0.673-0.207-1.296-0.494-1.871-0.861c0.099,0.008,0.2,0.018,0.303,0.026c0.104,0.009,0.208,0.014,0.316,0.014 c0.61,0,1.189-0.099,1.736-0.296s1.045-0.472,1.494-0.821c-0.565-0.009-1.07-0.182-1.514-0.519 c-0.444-0.336-0.747-0.765-0.908-1.285c0.072,0.018,0.15,0.029,0.235,0.034c0.085,0.004,0.168,0.007,0.249,0.007 c0.117,0,0.233-0.007,0.35-0.02c0.117-0.014,0.229-0.034,0.336-0.061c-0.592-0.126-1.088-0.426-1.487-0.902S4.344,8.986,4.344,8.357 c0-0.009,0-0.018,0-0.027C4.515,8.429,4.701,8.506,4.903,8.56c0.202,0.054,0.406,0.085,0.612,0.094 c-0.35-0.233-0.63-0.541-0.841-0.922S4.358,6.936,4.358,6.487c0-0.242,0.031-0.473,0.094-0.693c0.063-0.22,0.152-0.424,0.269-0.612 c0.314,0.395,0.671,0.751,1.07,1.07C6.19,6.57,6.617,6.848,7.07,7.086s0.933,0.426,1.44,0.565C9.017,7.79,9.54,7.873,10.078,7.9 c-0.027-0.099-0.045-0.197-0.054-0.296c-0.009-0.099-0.013-0.197-0.013-0.296c0-0.359,0.067-0.697,0.202-1.016 c0.135-0.318,0.321-0.594,0.559-0.828s0.514-0.419,0.828-0.559c0.314-0.139,0.651-0.208,1.01-0.208c0.376,0,0.729,0.074,1.056,0.222 c0.328,0.148,0.608,0.348,0.842,0.599c0.297-0.054,0.584-0.134,0.861-0.242c0.278-0.107,0.543-0.233,0.795-0.377 c-0.1,0.296-0.248,0.57-0.445,0.821c-0.197,0.251-0.43,0.453-0.699,0.605c0.26-0.027,0.516-0.074,0.768-0.141 C16.035,6.117,16.277,6.029,16.512,5.921z"/></svg>'
		},
		comics_add: {
			svg: '<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"  width="216px" height="146px" viewBox="0 0 216 146" enable-background="new 0 0 216 146" xml:space="preserve"><path d="M162.18,41.592c-5.595-9.586-13.185-17.176-22.771-22.771c-9.588-5.595-20.055-8.392-31.408-8.392 c-11.352,0-21.822,2.797-31.408,8.392c-9.587,5.594-17.177,13.184-22.772,22.771C48.225,51.179,45.428,61.649,45.428,73 c0,11.352,2.798,21.82,8.392,31.408c5.595,9.585,13.185,17.176,22.772,22.771c9.587,5.595,20.056,8.392,31.408,8.392 c11.352,0,21.822-2.797,31.408-8.392c9.586-5.594,17.176-13.185,22.771-22.771c5.594-9.587,8.391-20.057,8.391-31.408 C170.57,61.648,167.773,51.178,162.18,41.592z M144.5,78.214c0,1.412-0.516,2.636-1.549,3.667c-1.032,1.031-2.254,1.548-3.666,1.548 h-20.857v20.856c0,1.412-0.517,2.635-1.548,3.667c-1.032,1.032-2.254,1.548-3.666,1.548h-10.429c-1.412,0-2.634-0.516-3.666-1.548 c-1.032-1.032-1.548-2.255-1.548-3.667V83.429H76.714c-1.412,0-2.634-0.517-3.666-1.548c-1.032-1.031-1.548-2.255-1.548-3.667 V67.785c0-1.412,0.516-2.634,1.548-3.666c1.032-1.032,2.254-1.548,3.666-1.548h20.858V41.714c0-1.412,0.516-2.634,1.548-3.666 c1.032-1.032,2.254-1.548,3.666-1.548h10.429c1.412,0,2.635,0.516,3.666,1.548c1.031,1.032,1.549,2.254,1.549,3.666v20.857h20.856 c1.412,0,2.634,0.516,3.666,1.548c1.032,1.032,1.548,2.254,1.548,3.666V78.214z"/></svg>'
		},
		comics_delete: {
			svg: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" viewBox="0 0 100 125" enable-background="new 0 0 100 100" xml:space="preserve"><g><defs><rect id="b" x="12.882" y="6.388" width="74.237" height="87.223"/></defs><clipPath id="a"><use xlink:href="#b" overflow="visible"/></clipPath><path clip-path="url(#a)" d="M83.544,10.676H61.426c0.047-0.231,0.072-0.469,0.072-0.714c0-1.974-1.601-3.574-3.574-3.574   H41.241c-1.975,0-3.575,1.601-3.575,3.574c0,0.245,0.025,0.483,0.072,0.714H16.456c-1.974,0-3.574,1.601-3.574,3.575   c0,1.976,1.601,3.577,3.574,3.577h67.088c1.975,0,3.575-1.601,3.575-3.577C87.119,12.277,85.519,10.676,83.544,10.676z"/><path clip-path="url(#a)" d="M82.03,20.44c-0.677-0.751-1.644-1.184-2.659-1.184h-59.34c-1.028,0-2.004,0.443-2.684,1.214   c-0.679,0.768-0.993,1.794-0.863,2.814l8.58,67.207c0.228,1.783,1.748,3.12,3.547,3.12h43.611c1.829,0,3.359-1.38,3.556-3.195   l7.148-67.204C83.034,22.203,82.706,21.195,82.03,20.44z M45.849,86.463l25.916-25.914l-1.394,13.103l-12.81,12.812H45.849z    M74.42,35.589L30.83,79.18l-1.139-8.92l43.103-43.103c0.22-0.221,0.379-0.479,0.482-0.752h2.121L74.42,35.589z M51.32,26.405   L27.174,50.55l-1.22-9.554l14.594-14.591H51.32z M67.476,26.405L29.004,64.88l-1.144-8.954l29.521-29.521H67.476z M34.48,26.405   l-9.213,9.214l-1.177-9.214H34.48z M31.517,84.558L73.697,42.38l-1.271,11.952c-0.4,0.081-0.784,0.275-1.095,0.586l-31.54,31.545   H31.76L31.517,84.558z M63.625,86.463l6.024-6.024l-0.641,6.024H63.625z"/></g></svg>'
		},
		refresh_live: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"> <path d="M15.05,11.888c-0.268-0.055-0.535,0.118-0.59,0.39c-0.426,2.082-2.281,3.594-4.41,3.594c-2.481,0-4.5-2.019-4.5-4.5 c0-2.649,1.851-4.5,4.5-4.5c0.554,0,1.383,0.002,2.051,0.005L9.361,8.975c-0.22,0.168-0.261,0.481-0.093,0.7 c0.098,0.129,0.247,0.196,0.396,0.196c0.106,0,0.214-0.033,0.304-0.104l3.78-2.896c0.123-0.095,0.197-0.242,0.195-0.398 c0-0.156-0.074-0.304-0.199-0.397l-3.78-2.847c-0.219-0.164-0.532-0.123-0.7,0.099c-0.166,0.221-0.122,0.534,0.099,0.7l2.454,1.848 c-0.609-0.002-1.29-0.004-1.768-0.004c-3.187,0-5.5,2.313-5.5,5.5c0,3.032,2.468,5.5,5.5,5.5c2.602,0,4.869-1.848,5.391-4.393 C15.495,12.208,15.321,11.943,15.05,11.888z"/></svg>'
		},
		inbox: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="16px" height="12px" viewBox="0 0 16 12" enable-background="new 0 0 16 12" xml:space="preserve"><path fill="#999898" d="M13.999,1.998c0.521,0,1.004,0.547,1.004,1.006c0,0.458,0,6.424,0,6.965c0,0.68-0.275,1.031-0.945,1.031c-0.77,0-11.487,0-12.048,0s-1.012-0.432-1.012-1.018c0-0.584,0-6.354,0-6.979c0-0.625,0.493-1.006,1.033-1.006C2.571,1.998,13.481,1.998,13.999,1.998 M13.999,0.998H2.03C0.892,0.998,0,1.879,0,3.004v6.979C0,11.113,0.883,12,2.01,12h12.048C15.256,12,16,11.222,16,9.969V3.004C16,1.954,15.046,0.998,13.999,0.998L13.999,0.998z"/><g><path fill="#FFFFFF" d="M14.058,10.002c-0.77,0-11.487,0-12.048,0S0.998,9.57,0.998,8.985c0-0.584,0-6.354,0-6.979S1.49,1,2.03,1c0.541,0,11.451,0,11.969,0c0.521,0,1.004,0.547,1.004,1.006s0,6.425,0,6.966C15.003,9.65,14.728,10.002,14.058,10.002z"/></g><rect x="2.529" y="4.412" transform="matrix(0.7321 0.6812 -0.6812 0.7321 5.8527 -0.08)" fill="#CBCBCB" width="0.998" height="5.978"/><rect x="9.983" y="6.902" transform="matrix(0.6796 0.7336 -0.7336 0.6796 9.5862 -7.1448)" fill="#CBCBCB" width="5.978" height="0.998"/><linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="0.6758" y1="4.0757" x2="15.3428" y2="4.0757"><stop  offset="0" style="stop-color:#A4A4A4"/><stop  offset="1" style="stop-color:#A4A4A4"/></linearGradient><polygon fill="url(#SVGID_1_)" points="9.232,7.493 6.868,7.493 0.676,1.371 1.376,0.658 7.277,6.493 8.819,6.493 14.638,0.661 15.343,1.368 "/><linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="8.0005" y1="11.002" x2="8.0005" y2="4.882812e-04"><stop  offset="0" style="stop-color:#A4A4A4"/><stop  offset="1" style="stop-color:#A4A4A4"/></linearGradient><path fill="url(#SVGID_2_)" d="M13.999,1c0.521,0,1.004,0.547,1.004,1.006s0,6.425,0,6.966c0,0.679-0.275,1.03-0.945,1.03c-0.77,0-11.487,0-12.048,0S0.998,9.57,0.998,8.985c0-0.584,0-6.354,0-6.979S1.49,1,2.03,1C2.571,1,13.481,1,13.999,1 M13.999,0H2.03C0.892,0,0,0.881,0,2.006v6.979c0,1.13,0.883,2.017,2.01,2.017h12.048c1.198,0,1.942-0.778,1.942-2.03V2.006C16,0.956,15.046,0,13.999,0L13.999,0z"/></svg>'
		},
		down: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><polygon points="10,13.498 5.51,8.51 7.75,6.502 10,9.014 12.26,6.502 14.49,8.51 "/></svg>'
		},
		up: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><polygon points="9.963,6.479 5.526,11.514 7.787,13.498 10.01,10.963 12.297,13.451 14.506,11.42 "/></svg>'
		},
		expand: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10" enable-background="new 0 0 10 10" xml:space="preserve"><polygon points="5,8.281 0.009,3.967 1.258,2.281 5,5.515 8.742,2.281 9.991,3.967 "/></svg>'
		},
		subdomain_handover: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve"><path fill="#231F20" d="M16,15.202c1.706-1.438,5-4.589,5-7.502c0-2.46-1.177-3.7-2.793-3.7C17.242,4,16.121,4.441,15,5.328C13.879,4.442,12.758,4,11.793,4C10.177,4,9,5.239,9,7.7c0,2.913,3.294,6.065,5,7.502V26h1h1v-2h4v-1h-4v-2h4v-1h-4V15.202z M10,7.7c0-0.94,0.197-1.683,0.569-2.146C10.865,5.187,11.276,5,11.793,5c0.761,0,1.68,0.395,2.587,1.112L15,6.603l0.62-0.491C16.527,5.395,17.446,5,18.207,5C19.768,5,20,6.691,20,7.7c0,2.493-3.202,5.589-5,7.038C13.202,13.289,10,10.193,10,7.7z"/></svg>'
		},
		subdomain_remove: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve"><polygon fill="#231F20" points="22.5,19.236 22.047,18.441 15,21.932 7.952,18.441 7.5,19.236 13.971,22.441 7.5,25.646 7.952,26.441 15,22.951 22.047,26.441 22.5,25.646 16.028,22.441 "/><path fill="#231F20" d="M15,4c-3.866,0-7,3.134-7,7c0,1.075,0.25,2.09,0.683,3H11v4h2h1h2h1h1h1v-4h2.317C21.75,13.09,22,12.075,22,11C22,7.134,18.866,4,15,4z M14.017,10.876l-0.582,0.813L12,10.664l-1.435,1.026l-0.582-0.813l1.157-0.827L9.983,9.222l0.582-0.813L12,9.435l1.435-1.026l0.582,0.813l-1.157,0.827L14.017,10.876z M20.017,10.876l-0.582,0.813L18,10.664l-1.435,1.026l-0.582-0.813l1.157-0.827l-1.157-0.827l0.582-0.813L18,9.435l1.435-1.026l0.582,0.813l-1.157,0.827L20.017,10.876z"/></svg>'
		},
		share_comment: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><g><polygon fill="#231F20" points="13,10 13,13 6,13 6,10 5,10 5,14 6,14 13,14 14,14 14,12.978 14,10 	"/><polygon fill="#231F20" points="9,6.692 9,11 10,11 10,6.692 11.579,9.211 12.421,8.659 9.5,4 6.579,8.659 7.421,9.211 	"/></g></svg>'
		},
		pinned: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="20px" height="20px" viewBox="0 0 20 20" enable-background="new 0 0 20 20" xml:space="preserve"><g opacity="0.6"><path d="M14.473,4.002l4.297,6l-4.297,6H2.797C1.252,16.002,1,15.75,1,14.203V5.802c0-1.547,0.252-1.8,1.797-1.8H14.473M14.986,3.002c0,0-11.489,0-12.189,0C0.699,3.002,0,3.702,0,5.802c0,0.7,0,7.7,0,8.401c0,2.1,0.699,2.799,2.797,2.799c0.699,0,12.189,0,12.189,0l5.014-7L14.986,3.002L14.986,3.002z"/></g><path d="M10.306,11.703l-1.854-0.514c-0.438,0.973-1.466,3.228-1.553,3.377c-0.157,0.262-0.531,0.179-0.513-0.143c0.008-0.159,0.267-2.637,0.381-3.701l-1.854-0.513c0.21-0.774,0.722-1.382,1.374-1.735l0.237-2.863l4.696,1.299L9.989,9.5C10.376,10.141,10.514,10.928,10.306,11.703z"/></svg>'
		},
		forbidden: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="50px" height="50px" viewBox="0 0 50 50" enable-background="new 0 0 50 50" xml:space="preserve"><path fill="#959595" d="M38.973,22.347v-5.09c0-7.486-6.09-13.577-13.575-13.577c-7.487,0-13.578,6.091-13.578,13.577c0,1.336,0.026,3.367,0.052,5.09H7.019v15.146c0,5.907,3.711,9.434,9.926,9.434h16.091c6.251,0,9.982-3.526,9.982-9.434V22.347H38.973z M13.82,17.256c0-6.384,5.194-11.577,11.578-11.577c6.383,0,11.575,5.193,11.575,11.577v5.09h-3.031v-4.976c0-4.694-3.817-8.513-8.51-8.513c-4.694,0-8.513,3.819-8.513,8.513c0,1.129,0.03,3.571,0.049,4.976h-3.094C13.846,20.625,13.82,18.591,13.82,17.256z M18.918,17.371c0-3.591,2.922-6.513,6.513-6.513c3.59,0,6.51,2.921,6.51,6.513v4.976H18.967C18.949,20.95,18.918,18.498,18.918,17.371z M41.019,37.493c0,4.794-2.835,7.434-7.982,7.434H16.945c-5.111,0-7.926-2.64-7.926-7.434V24.347h32V37.493z"/></svg>'
		},
		circle_next: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve"><g><polygon fill="#FFFFFF" points="5.7177734,23.9873047 14.7363281,14.9677734 5.7177734,5.9482422 11.0234375,0.6420898 25.3496094,14.9677734 11.0234375,29.2929688"/><path fill="#999" d="M11.0234375,1.3491211l13.6191406,13.6186523L11.0234375,28.5859375l-4.5986328-4.5986328l8.3115234-8.3125l0.7070312-0.7070312l-0.7070312-0.7070312l-8.3115234-8.3125L11.0234375,1.3491211 M11.0234375-0.0649414L5.0107422,5.9482422l9.0185547,9.0195312l-9.0185547,9.0195312L11.0234375,30l15.0332031-15.0322266L11.0234375-0.0649414L11.0234375-0.0649414z"/></g></svg>'
		},
		circle_prev: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve"><g><polygon fill="#FFFFFF" points="5.7172852,14.9677734 20.0429688,0.6420898 25.3486328,5.9482422 16.3300781,14.9677734 25.3486328,23.9873047 20.0429688,29.2929688"/><path fill="#999" d="M20.0429688,1.3491211l4.5986328,4.5991211l-8.3115234,8.3125l-0.7070312,0.7070312l0.7070312,0.7070312l8.3115234,8.3125l-4.5986328,4.5986328L6.4243164,14.9677734L20.0429688,1.3491211 M20.0429688-0.0649414L5.0102539,14.9677734L20.0429688,30l6.0126953-6.0126953l-9.0185547-9.0195312l9.0185547-9.0195312L20.0429688-0.0649414L20.0429688-0.0649414z"/></g></svg>'
		},
		post_media: {
			svg: '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="36px" height="36px" viewBox="0 0 36 36" enable-background="new 0 0 36 36" xml:space="preserve"><path d="M16.25,17.5c0-2.901,1.464-5.466,3.689-7H1v14h18.939C17.714,22.966,16.25,20.401,16.25,17.5z M12.022,12.229c0.747,0,1.354,0.606,1.354,1.354c0,0.748-0.607,1.354-1.354,1.354c-0.748,0-1.354-0.606-1.354-1.354C10.668,12.835,11.274,12.229,12.022,12.229z M2.969,22.25l4.072-8.354l3.042,6.417l2.417-3.083l2.458,5.021H2.969z"/><path d="M25.75,10c-4.143,0-7.5,3.358-7.5,7.5s3.357,7.5,7.5,7.5s7.5-3.358,7.5-7.5S29.893,10,25.75,10z M23.769,21.652v-8.304l5.915,4.152L23.769,21.652z"/></svg>'
		}
	},

	update: function(target) {
		var icons = target ? (target.hasClass('b-svg-icon') ? target : target.getElements('.b-svg-icon')) : $$('.b-svg-icon'),
			setBackground = false,
			touch = document.body.hasClass('l-touch_capable');

		if (!utils.testSVG()) {
			setBackground = true;
		}

		icons.each(function(item, i) {
			if (item.get('data-name') && item.get('data-name') in this.icons) {
				if (setBackground) {
					// Элементу проставляется фоновое изображение
					item.setStyle('background-image', 'url(' + this.spriteUrl + ')');
				} else {
					// Внутрь элемента вставляется svg-иконка
					var icon = this.icons[item.get('data-name')];
					item.innerHTML = icon[touch && 'svg_mobile' in icon ? 'svg_mobile' : 'svg'];
					new Element('em').inject(item);
				}
			}
		}.bind(this));

		return target
	},

	make: function (name) {
		return this.update (new Element ('span', {
    		'class': 'b-svg-icon',
		    'data-name': name
		}))
	}
};

(function ($) {

    var $window = $(window),
        cache = {},
        triggers = { // символ, после которого начинается логин (зависит от опции replaceType)
            link: /@/,
            login: /[, ]/,
            loginWithComma: /[, ]/
        };

    window.UserSuggestMenu = function (dom) {
        this._initialize(dom);
    };

    $.extend(UserSuggestMenu.prototype, {
        // Закрыть меню
        close: function () {
            this.blur();
            this._isOpened = false;
            this._currentSelection = this._getSelection();
            this._currentPrefixBounds = this._detectPrefixBounds('', 0);
            this.$menu.removeClass('user-suggest-menu_opened');
        },

        // Открыть меню
        open: function () {
            this.blur();
            this._isOpened = true;

            var coordinates = this.$dom.caret('position'), // относительные координаты каретки
                offset = this.$dom.offset(); // отступ элемента

            coordinates.left = this._isInput * parseInt(this.$dom.css('borderLeftWidth')) + Math.min(coordinates.left, $window.width() - this.$menu.outerWidth()) + offset.left;
            coordinates.top += this._isInput * parseInt(this.$dom.css('borderTopWidth')) + parseInt(this.$dom.css('fontSize')) + offset.top - this.$dom.scrollTop();
            delete coordinates.height; // удаляем лишнее свойство
            this.$menu
                .addClass('user-suggest-menu_opened')
                .css(coordinates);

            this.focus(0);
        },

        // Обновить содержимое меню
        refresh: function (users) {
            this.$menu.html(users.map(function (user, u) {
                return '<li data-user-suggest-menu-login="' + u + '" class="user-suggest-menu__login">@' + user.login + '</li>';
            }).join(''));
        },

        // Активировать логин, который в фокусе
        activate: function (index) {
            if (!this._isOpened) return;
            if (this._currentFocus === -1) return;

            var $login = this.$menu.children('[data-user-suggest-menu-login="' + index + '"]'),
                login = $login.html().replace(/^@/, '');
            this._replacePrefixTo(this._getReplacement(this._options.replaceType, login));
            this.close();
        },

        // Сфокусироваться на логине с номером index
        focus: function (index) {
            if (!this._isOpened) return;
            var $children = this.$menu.children();

            if (index === null) {
                this._currentFocus = -1;
            } else {
                index = +index || 0;
                if (index >= $children.length) {
                    index = 0;
                } else if (index < 0) {
                    index = $children.length - 1;
                }
                this._currentFocus = index;
            }

            $children
                .removeClass('user-suggest-menu__login_focus')
                .filter('[data-user-suggest-menu-login="' + index + '"]')
                .addClass('user-suggest-menu__login_focus');
        },

        // Расфокусироваться
        blur: function () {
            return this.focus(null);
        },

        // Конструктор
        _initialize: function (dom) {
            // Берём опции из атрибута data-user-suggest-menu в формате JS-объекта (например, {replaceType: 'login'})
            try {
                var options = (new Function('return ' + dom.getAttribute('data-user-suggest-menu')))();
                if (!options || typeof options !== 'object') {
                    throw 'Invalid options!';
                }
            } catch (error) {
                options = {};
            }
            this._options = options;

            options.menuClass = options.menuClass || ''; // дополнительный класс может понадобиться для стилизации меню
            options.replaceType = options.replaceType || 'link'; // тип замены префикса (доступны login и link)

            this.$dom = $(dom);
            this.$menu = $('<ul class="user-suggest-menu ' + options.menuClass + '"></ul>').prependTo(document.body);
            dom.setAttribute('autocomplete', 'off');

            // Отключаем transition в Android версии ниже 4.3 (иначе меню вообще не появится)
            var androidVersion = /Android ([0-9.]+);/.exec(navigator.userAgent) || [];
            +androidVersion[1] < 4.4 && this.$menu.addClass('user-suggest-menu_no-transition');

            var tagName = dom.tagName.toLowerCase();
            this._isInput = tagName === 'input' || tagName === 'textarea'; // влияет на тип реализации некоторых методов
            this._maxUsers = 6; // максимальное число вариантов в меню
            this._isOpened = false; // текущее состояние меню (открыто или закрыто)
            this._currentFocus = -1; // номер текущего логина с фокусом (-1 значит отсутствие фокуса)
            this._currentSelection = this._getSelection(); // объект текущего выделения в поле ввода
            this._currentPrefixBounds = this._detectPrefixBounds('', 0); // объект с границами префикса

            this._assignEvents();
        },

        // Деструктор
        _destroy: function () {
            this._unassignEvents();
            this.$menu.remove();
        },

        // Навесить обработчики событий
        _assignEvents: function () {
            this._onMenuMouseEnter = this._onMenuMouseEnter.bind(this);
            this._onMenuMouseDown = this._onMenuMouseDown.bind(this);
            this.$menu[0].addEventListener('mouseover', this._onMenuMouseEnter);
            this.$menu[0].addEventListener('mousedown', this._onMenuMouseDown);

            /* Этот код не заработал, события при наведении на элементы списка не выкидываются
            this.$menu
                .on('mousedown', '[data-user-suggest-menu-login]', this._onMenuLoginMouseDown.bind(this))
                .on('mouseenter', '[data-user-suggest-menu-login]', this._onMenuLoginMouseEnter.bind(this))
                .on('mouseleave', this._onMenuMouseLeave.bind(this));
            */

            this.$dom
                .on('keydown', this._onKeyDown.bind(this))
                .on('input', this._onInput.bind(this))
                .on('blur', this._onBlur.bind(this))
                .on('mousedown', this._onMouseDown.bind(this))
                .on('scroll', this._onScroll.bind(this));
        },

        // Удалить обработчики событий
        _unassignEvents: function () {
            this.$menu[0].removeEventListener('mouseover', this._onMenuMouseEnter);
            this.$menu[0].removeEventListener('mousedown', this._onMenuMouseDown);

            this.$dom.off('focus input blur keydown mousedown scroll');

            /* Этот код не заработал, события при наведении на элементы списка не выкидываются
            this.$menu
                .off('mouseleave')
                .off('mousedown mouseenter', '[data-user-suggest-menu-login]');
            */
        },

        // Определить границы префикса в строке
        _detectPrefixBounds: function (string, caretPosition) {
            string = string.replace(/\n/g, ' ');
            // Для start добавляем дополнительный пробел, чтобы искать префиксы в самом начале поля ввода
            var start = this._detectRegExp(triggers[this._options.replaceType], ' ' + string, caretPosition + 1, -1),
                end = this._detectRegExp(/[^-_0-9A-Za-zА-ЯЁа-яё]/, string, caretPosition, 1);

            typeof start === 'number' && start--; // вспоминаем про пробел, добавленный в начале
            var prefix = string.substring(start + 1, end); // определяем префикс (+1 исключает символ-trigger)

            if (/^[-_0-9A-Za-zА-ЯЁа-яё]{2,}$/.test(prefix) && start !== null && end !== null) {
                return {start: start + 1, end: end, value: prefix};
            } else {
                return {start: null, end: null, value: null};
            }
        },

        // Обнаружить позицию символа в строке, удовлетворяющего регулярному выражению
        _detectRegExp: function (regExp, string, caretPosition, direction) {
            direction = direction / Math.abs(direction);
            caretPosition -= 1 - (direction > 0);

            while (!regExp.test(string[caretPosition])) {
                caretPosition += direction;
                if (caretPosition < 0 || caretPosition >= string.length) {
                    break;
                }
            }

            if (caretPosition < 0) {
                return null;
            } else {
                return caretPosition;
            }
        },

        // Получить строку, на которую надо заменить префикс в зависимости от replaceType
        _getReplacement: function (type, login) {
            switch (type) {
                case 'login':
                    // Если префикс в самом начале строки, то пробел не нужен
                    return (this._currentPrefixBounds.start ? ' ' : '') + login + ' ';
                    break;
                case 'loginWithComma':
                    // Если префикс в самом начале строки, то пробел не нужен
                    return (this._currentPrefixBounds.start ? ' ' : '') + login + ', ';
                    break;
                default:
                    return '@' + login + ' ';
            }
        },

        // Получить специальный объект выделения в зависимости от реализации
        _getSelection: function () {
            /* {
                node: (HTMLElement|null), // элемент с выделением
                value: (String|null),     // текстовое значение элемента
                start: (Number|null),     // начало выделения
                end: (Number|null)        // конец выделения
            } */
            return this._isInput ? this._getInputSelection() : this._getEditableSelection();
        },

        // Получить объект выделения для input или textarea
        _getInputSelection: function () {
            var start = 0,
                end = 0,
                dom = this.$dom[0];

            if (typeof dom.selectionStart === 'number' && typeof dom.selectionEnd === 'number') {
                start = dom.selectionStart;
                end = dom.selectionEnd;
            } else {
                var documentRange = document.selection.createRange();

                if (documentRange && documentRange.parentElement() === dom) {
                    var length = dom.value.length,
                        normalizedValue = dom.value.replace(/\r\n/g, '\n'),
                        textInputRange = dom.createTextRange();

                    textInputRange.moveToBookmark(documentRange.getBookmark());

                    var endRange = dom.createTextRange();
                    endRange.collapse(false);

                    if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {
                        start = end = length;
                    } else {
                        start = -textInputRange.moveStart('character', -length);
                        start += normalizedValue.slice(0, start).split('\n').length - 1;

                        if (textInputRange.compareEndPoints('EndToEnd', endRange) > -1) {
                            end = length;
                        } else {
                            end = -textInputRange.moveEnd('character', -length);
                            end += normalizedValue.slice(0, end).split('\n').length - 1;
                        }
                    }
                }
            }

            return {
                node: this.$dom[0],
                value: this.$dom.val(),
                start: start,
                end: end
            };
        },

        // Получить объект выделения для элемента с атрибутом contenteditable
        _getEditableSelection: function () {
            var selection = window.getSelection(),
                selectedRange = selection.rangeCount ? selection.getRangeAt(0) : null,
                selectedNode = selectedRange ? selectedRange.commonAncestorContainer : null;

            return {
                node: selectedNode || null,
                value: selectedNode ? selectedNode.nodeValue : null,
                start: selectedRange ? selectedRange.startOffset : null,
                end: selectedRange ? selectedRange.endOffset : null
            };
        },

        // Заменить префикс на string в зависимости от реализации
        _replacePrefixTo: function (string) {
            return this._isInput ? this._replaceInputPrefixTo(string) : this._replaceEditablePrefixTo(string);
        },

        // Заменить префикс на строку в input или textarea
        _replaceInputPrefixTo: function (string) {
            var value = this.$dom.val(),
                startOffset = value[this._currentPrefixBounds.start - 1] === ',' ? 1 : 0; // чтобы не удалить запятую

            // Составляем новое значение для поля ввода
            this.$dom.val(
                value.substring(0, this._currentPrefixBounds.start - 1 + startOffset) +
                string +
                value.substring(this._currentPrefixBounds.end)
            );

            // Устанавливаем фокус
            if (document.activeElement !== this.$dom[0]) {
                this.$dom.focus();
            }
        },

        // Заменить префикс на строку в элементе с атрибутом contenteditable
        _replaceEditablePrefixTo: function (string) {
            // Вставляем fragment после выделения
            var selection;
            if (window.getSelection) { // для нормальных браузеров
                selection = window.getSelection();
                if (selection.getRangeAt && selection.rangeCount) {
                    var range = selection.getRangeAt(0);
                    range.deleteContents();

                    var container = document.createElement('div'),
                        fragment = document.createDocumentFragment(),
                        currentNode,
                        lastNode;

                    container.innerHTML = string;
                    while (currentNode = container.firstChild) {
                        lastNode = fragment.appendChild(currentNode);
                    }
                    range.insertNode(fragment);
                    if (lastNode) {
                        range = range.cloneRange();
                        range.setStartAfter(lastNode);
                        range.collapse(true);
                        selection.removeAllRanges();
                        selection.addRange(range);
                    }
                }
            } else if ((selection = document.selection) && selection.type !== 'Control') { // для ie
                var range = selection.createRange();
                range.collapse(true);
                selection.createRange().pasteHTML(string);
            }

            // Удаляем сам префикс с учётом startOffset (чтобы случайно не удалить запятую)
            var startOffset = this._currentSelection.value[this._currentPrefixBounds.start - 1] === ',' ? 1 : 0;
            this._currentSelection.node.nodeValue = this._currentSelection.value.substring(
                0,
                this._currentPrefixBounds.start - 1 + startOffset
            );

            return this;
        },

        // Загрузить список вариантов для префикса
        _loadLoginsByPrefix: function (prefix, onSuccess, onError) {
            var p = prefix.length,
                subprefix,
                users = [];

            // Сперва ищем в кеше, возможно из прошлых результатов можно составить готовый ответ
            while (users.length < this._maxUsers && (subprefix = prefix.substring(0, p--))) {
                users = (cache[subprefix] || []).filter(function (user) {
                    return user.login.indexOf(prefix) === 0;
                });
            }

            if (users.length >= this._maxUsers) {
                onSuccess.call(this, prefix, {users: users}); // ответ из готовых результатов
            } else if (cache[prefix]) {
                onSuccess.call(this, prefix, {users: cache[prefix]}); // просто закешированный ответ
            } else {
                if (onSuccess) {
                    onSuccess = $.proxy(onSuccess, this, prefix);
                }
                if (onError) {
                    onError = $.proxy(onError, this, prefix);
                }
                new FuturicoHttpRequest({
                    url: router.generate('user_autocomplete'),
                    data: {
                        q: prefix
                    },
                    success: onSuccess,
                    error: onError
                });
            }
        },

        _onLoadingSuccess: function (prefix, response) {
            // Кешируем результаты
            response = cache[prefix] = response.users;
            // Если префикс изменился во время выполнения запроса, то не надо ничего делать
            if (prefix !== this._currentPrefixBounds.value) return;

            this.refresh(response.slice(0, this._maxUsers));
            this.open();
        },

        _onInput: function () {
            // Получаем специальный объект с информацией о выделении
            var selection = this._currentSelection = this._getSelection();
            if (!selection.value) return;

            // Получаем специальный объект с информацией о границах введённого префикса
            var prefixBounds = this._currentPrefixBounds = this._detectPrefixBounds(selection.value, selection.end);
            if (prefixBounds.value) {
                // Загружаем список возможных вариантов
                this._loadLoginsByPrefix(prefixBounds.value, this._onLoadingSuccess);
            } else {
                this.close();
            }
        },

        _onBlur: function () {
            this.close();
        },

        _onScroll: function () {
            this.close();
        },

        _onMouseDown: function () {
            this.close();
        },

        _onKeyDown: function (event) {
            switch (event.keyCode) {
                case 38: // up arrow
                    this._isOpened && event.preventDefault();
                    this.focus(this._currentFocus - 1);
                    break;
                case 40: // down arrow
                    this._isOpened && event.preventDefault();
                    this.focus(this._currentFocus + 1);
                    break;
                case 13: // enter
                    this._isOpened && event.preventDefault();
                    if (this._currentFocus === -1) {
                        this.close();
                    } else {
                        this.activate(this._currentFocus);
                    }
                    break;
                default:
                    this.close();
            }
        },

        // Делегирование событий
        _onMenuMouseDown: function (event) {
            if (event.target.tagName.toLowerCase() === 'li') {
                this._onMenuLoginMouseDown(event);
            }
        },

        // Делегирование событий
        _onMenuMouseEnter: function (event) {
            if (event.target.tagName.toLowerCase() === 'li') {
                this._onMenuLoginMouseEnter(event);
            }
        },

        _onMenuLoginMouseDown: function (event) {
            this.activate(event.target.getAttribute('data-user-suggest-menu-login'));
            event.preventDefault();
        },

        _onMenuLoginMouseEnter: function (event) {
            this.focus(event.target.getAttribute('data-user-suggest-menu-login'));
        },

        _onMenuMouseLeave: function () {
            this.blur();
        }
    });

    // Инициализировать все элементы с атрибутом data-user-suggest-menu внутри элемента $root
    UserSuggestMenu.autoInitialize = function ($root) {
        $root = $($root || document.body);
        $root.find('[data-user-suggest-menu]').each(function (d, dom) {
            if (!dom.userSuggestMenu) {
                dom.userSuggestMenu = new UserSuggestMenu(dom);
            }
        });
    };

    // Удалить все элементы с атрибутом data-user-suggest-menu внутри элемента $root
    UserSuggestMenu.autoDestroy = function ($root) {
        $root = $($root || document.body);
        $root.find('[data-user-suggest-menu]').each(function (d, dom) {
            if (dom.userSuggestMenu) {
                dom.userSuggestMenu._destroy();
            }
        });
    };

})(jQuery);

utils = {
	isIOS: navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false,
	isTouchCapable: ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch,
	entityMap: {
		"&": "&amp;",
		"<": "&lt;",
		">": "&gt;",
		'"': '&quot;',
		"'": '&#39;',
		"/": '&#x2F;'
	},

	getPlural : function (num, texts) {
		var n = num % 100;
		var n1 = num % 10;
		if (n > 10 && n < 20) return texts[2];
		if (n1 > 1 && n1 < 5) return texts[1];
		if (n1 == 1) return texts[0];
		return texts[2];
	},
	focusText : function (input, text, input_holder) {
		input = $(input);
		if (!input_holder) {
			var input_holder = input;
		}
		input.addEvent('focus', function () {
			if (input.value == text) {
				input.value = '';
				input_holder.removeClass('js-input_default');
			}
			input_holder.addClass('js-input_focus');
		});
		input.addEvent('blur', function () {
			if (input.value == '') {
				input.value = text;
				input_holder.addClass('js-input_default');
			} else {
				input_holder.removeClass('js-input_default');
			}
			input_holder.removeClass('js-input_focus');
		});
	},
	getTimeDiff : function (time_s) {
		var offset = (new Date()).getTime()/1000 - time_s;
		var output = '';
		if (offset < 60) {
			output = 'только что';
		} else if (offset < 120) {
			output = 'минуту назад';
		} else if (offset < 3600) {
			output = Math.floor(offset / 60) + ' ' + utils.getPlural(Math.floor(offset / 60), ['минуту', 'минуты', 'минут']) + ' назад';
		} else if (offset < 7200) {
			output = 'час назад';
		} else if (offset < 3600 * 24) {
			output = Math.floor(offset / 3600) + ' ' + utils.getPlural(Math.floor(offset / 3600), ['час', 'часа', 'часов']) + ' назад';
		} else {
			var offset = offset / 3600 / 24;
			if (offset < 2) {
				output = 'вчера';
			} else if (offset < 8) {
				output = Math.floor(offset) + ' ' + utils.getPlural(Math.floor(offset), ['день', 'дня', 'дней']) + ' назад';
			} else if (offset < 365) {
				output = (new Date(time_s*1000)).format('d mmmm HH:MM');
			} else {
				output = (new Date(time_s*1000)).format('d mmmm yyyy HH:MM');
			}
		}
		
		return output;
	},
	getCSSRule : function(ruleName, deleteFlag) {               // Return requested style obejct
		ruleName=ruleName.toLowerCase();                       // Convert test string to lower case.
		if (this.styleSheet) {                            // If browser can play with stylesheets
				var cssRule=false;                               // Initialize cssRule.
				var styleSheet=this.styleSheet;          // Get the current Stylesheet
				var ii;               // Initialize subCounter.
				if (styleSheet.cssRules) {                    // Browser uses cssRules?
					ii = styleSheet.cssRules.length - 1;
				} else {
					if (styleSheet.rules) {                   // Yes IE style.
						ii = styleSheet.rules.length - 1;
					}
				}
				do {                                             // For each rule in stylesheet
					if (styleSheet.cssRules) {                    // Browser uses cssRules?
						cssRule = styleSheet.cssRules[ii];         // Yes --Mozilla Style
					} else {
					    if (styleSheet.rules) {                   // Yes IE style.
							cssRule = styleSheet.rules[ii];      // Browser usses rules?      
						}                                      
					}                                             // End IE check.
					if (cssRule)  {                               // If we found a rule...
						if (cssRule.selectorText){
							if (cssRule.selectorText.toLowerCase()==ruleName) { //  match ruleName?
								if (deleteFlag=='delete') {                     // Yes.  Are we deleteing?
									if (styleSheet.cssRules) {                  // Yes, deleting...
										styleSheet.deleteRule(ii);              // Delete rule, Moz Style
									} else {                                    // Still deleting.
										styleSheet.removeRule(ii);              // Delete rule IE style.
									}                                           // End IE check.
									return true;                                // return true, class deleted.
								} else {                                        // found and not deleting.
									return cssRule;                             // return the style object.
								}                                               // End delete Check
							}                                                   // End found rule name
						} else if (cssRule.cssRules) {
							if (cssRule.name && cssRule.name.toLowerCase() == ruleName.split(' ')[0]) {
								for (var cssRulesLength = cssRule.cssRules.length, j = cssRulesLength; j > 0; j--) {
									if (cssRule.cssRules[j].keyText && cssRule.cssRules[j].keyText == ruleName.split(' ')[1]) {
										return cssRule.cssRules[j];
									}
								}
							} 
						}                                                       // end found cssRule
						ii--;                                                   // Decrement sub-counter
					}
				} while (cssRule && ii > 0)                                     // end While loop
		}                                                                       // end styleSheet ability check
		return false;                                                           // we found NOTHING!
	},                                                                          // end getCSSRule
	killCSSRule : function(ruleName) {               // Delete a CSS rule
		return utils.getCSSRule(ruleName,'delete');  // just call getCSSRule w/delete flag.
	},                                               // end killCSSRule
	addCSSRule : function(ruleName, attribute, value) {  // Create a new css rule
		if (!this.styleSheet) {
			var style = document.createElement('style'),
				styleSheets;

			document.getElementsByTagName('head')[0].appendChild(style);
			if (!window.createPopup) {
				style.appendChild(document.createTextNode(''));
			}
			styleSheets = document.styleSheets;
			this.styleSheet = styleSheets[styleSheets.length - 1];
		}

		if (this.styleSheet) { // Can browser do styleSheets?
			if (this.styleSheet.insertRule) {  // add Moz style.
				this.styleSheet.insertRule(ruleName+' { ' + attribute + ': ' + value + '}', this.styleSheet.cssRules.length);
			} else {  // Browser is IE?
				this.styleSheet.addRule(ruleName,  attribute + ': ' + value + '', -1);  // add IE style
			}  // End browser check
		}  // End browser ability check.
	},
	// Кроссбраузерное подключение обработчиков событий
	// После первого вызова функции происходит ее переопределение,
	// чтобы при последующих вызовах не выполнять одни и те же проверки
	addListener: function(elem, type, fn) {
		if (typeof window.addEventListener === 'function') {
			utils.addListener = function(elem, type, fn) {
				elem.addEventListener(type, fn, false);
			};
		} else if (document.attachEvent) { // IE < 9
			utils.addListener = function(elem, type, fn) {
				elem.addEvent('on' + type, fn);
			};
		} else { // устаревшие браузеры
			utils.addListener = function(elem, type, fn) {
				elem['on' + type] = fn;
			};
		}
		utils.addListener(elem, type, fn);
	},
	removeListener: function(elem, type, fn) {
		if (typeof window.addEventListener === 'function') {
			utils.removeListener = function(elem, type, fn) {
				elem.removeElementListener(type, fn, false);
			};
		} else if (document.attachEvent) { // IE < 9
			utils.removeListener = function(elem, type, fn) {
				elem.deleteListener('on' + type, fn);
			};
		} else { // устаревшие браузеры
			utils.removeListener = function(elem, type, fn) {
				elem['on' + type] = null;
			};
		}
		utils.removeListener(elem, type, fn);
	},
	isFileDragAndDropSupported: function() {
		var div = document.createElement('div');
		return ('draggable' in div) && (window.File && window.FileReader && window.FileList && window.Blob) && !utils.isIOS;
	},
	isFileUploadSupported: function() {
		var input = document.createElement('input');
		input.type = 'file';
		return !input.disabled;
	},
	camelToDash: function(str) {
		return str.replace(/\W+/g, '-').replace(/([a-z\d])([A-Z])/g, '$1-$2').toLowerCase();
	},
	getBackgroundPosition: function(el) {
		var namedPositions = { left: '0%', top: '0%', center: '50%', right: '100%', bottom: '100%' };
		if (Browser.Engine.trident){
			var x = el.getStyle('background-position-x'), y = el.getStyle('background-position-y');
			return (namedPositions[x] || x) + ' ' + (namedPositions[y] || y);
		} else {
			return el.getStyle('background-position')[0];
		}
	},
	isValidDate: function(year, month, day) {
		var d = new Date(year, month - 1, day);
		return d && (d.getMonth() + 1) == month && d.getDate() == Number(day);
	},

	escapeHtml: function (string) {
		return String(string).replace(/[&<>"'\/]/g, function (s) {
			return utils.entityMap[s];
		});
	},
	
	getListAsString: function (list) {
		var str = '';
		for (var i = 0, l = list.length; i < l; i++) {
			if (i == l - 1 && l > 1) {
				str += ' и ';
			} else if (i != 0) {
				str += ', ';
			}
			str += list[i];
		}
		return str;
	},
	ns: {'svg': 'http://www.w3.org/2000/svg'},
	testSVG: function() {
		return !!document.createElementNS && !!document.createElementNS(this.ns.svg, 'svg').createSVGRect;
	}
};
window.addEvent('domready', function() {
	// Автоматическая инициализация выпадающих меню после готовности DOM-дерева
	UserSuggestMenu.autoInitialize();
	
	if (Browser.Engine.trident && Browser.Engine.version < 5) {
		window.onresize = function(){
			if (document.documentElement.clientWidth < 1000) {
				$('js-nonfooter').style.width = '1000px';
				$('js-footer').style.width = '1000px';
				
			} else {
				$('js-nonfooter').style.width = 'auto';
				$('js-footer').style.width = 'auto';
			}
		}
	}
	animatePosts.run();
	window.windowScrollFocus = false;
	window.windowScroll = new Fx.Scroll(document.body, {duration:500, onComplete:function () {
		if (window.windowScrollFocus) {
			window.windowScrollFocus.show();
			window.windowScrollFocus = false;
		}
	}});
	
	//postsCutHandler.cut();
	
	iconsHandler.update();

	window.clearInterval(commentsHandler.timer_for_comments_init);
	commentsHandler.timer_for_comments_init = null;
	commentsHandler.initComments();
    commentsHandler.postProcess();
    commentsHandler.setMaxImagesWidth();
	
	datesHandler.setDates();

	$$('.p_body').each(function(element) {
		postsCutHandler.resizeImages(element);
	});
	
	commentsHandler.scrollToCollapsedComment();
	
	commentsHandler.showAllParentsOfNewComments();
	
	futuMediaPlayer.initPopupMedia($('js-posts_holder'));
	if ($$('.post_comments_page').length > 0) {
		futuMediaPlayer.initPopupMedia($$('.post_comments_page')[0]);
	}
	
	popupHandler.init().update(document.body);
	
	// Раскрытие чата
	if ($('chat')) {
		document.addEvent('keydown', function (e) {
			e = new Event(e);
			if ((e.control || e.metaKey) && (e.code == 192)) {
				if (chatHandler.opened) {
					chatHandler.close();
				} else {
					chatHandler.open();
				}
			}
		});
	}
	
	// Спойлеры
	var spoiler_event = (document.body.hasClass('l-touch_phone') || document.body.hasClass('l-touch_tablet')) ? 'touchend' : 'click';

	document.addEvent(spoiler_event, function (e) {
		e = new Event(e);
		if ($(e.target)) {
			if ($(e.target).hasClass('spoiler')) {
				$(e.target).addClass('spoiler_visible');
			} else if ($(e.target) && $(e.target).getParent && $(e.target).getParent('.spoiler')) {
				$(e.target).getParent('.spoiler').addClass('spoiler_visible');
			} else if ($(e.target.parentNode) && $(e.target.parentNode).getParent && $(e.target.parentNode).getParent('.spoiler')) {
				$(e.target.parentNode).getParent('.spoiler').addClass('spoiler_visible');
			}
		}
	});

	postControlsHandler.updateCodeTag();
});
window.addEvent('load', function() {
	animatePosts.loaded = true;
});

window.highlight_worker = new Worker('/static/js/highlight_worker.js');
window.highlight_worker.onmessage = function(event) {
	$$('code[data-id=' + event.data.id + ']')[0].innerHTML = event.data.html.value;
};

loginHandler = {
	validate : function () {
		if ($('js-auth_username').value.length == 0) {
			ajaxHandler.highlightField($('js-auth_username'));
			$('js-auth_username').focus();
			return false;
		}
		if ($('js-auth_password').value.length == 0) {
			ajaxHandler.highlightField($('js-auth_password'));
			$('js-auth_password').focus();
			return false;
		}
		if ( ! $('js-recaptcha_widget').hasClass('hidden') && ! grecaptcha.getResponse()) {
			new futuAlert('Простите, но нам бы очень хотелось быть уверенными в том, что вы не робот.');
			return false;
		}
		return true;
	},
	login : function () {
		if (loginHandler.validate()) {
			var data = $('js-auth_form').toQueryString();

			new futuAjax({
				button : $('js-auth_form_submit'),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.login,
				data : data,
				onLoadFunction : function (response) {
					var nextUrl = decodeURIComponent(window.location.search).split('?next=')[1] || '/';
					window.location.href = nextUrl;
				},
				onCustomErrorFunction : function (response) {
					var captcha_required = false;
					var activation_required = false;
					for (var i = 0; i < response.errors.length; i++) {
						if (['captcha_required', 'invalid_password', 'invalid_user'].indexOf(response.errors[i].code) != -1) {
							captcha_required = true;
						}
						if (response.errors[i].code == 'user_not_activated') {
							activation_required = true;
						}
					}
					if (captcha_required) {
						grecaptcha.reset();
						$('js-recaptcha_widget').removeClass('hidden');
					}
					if (activation_required) {
						$('js-auth_activate_form').removeClass('hidden');
						$('js-auth_form').addClass('hidden');
					}
				}
			});
		}
	},
	logout : function (button, subdomain) {
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.logout,
			data : '',
			onLoadFunction : function (response) {
				window.location.href = '/';
			}
		});
	},
	login_form_timeout: null,
	amnesia_form_timeout: null,
	devito_form_timeout: null,
	toggleLoginForm : function () {
		window.clearTimeout(loginHandler.login_form_timeout);
		loginHandler.login_form_timeout = null;
		if ($('js-login').hasClass('b-login__apps')) {
			loginHandler.toggleAppsNavigation();
		} else {
			if ($('js-login').hasClass('b-login__auth')) {
				loginHandler.login_form_timeout = window.setTimeout(function () {
					$('js-auth_form').set('styles', {
						'display': 'none',
					});
				}, 500);
				$('js-login').toggleClass('b-login__auth');
				if ($('js-login').hasClass('b-login__amnesia')) {
					loginHandler.toggleAmnesiaForm();
				}
			} else {
				$('js-auth_form').set('styles', {
					'display': 'block',
				});
				$('js-auth_username').focus();
				loginHandler.login_form_timeout = window.setTimeout(function () {
					$('js-login').toggleClass('b-login__auth');
				}, 50);
			}
		}
	},
	toggleAmnesiaForm : function () {
		window.clearTimeout(loginHandler.amnesia_form_timeout);
		loginHandler.amnesia_form_timeout = null;
		if ($('js-login').hasClass('b-login__apps')) {
			loginHandler.toggleAppsNavigation();
		} else {
			if ($('js-login').hasClass('b-login__amnesia')) {
				loginHandler.amnesia_form_timeout = window.setTimeout(function () {
					$('js-amnesia_recovery_request_form').set('styles', {
						'display': 'none',
					});
				}, 500);
				$('js-login').toggleClass('b-login__amnesia')
			} else {
				$('js-amnesia_recovery_request_form').set('styles', {
					'display': 'block',
				});
				loginHandler.amnesia_form_timeout = window.setTimeout(function () {
					$('js-login').toggleClass('b-login__amnesia')
				}, 50);
			}
		}
	},
	toggleDevitoForm : function () {
		window.clearTimeout(loginHandler.devito_form_timeout);
		loginHandler.devito_form_timeout = null;
		if ($('js-login').hasClass('b-login__apps')) {
			loginHandler.toggleAppsNavigation();
		} else {
			if ($('js-login').hasClass('b-login__devito')) {
				loginHandler.login_form_timeout = window.setTimeout(function () {
					$('js-devito_form').set('styles', {
						'display': 'none',
					});
				}, 500);
				$('js-login').toggleClass('b-login__devito');
			} else {
				$('js-devito_form').set('styles', {
					'display': 'block',
				});
				loginHandler.devito_form_timeout = window.setTimeout(function () {
					$('js-login').toggleClass('b-login__devito');
				}, 50);
				if ($('js-login').hasClass('b-login__login')) {
					loginHandler.toggleLoginForm();
				}
			}
		}
	},
	toggleShopForm : function() {
		window.clearTimeout(loginHandler.shop_form_timeout);
		loginHandler.shop_form_timeout = null;
		if ($('js-login').hasClass('b-login__apps')) {
			loginHandler.toggleAppsNavigation();
		} else {
			if ($('js-login').hasClass('b-login__shop')) {
				loginHandler.shop_form_timeout = window.setTimeout(function () {
					$('js-login_market_app').set('styles', {
						'display': 'none',
					});
				}, 500);
				$('js-login').toggleClass('b-login__shop');
			} else {
				$('js-login_market_app').set('styles', {
					'display': 'block',
				});
				loginHandler.shop_form_timeout = window.setTimeout(function () {
					$('js-login').toggleClass('b-login__shop');
				}, 50);
			}
		}
	},
	toggleShopSuccessForm : function() {
		window.clearTimeout(loginHandler.shop_form_timeout);
		loginHandler.shop_form_timeout = null;
		if ($('js-login').hasClass('b-login__apps')) {
			loginHandler.toggleAppsNavigation();
		} else {
			if ($('js-login').hasClass('b-login__shop_success')) {
				loginHandler.shop_form_timeout = window.setTimeout(function () {
					$('js-login_market_app').set('styles', {
						'display': 'none',
					});
				}, 500);
				$('js-login').toggleClass('b-login__shop_success');
			} else {
				$('js-login_market_app').set('styles', {
					'display': 'block',
				});
				loginHandler.shop_form_timeout = window.setTimeout(function () {
					$('js-login').toggleClass('b-login__shop_success');
				}, 50);
			}
		}
	},
	toggleAppsNavigation : function () {
		$('js-login').toggleClass('b-login__apps');

		window.addEvent('resize', function() {
			$('js-login').removeClass('b-login__apps');
		});
	},
	validateDevitoPost : function () {
		if ($('js-devito_post_body').value.trim().length == 0 && !$('js-new_post_media_id')) {
			new futuAlert('А текст поста? А как же текст поста?');
			return false;
		}
		if ( ! $('js-devito_email').value.match(/^.+@.+\..+$/)) {
			new futuAlert('Укажите правильный, рабочий e-mail. На него же отправится приглашение!');
			return false;
		}
		return true;
	},
	sendDevitoPost : function () {
		if (loginHandler.validateDevitoPost()) {
			new futuAjax({
				button : $('js-devito_form_submit'),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.sandbox_post_submit,
				data : $('js-devito_form').toQueryString(),
				onLoadFunction : function (response) {
					new futuAlert('Ваша заявка отправлена, мистер предполагаемый Дэнни Де Вито.');
					$('js-devito_form').reset();
					newPostHandler.deleteFile();
					loginHandler.toggleDevitoForm();
				}
			});
		}
	},

	_submitOauthPermissionForm : function(){
		var data = location.search.replace(/(^\?)/,'').split("&").map(function(n){return n=n.split("="),this[n[0]]=n[1],this;}.bind({}))[0];
		if (data.redirect_uri) {
			data.redirect_uri = decodeURIComponent(data.redirect_uri);
		}
		new FuturicoHttpRequest({
			method : 'POST',
			url : router.generate('app_authorize'),
			data : data,
			success : function (response) {
				window.location.href = response.redirect_url;
			}
		});
	}
};

registrationPurchaseHandler = {
	toggleRegistrationForm : function () {
		var holder_element = $('js-login_registration'),
			bg_element = holder_element.getElement('.b-login_registration_bg'),
			form_element = holder_element.getElement('.b-login_registration_form'),
			caption_element = holder_element.getElement('.b-login_registration_caption');

		if (holder_element.hasClass('js-opened')) {
			holder_element.removeClass('js-opened');
			bg_element.style.height = '0';
			form_element.style.maxHeight = '0';
			form_element.style.opacity = '0';
			caption_element.style.backgroundPosition = '0 0';
		} else {
			holder_element.addClass('js-opened');
			bg_element.style.height = '100%';
			form_element.style.maxHeight = '300px';
			form_element.style.opacity = '1';
			caption_element.style.backgroundPosition = '0 100%';
			window.setTimeout(function () {
				if (holder_element.hasClass('js-opened')) {
					$('js-login_registration_form_email').focus();
				}
			}, 400);
		}

	},
	validatePurchaseForm : function () {
		if (!$('js-login_registration_form_terms').checked) {
			$('js-login_registration_form_terms').focus();
			new futuAlert('Вы должны согласиться с условиями!');
			return false;
		}

		function validateEmail(email) {
			var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
			return re.test(email);
		}

		if (!validateEmail($('js-login_registration_form_email').value)) {
			$('js-login_registration_form_email').focus();
			new futuAlert('Укажите ваш, верный, рабочий email!');
			return false;
		}
		return true;
	},
	sendPurchaseForm : function () {
		if (registrationPurchaseHandler.validatePurchaseForm()) {
			$('js-login_registration_form').submit();
		}
	},
	toggleLicense : function () {
		$('js-license').toggleClass('hidden');
		$('js-auth_form').toggleClass('hidden');
	}
};

var VoteHandler = new Class({
	initialize: function(voteResultsHandler) {
		this.voteResultsHandler = voteResultsHandler;
	},

	vote: function(id, className, type) {
		this.container = type == 'post' ? $('js-post_id_' + id) : $(id).getElement('.vote');
		this.target = this.container.getElement('.' + className);
		this.id = id;
		this.type = type;

		if (!this.target.hasClass('vote_voted')) {
//			this.container = this.target.getParent('.vote');
			this.sendRequest();
			this.target
				.addClass('vote_voted')
				.getSiblings('.vote_voted')
				.removeClass('vote_voted');
		}
	},

	sendRequest: function() {
		var value = this.target.hasClass('vote_button_plus') ? '1' : '-1',
			data = 'doc=' + this.id + '&vote=' + value,
			url;

		if (this.type == 'comment') {
			url = ajaxUrls.comment_vote;
		} else {
			url = ajaxUrls.post_vote;
		}

		new futuAjax({
			button : this.target,
			color_to: '',
			color_from: '',
			url : url,
			data : data,
			onLoadFunction : function (response) {
				this.container.getElement('.vote_result').innerHTML = response.rating;
				this.voteResultsHandler.fireEvent('vote', [this.type, this.id]);

				// Скрываем комментарий, если пользователь поставил ему минус
				if (this.type == 'comment') {
					var comment_element = this.target.getParent('.comment');
					if (globals.user.comments_collapse_on_minus && value == '-1') {
						commentsHandler.initNegativeCommentCollapse(comment_element, true);
					}
					else if (comment_element.getElement('.c_collapse') && comment_element.getElement('.c_collapse').hasClass('c_hidden')) {
						commentsHandler.toggleCommentUnderThreshold(comment_element.getElement('.c_expand'), true)
					}
				}
			}.bind(this)
		});
	}
});

var VoteResultsHandler = new Class({
	loadingData : false,
	activePage : 0,
	container: null,
	limit: 15,
	offset: 0,
	sendRequest: true,
	paginatorBuilt: false,
	target: null,
	type: null,
	rating: 0,

	Implements: Events,

	initialize: function() {
		// Подписываемся на событие голосования за карму
		this.addEvent('vote', function(type, id) {
			if (this.layer && !this.layer.hasClass('invisible') && type == this.type && this.id == id) {
				this.paginatorBuilt = false;
				this.offset = this.activePage * this.limit;
				this.loadData();
			}
		}.bind(this));

		window.addEvent('resize', function(){
			var body = $(document.body);
			if (body && !body.hasClass('l-touch_capable')) {
				this.hidePopup('fast');
			}
		}.bind(this));
	},

	// Отображение результатов голосования за комментарии и посты
	showVoteResult: function(id, type) {
		if (!this.loadingData) {
			var controlsContainer,
				currentTarget;

			if (type == 'karma') {
				if (popupHandler.karma) {
					return false;
				}

				currentTarget = $$('.b-karma_value')[0];
			} else {
				controlsContainer = type == 'post' ? $('js-post_id_' + id) : $(id).getElement('.vote');
				currentTarget = controlsContainer.getElement('.vote_result');
			}

			this.initLayer(type);

			if (this.target) {
				if (this.target != currentTarget) {
					this.hidePopup('fast');
				} else if (this.target == currentTarget && !this.layer.hasClass('invisible')) {
					this.hidePopup();
					return;
				}
			}

			// Попап скрыт и запрашиваются данные о результатах голосования для которых не выполняется запрос
			if (this.layer.hasClass('invisible') && !(this.target == currentTarget && !this.sendRequest)) {
				this.target = currentTarget;
				this.type = type;
				this.id = id;

				if (type == 'karma') {
					this.layer.addClass('js-karma_popup');
					this.container = this.target.getParent('.b-user_votes_wrapper');
				} else {
					this.controlsContainer = controlsContainer;
					this.item = this.controlsContainer.getParent();
					this.container = null;
				}

				this.show({
					button: this.target,
					id: id
				});
			}
		}
	},

	show : function (params) {
		this.params = params;
		this.loadData();

		this.boundHidePopupOnEscPress = this.hidePopupOnEscPress.bind(this);
		this.boundHidePopupOnBodyClick = this.hidePopupOnBodyClick.bind(this);
		window.addEvent('keydown', this.boundHidePopupOnEscPress);
		window.addEvent('click', this.boundHidePopupOnBodyClick);
	},

	loadData : function () {
		var data,
			url;
			
		if (this.params.button.getParent('.mine') || this.params.button.getParent('.b-votes_popup')) {
			color_to = Colors.background_color;
			color_from = Colors.info_bg_color;
		}

		if (this.type == 'karma') {
			data = 'user=' + this.params.id + '&limit=' + this.limit + '&offset=' + this.offset;
			url  = ajaxUrls.user_karma_list;
		} else if (this.type == 'comment') {
			url = ajaxUrls.vote_list;
			data = 'comment=' + this.params.id + '&limit=' + this.limit + '&offset=' + this.offset;
		} else {
			url = ajaxUrls.vote_list;
			data = 'post=' + this.params.id + '&limit=' + this.limit + '&offset=' + this.offset;
		}

		this.sendRequest = false;
		
		(function(num, type, id) {
			var ajax = new futuAjax({
				button : this.params.button,
				animated_element : this.params.button,
				attribute : 'opacity',
				color_to:  0.5,
				color_from : 1,
				url : url,
				data : data,
				checkAjaxLoadedFunction : function () { return this.loadingData;}.bind(this),
				setAjaxLoadingFunction : function () {this.loadingData = true;}.bind(this),
				removeAjaxLoadingFunction : function () {this.loadingData = false;}.bind(this),
				onLoadFunction : function (response) {
					$(this.params.button).removeClass('js-lh_active');
					this.params.button.setAttribute('style', '');
					
					if (this.activePage == num && this.type == type && this.params.id == id) {
						this.countVotes(response);

						if (this.totalCount) {
							if (!this.paginatorBuilt) {
								this.buildPaginator();
							}
							this.setPage(0);
						}
						this.showPopup();
						this.sendRequest = true;
					}
				}.bind(this),
				onCustomErrorFunction: function() {
					this.sendRequest = true;
				}.bind(this)
			});

		}.bind(this))(this.activePage, this.type, this.params.id);
	},

	countVotes : function (response) {
		this.plusArray = response.pros ? response.pros : [];
		this.minusArray = response.cons ? response.cons : [];
		this.totalCount = response.total_count;
		this.offset = response.offset;
		this.totalMinus = response.cons_count;
		this.totalPlus = response.pros_count;

		if (this.type == 'post' || this.type == 'comment') {
			this.rating = response.rating;
		} else if (this.type == 'karma') {
			this.karma = response.karma;
		}

		if (this.totalCount) {
			this.setHeaders();
		} else {
			this.buildPageNoVotes();
		}
	},

	setHeaders : function () {
		this.plusHeader.innerHTML = 'плюсов &mdash; ' + this.totalPlus;
		this.minusHeader.innerHTML = 'минусов &mdash; ' + this.totalMinus;
	},

	buildPaginator : function () {
		var pagesCount = Math.ceil(Math.max(this.totalMinus, this.totalPlus) / this.limit);

		if (pagesCount > 1) {
			var iHTMLpaginator = '',
				items;

			for (var i = 0; i < pagesCount; i++) {
				iHTMLpaginator += '<a href="#" class="b-pagination-item" data-page="' + i + '"> </a>';
			}

			this.paginator.innerHTML = iHTMLpaginator;
			this.paginator.removeClass('hidden');
			items = this.paginator.getElements('.b-pagination-item');
			this.paginatorBuilt = true;

			items.addEvent('click', function(event) {
				event.preventDefault();
				if (!this.loadingData) {
					var target = event.target;

					this.activePage = target.get('data-page');
					this.offset = this.limit * this.activePage;
					this.loadData();
				}
			}.bind(this))
		} else {
			this.paginator.innerHTML = '';
			this.paginator.addClass('hidden');
			this.prevPageLink.addClass('hidden');
			this.nextPageLink.addClass('hidden');
		}
	},

	buildPage: function () {
		var plusIHTML = this.buildCol(this.plusArray),
			minusIHTML = this.buildCol(this.minusArray);

		this.plusList.innerHTML = plusIHTML;
		this.minusList.innerHTML = minusIHTML;
		this.emptyResults.addClass('hidden');
		this.listsContainer.removeClass('hidden');
	},

	buildCol : function (arr) {
		var iHTML = '';
		if (arr) {
			arr.each(function (vote) {
				var value = '&nbsp;<span>(' + vote.vote + ')</span>',
					item;
				if (vote.user) {
					if (vote.user.deleted) {
						item = '<li><span class="b-removed_user">' + vote.user.login + '</span>' + value + '</li>';
					} else {
						item = '<li><a href="' + globals.parent_site + '/users/' + vote.user.login + '/" class="b_users_table-link">' + vote.user.login + '</a>' + value + '</li>';
					}

					iHTML += item;
				}
			}.bind(this));
		}
		return iHTML;
	},

	buildPageNoVotes : function () {
		this.plusList.innerHTML = '';
		this.minusList.innerHTML = '';
		this.plusHeader.innerHTML = '';
		this.minusHeader.innerHTML = '';
		this.paginator.innerHTML = '';
		this.paginator.addClass('hidden');
		this.prevPageLink.addClass('hidden');
		this.nextPageLink.addClass('hidden');
		this.listsContainer.addClass('hidden');
		this.emptyResults.removeClass('hidden');
		this.setPosition();
	},

	setPage : function (page, changePages) {
		var activeItem = this.paginator.getElement('.active');

		this.buildPage();
		this.setPosition();

		if (activeItem) {
			activeItem.removeClass('active');
		}

		if ($(this.paginator.getElements('a')[this.activePage])) {
			$(this.paginator.getElements('a')[this.activePage]).addClass('active');
		}

		if (!this.offset)  {
			this.nextPageLink.addClass('hidden');
		} else {
			this.nextPageLink.removeClass('hidden');
		}

		if (this.activePage == 0) {
			this.prevPageLink.addClass('hidden');
		} else {
			this.prevPageLink.removeClass('hidden');
		}
	},

	setPosition : function () {
		var layerCoords = this.layer.getCoordinates(),
			controlsCoords,
			leftConst = 20,
			topConst = -48;

		if (this.type == 'post') {
			leftConst = 302;
			topConst = -32;
		}
		if (this.type == 'karma') {
			controlsCoords = this.target.getCoordinates();
			leftConst = 254;
			topConst = -31;
		} else {
			controlsCoords = this.controlsContainer.getCoordinates();
		}
		var upPosition = controlsCoords.top + controlsCoords.height - layerCoords.height + topConst;
		var leftPosition = controlsCoords.left - leftConst;
		var arrow_elements = this.layer.getElements('.b-votes_popup_arrow');
		if (leftPosition < 0) {
			arrow_elements.set({
				'styles' : {
					'marginRight' : -leftPosition + 'px'
				}
			});
			leftPosition = 0;
		} else {
			arrow_elements.set({
				'styles' : {
					'marginRight' : 0
				}
			});
		}

		// Если попап не умещается по высоте, его нужно спозиционировать относительно низа target-элемента
		if ((controlsCoords.top + layerCoords.height - topConst  > window.getSize().y + window.getScroll().y && upPosition >= 0) || this.layer.hasClass('js-bottom')) {
			this.layer
				.setStyles({
					top: upPosition,
					left: leftPosition,
					margin: 0
				})
				.addClass('js-bottom');
		} else {
			if (this.layer.hasClass('invisible')) {
				this.layer
					.setStyles({
						top: controlsCoords.top - topConst,
						left: leftPosition,
						margin: 0
					});
			}
		}
	},

	initLayer : function (type) {
		var caption;
		if (type == 'karma') {
			caption = 'Карма, так привлекшая ваше внимание, в данный момент <span class="b-votes_popup_rating"></span>';
		} else {
			caption = 'Рейтинг <span class="b-votes_popup_type_caption"></span> в данный момент <span class="b-votes_popup_rating"></span>';
		}

		if (!$('js-votes_popup')) {
			this.layer = new Element('div', {
				'class': 'b-votes_popup invisible',
				'id': 'js-votes_popup'
			});

			this.layer.innerHTML = '<a href="#" class="b-close_btn">&times;</a>\
				<div class="b_users_table_holder">\
				<a class="b-arrow b-arrow__prev" href="#"><i class="b-arrow-ico"></i></a>\
				<div class="b-votes_popup_caption">' +
					caption +
					'<div class="b-no_votes hidden">Никто не нажимал на эти веселенькие плюсики и минусики</div>\
				</div>\
				<table class="b_users_table" cellspacing="0">\
				<tbody>\
					<tr>\
						<td class="b_users_table-cell b_users_table-cell__left">\
							<h4 class="b_users_table-subtitle"></h4>\
							<ul class="b_users_table-list"></ul>\
						</td>\
						<td class="b_users_table-cell b_users_table-cell__right">\
							<h4 class="b_users_table-subtitle"></h4>\
							<ul class="b_users_table-list"></ul>\
						</td>\
					</tr>\
				</tbody>\
				</table>\
				<a class="b-arrow b-arrow__next" href="#"><i class="b-arrow-ico"></i></a>\
			</div>\
			<div class="b-pagination">\
				<div class="b-pagination-inner_1">\
					<div class="b-pagination-inner_2">\
					</div>\
				</div>\
				<div style="clear:both;"></div>\
			</div>\
			<span class="b-votes_popup_arrow b-votes_popup_arrow_bottom"></span>\
			<span class="b-votes_popup_arrow b-votes_popup_arrow_top"></span>';

			this.layer.inject(document.body);
			this.paginator = this.layer.getElement('.b-pagination-inner_2');
			this.listsContainer = this.layer.getElement('.b_users_table');
			this.plusHeader = this.layer.getElement('.b_users_table-cell__left .b_users_table-subtitle');
			this.plusList = this.layer.getElement('.b_users_table-cell__left ul');
			this.minusHeader = this.layer.getElement('.b_users_table-cell__right .b_users_table-subtitle');
			this.minusList = this.layer.getElement('.b_users_table-cell__right ul');
			this.prevPageLink = this.layer.getElement('.b-arrow__prev');
			this.nextPageLink = this.layer.getElement('.b-arrow__next');
			this.closeBtn = this.layer.getElement('.b-close_btn');
			this.emptyResults = this.layer.getElement('.b-no_votes');

			this.closeBtn.addEvent('click', function(event) {
				event.preventDefault();
				this.hidePopup();
			}.bind(this));

			this.prevPageLink.addEvent('click', function(event) {
				event.preventDefault();
				if (this.offset != 0 && this.sendRequest) {
					this.activePage--;
					this.offset = this.limit * this.activePage;
					this.loadData();
				}
			}.bind(this));

			this.nextPageLink.addEvent('click', function(event) {
				event.preventDefault();
				if (this.offset != null && this.sendRequest) {
					this.activePage++;
					this.loadData();
				}
			}.bind(this));
		}
		else {
			this.layer.getElement('.b-votes_popup_caption').innerHTML = caption;
		}
	},

	showPopup: function() {
		if (this.type == 'comment' || this.type == 'post') {
			var parent = this.controlsContainer.getParent('.' + this.type);
			this.controlsContainer.getElement('.vote_result').innerHTML = this.rating;
			this.layer.getElement('.b-votes_popup_rating').innerHTML = this.rating;
			if (parent && parent.get('id')) {
				this.layer.set('data-el_id', parent.get('id'));
			}
			if (this.type == 'comment') {
				this.layer.removeClass('b-votes_popup_post');
				this.layer.addClass('b-votes_popup_comment');
				this.layer.getElement('.b-votes_popup_type_caption').innerHTML = 'комментария';
			} else {
				this.layer.removeClass('b-votes_popup_comment');
				this.layer.addClass('b-votes_popup_post');
				this.layer.getElement('.b-votes_popup_type_caption').innerHTML = 'поста';
			}
		} else if (this.type == 'karma') {
			this.layer.getElement('.b-votes_popup_rating').innerHTML = this.karma;
			this.container.getElement('.b-karma_value_inner').innerHTML = this.karma;
			this.layer.addClass('b-votes_popup_karma');
		}

		if (this.layer.hasClass('invisible')) {
			this.layer
				.setStyle('opacity', 0)
				.removeClass('invisible');

			new Fx.Tween(this.layer, {
					duration: 150
				})
				.start('opacity', 1);
		}
	},

	hidePopup: function(duration) {
		var duration = duration || 150;

		if (duration === 'fast'){
			this.setDefaultParams();
		} else {
			new Fx.Tween(this.layer, {
					duration: duration
				})
				.start('opacity', 0)
				.addEvent('complete', function() {
					this.setDefaultParams();
				}.bind(this));
		}

		if (this.boundHidePopupOnEscPress) {
			window.removeEvent('keydown', this.boundHidePopupOnEscPress);
			this.boundHidePopupOnEscPress = null;
		}
		if (this.boundHidePopupOnBodyClick) {
			window.removeEvent('click', this.boundHidePopupOnBodyClick);
			this.boundHidePopupOnBodyClick = null;
		}
	},

	hidePopupOnEscPress: function(event) {
		if (event.code == 27) {
			this.hidePopup('fast');
		}
	},
	hidePopupOnBodyClick: function(event) {
		var hide;
		if (!this.layer.hasClass('invisible')) {
			if (event.target == this.layer || event.target.getParent('#js-votes_popup') || (this.controlsContainer && this.controlsContainer.getElement(event.target))) {
				hide = false;
			} else {
				hide = true;
			}
		}

		if (hide) {
			this.hidePopup('fast');
		}
	},

	setDefaultParams: function() {
		if (this.layer && !this.layer.hasClass('invisible')){
			this.layer
				.inject(document.body)
				.addClass('invisible')
				.removeClass('js-bottom')
				.removeClass('js-karma_popup')
				.set('style', '');

			this.activePage = 0;
			this.offset = 0;
			this.paginatorBuilt = false;

			if (this.type == 'karma') {
				$$('.l-center_container').setStyle('min-height', '');
			}

		}
	}
});

var voteResultsHandler = new VoteResultsHandler();
var voteHandler = new VoteHandler(voteResultsHandler);
myPostsHandler = {
	togglePost : function (button, id, target, action, onComplete) {
		var data = 'post=' + id;
		var url = ajaxUrls.togglePostUrl(target, action);
		var post_element = $('p' + id);
		var in_button_element = post_element.getElement('.b-post_my_post_controls_button_in_' + target);
		var out_button_element = post_element.getElement('.b-post_my_post_controls_button_out_' + target);
		var button_parent = $(button).getParent();
		
		if (!button.hasClass('js-wating_for_animation')) {
			var favouritesAjax = new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : url,
				data : data,
				remove_element_color : false,
				onLoadFunction : function (response) {
					if (response.unread_count !== undefined) {
						moreHandler.setHeaderNavigationCounters('interest', response.unread_count);
					}
					if (action == 'out') {
						out_button_element.addClass('hidden');
						in_button_element.removeClass('hidden');
					} else {
						out_button_element.removeClass('hidden');
						in_button_element.addClass('hidden');
					}
					if (onComplete) {
						onComplete();
					}
					if (action == 'out' && button.getParent('.b-posts_holder__' + target)) {
						postControlsHandler.removePost(post_element);
					}
				}
			});
		}
	},
	showReason : function (button, post_id, post_owner) {
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.interest_reason,
			data : 'post=' + post_id,
			onLoadFunction : function (response) {
				var post_element = button.getParent('.post');
				var base_domain_url = globals.base_domain ? globals.base_domain.url : globals.domain.url;
				var controls_options = [];
				var reasons = response.reasons;
				var users_subsriptions = false;
				var users_subsriptions_array = [];
				var post_owner_in_subscriptions = false;
				var own_post = false;
				var manual = false;
				var domain_subscription = false;
				var own_comment = false;
				
				var reason_window_settings = {
					button : $(button),
					close_button_text : '?',
					options : [],
					close_button_class : 'b-futu_controls_close_question'
				};
				var reason_option = null;
				var reason_caption = '<i style="font-style:normal; display:inline-block; width:246px; white-space:normal;">';
				
				if (reasons.length == 0) {
					reason_caption += 'Это старый пост, и неизвестно, почему он в&nbsp;моих вещах.'
				}
				
				$A(reasons).each(function (reason) {
					var reason_caption = '';
					switch(reason.reason) {
						case 'manual':
							manual = true;
							break;
						case 'own_post':
							own_post = true;
							break;
						case 'user_subscription':
							if (reason.user.id == post_owner.id) {
								post_owner_in_subscriptions = true;
							} else {
								if (!users_subsriptions) {
									users_subsriptions = {};
								}
								users_subsriptions[reason.user.id] = reason.user;
							}
							break;
						case 'domain_subscription':
							domain_subscription = reason.domain;
							break;
						case 'own_comment':
							own_comment = true;
							break;
						default:
							reason_caption = '';
					}
				});
				
				
				if (users_subsriptions) {
					for (var user in users_subsriptions) {
						if (users_subsriptions.hasOwnProperty(user)) {
							users_subsriptions_array.push(users_subsriptions[user]);
						}
					}
				}
				
				if (own_post) {
					reason_caption += 'Вы&nbsp;&mdash; автор поста';
					if (manual) {
						reason_caption += own_comment ? ', ' : ' и ';
						reason_caption += 'добавили пост в мои вещи';
						reason_caption += own_comment ? ', ' : '.';
					}
					if (own_comment) {
						reason_caption += manual ? ' и&nbsp;вы ' : ', а&nbsp;ещё&nbsp;вы ';
						reason_caption += 'в нём комментировали.';
					}
					if (!manual && !own_comment) {
						reason_caption += '.';
					}
					
				} else if (post_owner_in_subscriptions) {
					reason_caption += 'Автор поста&nbsp;&mdash; <a href="' + base_domain_url + '/users/' + post_owner.login + '">' + post_owner.login + '</a>&nbsp;&mdash; у&nbsp;вас в&nbsp;социализме';
					
					if (manual || own_comment) {
						reason_caption += ', а&nbsp;ещё&nbsp;вы ';
					} else {
						reason_caption += '.';
					}
					if (manual) {
						reason_caption += 'добавили пост в&nbsp;мои&nbsp;вещи';
						reason_caption += own_comment ? ' и ' : '.';
					}
					if (own_comment) {
						reason_caption += 'комментировали в&nbsp;нём.';
					}
					
				} else if (own_comment) {
					reason_caption += 'Вы комментировали в&nbsp;этом посте.';
				} else if (manual) {
					reason_caption += 'Вы сами добавили пост в&nbsp;мои вещи.';
				}
				
				if (users_subsriptions_array.length > 0) {
					reason_caption += ' ';
					if (own_post || post_owner_in_subscriptions || own_comment || manual) {
						reason_caption += 'Также здесь комментировал';
					} else {
						reason_caption += 'Пост комментировал';
					}
					if (users_subsriptions_array.length == 1) {
						reason_caption += '';
						reason_caption += users_subsriptions_array[0].gender == 'female' ? 'a ' : ' ';
					} else {
						reason_caption += 'и ';
					}
					
					
					for (var i = 0; i < users_subsriptions_array.length; i++) {
						var user = users_subsriptions_array[i];
						reason_caption += '<a href="' + base_domain_url + '/users/' + users_subsriptions_array[i].login + '">' + users_subsriptions_array[i].login + '</a>';
						reason_caption += (i == users_subsriptions_array.length - 1) ? '.' : (users_subsriptions_array.length > 2 && i < users_subsriptions_array.length - 2) ? ', ' : ' и ';
					}
				}
				
				if (domain_subscription) {
					if (own_post || post_owner_in_subscriptions || own_comment || manual || users_subsriptions_array.length > 0) {
						reason_caption += ' Кроме этого вы подписаны на&nbsp;';
					} else {
						reason_caption += 'Вы подписаны на&nbsp;';
					}
					reason_caption += domain_subscription.url + '.';
				}
				
				if (users_subsriptions_array.length > 0) {
					reason_caption += '<br><a style="display:inline-block; margin:10px 0 6px;" href="' + base_domain_url + '/my/socialism">Настройки социализма</a>';
				}
				
				reason_window_settings.options.push({
					caption : reason_caption + '</i>',
					onclick : (function () {}),
					type : 'caption'
				});
				
				if (domain_subscription) {
					var unsubscribeDomainFromFeed = function () {
						var url = ajaxUrls.getMyThingsSubscriptionUrl('domain', 'unsubscribe');
						var data = 'domain=' + domain_subscription.id;

						new futuAjax({
							button : $(button),
							color_to : '0.5',
							color_from : '1',
							attribute : 'opacity',
							url : url,
							data : data,
							onLoadFunction : function (response) {
								new futuAlert('Новые посты и комментарии с ' + domain_subscription.url + ' больше не попадут в мои вещи.');
								var out_element = post_element.getElement('.b-post_my_post_controls_button_out_interest');
								myPostsHandler.togglePost(out_element, post_id, 'interest', 'out', function () {
									futu_controls.hide();
								});
							}
						});
					};
					reason_window_settings.options.push({
						caption : '<span style="white-space:normal;">отписаться от ' + domain_subscription.url + ' и&nbsp;удалить пост из моих вещей</span>',
						onclick : unsubscribeDomainFromFeed
					});
				}

				
				var futu_controls = new futuControls(reason_window_settings);
				
			}
		});
	},
	getCounters: function (type) {
		new futuAjax({
			button : (new Element('div')),
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : ajaxUrls.getMyPostsCounter(type),
			data : '',
			onLoadFunction : function (response) {
				moreHandler.setHeaderNavigationCounters(type, response.unread_count);
			}
		});
	},
	markPostAsRead: function (button, post_id, post_type) {
		var links_holder = button.getParent('.dd').getElement('.b-post_comments_links');
		var link_href = links_holder.getElement('a').getAttribute('href');
		var comments_count = button.getParent('.post').getAttribute('data-comments_count');
		links_holder.innerHTML = '<a href="{link_href}">{comments_count} {comments_caption}</a>'.substitute({
			link_href : link_href,
			comments_count : comments_count,
			comments_caption : utils.getPlural(comments_count, ['комментарий', 'комментария', 'комментариев'])
		});
		
		commentsHandler.filter.viewPost(button, post_id, Math.floor((new Date()).getTime()/1000));
		myPostsHandler.getCounters(post_type);

		button.destroy();
	}
	
};

feedSettingsHandler = {
	switchFeedThreshold : function(button, threshold, feed_type) {
		var data = 'sorting=last_activity&threshold=' + threshold + '&feed_type=' + feed_type;
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.feeds_threshold,
			data : data,
			dont_stop_animation : true,
			onLoadFunction : function (response) {
				window.location.href='/';
			}
		});
	},
	switchFeedType : function(button, type) {
		var data = 'feed_type=' + type;
		if ($('js-index_slider').getElement('.js-feed_type_active')) {
			$('js-index_slider').getElement('.js-feed_type_active').removeClass('js-feed_type_active');
		}
		button.addClass('js-feed_type_active');
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.feeds_type,
			data : data,
			dont_stop_animation : true,
			onLoadFunction : function (response) {
				window.location.href = '/';
			}
		});
	},
	setSubscription : function (checkbox, domain_id, onComplete) {
		var switch_position = 'unsubscribe';
		if (checkbox.checked) {
			switch_position = 'subscribe';
		}
		var url = ajaxUrls.getSubscriptionUrl('domains', switch_position);
		var data = 'domain=' + domain_id;

		new futuAjax({
			button : $(checkbox),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url : url,
			data : data,
			onLoadFunction : function (response) {
				if (onComplete) {
					onComplete();
				}
			}
		});
	},
	setMyThingsSubscription : function (checkbox, domain_id) {
		var switch_position = 'unsubscribe';
		if (checkbox.checked) {
			switch_position = 'subscribe';
		}
		var url = ajaxUrls.getMyThingsSubscriptionUrl('domain', switch_position);
		var data = 'domain=' + domain_id;

		new futuAjax({
			button : $(checkbox),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url : url,
			data : data,
			onLoadFunction : function (response) {

			}
		});
	},
	setDomainSubscription: function (button, domain_id, onComplete) {
	    var switch_position = 'subscribe';
		if (button.hasClass('js-subscribed')) {
			switch_position = 'unsubscribe';
		}
		var url = ajaxUrls.getSubscriptionUrl('domains', switch_position);
		var data = 'domain=' + domain_id;

		new futuAjax({
			button : $(button),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			remove_element_color : true,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				var switch_position = 'add';
				if (button.hasClass('js-subscribed')) {
					switch_position = 'delete';
				}
				var url = ajaxUrls.getNavthingUrl('domain', switch_position);
				var data = 'domain=' + domain_id;

				new futuAjax({
					button : $(button),
					color_to : '1',
					color_from : '1',
					attribute : 'opacity',
					remove_element_color : false,
					url : url,
					data : data,
					onLoadFunction : function (response) {
						button.toggleClass('js-subscribed');
						var new_subscribers_count = parseInt(button.getAttribute('data-subscribers_count'), 10);
						if (button.hasClass('js-subscribed')) {
							new_subscribers_count++;
						} else {
							new_subscribers_count--;
						}
						button.setAttribute('data-subscribers_count', new_subscribers_count);
						button.getElement('.b-subscribe_button_text').innerHTML = new_subscribers_count + '&nbsp;' + utils.getPlural(new_subscribers_count, ['подписчик', 'подписчика', 'подписчиков']);
						
						navThingHandler.full_view_page = 0;
						navThingHandler.full_view_page_col = 0;
						navThingHandler.navthing_element.getElements('.b-navthing_tab_text').destroy();
						navThingHandler.navthing_element.getElements('.b-navthing_tab_pics').destroy();
						navThingHandler.navthing_element.getElements('.b-navthing_tab_both').destroy();
						navThingHandler.navthing_domains = false;

						if (button.getParent('.l-subscription_list')) {
							var list = button.getParent('.l-subscription_list'),
								domain = $(button).getParent('#js-blogs_list_' + domain_id),
								controls_navthing = domain.getElement('#js-blogs_list_controls_navthing_' + domain_id),
								checked = switch_position == 'add' ? 'checked' : '';

							domain.addClass('b-list_item__opened');
							controls_navthing.set('checked', checked);
						}

						if (button.getParent('.b-subdomain_aside_subscribe')) {
							var subscription_block = button.getParent('.b-subdomain_aside_subscribe'),
								subscribe_additional = subscription_block.getElement('.b-subdomain_aside_subscribe_additional'),
								controls_navthing = subscribe_additional.getElement('#js-blogs_list_controls_navthing_' + domain_id),
								checked = switch_position == 'add' ? 'checked' : '';

							subscription_block.addClass('b-subdomain_aside_subscribe__expand');
							controls_navthing.set('checked', checked);
						}

						if ($('js-domains_subscribed')) {
							var subscribed_count = $('js-domains_subscribed').getElement('span').get('text'),
								switch_count = button.hasClass('js-subscribed') ? Number(subscribed_count) + 1 : Number(subscribed_count) - 1;

							$('js-domains_subscribed').getElement('span').set('text', switch_count);
						}
					}
				});
			}
		});
	},
	setUserSubscription: function (formEl, button) {
		var formEl = formEl || null,
			subscriptionsList = $('js-user_subscriptions_list'),
			loginInput,
			login,
			url,
			data;

		if (formEl) {
			loginInput = formEl.getElement('input[name="call"]');
			login = loginInput.value.trim();
			button = button || formEl.getElement('.b-icon_button_add');
			url = ajaxUrls.getSubscriptionUrl('users', 'subscribe');
			data = 'users=' + login + '&subscribe_to=posts,comments';
		}

		new futuAjax({
			button: button,
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url: url,
			data: data,
			onLoadFunction : function (response) {
				var liEl,
					currentItems = subscriptionsList ? subscriptionsList.getElements('.b-subscriptions_item') : [],
					renderNewItem = true;

				if (button.get('id') != 'js-popup_user_socialize') {
					loginInput.value = '';
					if (response.users) {
						for (var i = 0, l = response.users.length; i < l; i++) {
							currentItems.each(function (item) {
								// Если пользователь уже существует в списке, новый элемент не добавляется,
								// а в существующем включаются все чекбоксы
								if (item.get('data-user_id') == response.users[i].id) {
									renderNewItem = false;
									item.getElements('input[type="checkbox"]').set('checked', true);
								}
							});
							if (renderNewItem) {
								liEl = new Element('li', {
									'class': 'b-subscriptions_item',
									html: '<a class="js-user_login" href="/users/{login}">{login}</a><br />рейтинг {rating} |\
										<a href="#" onclick="var e = new Event(event);feedSettingsHandler.updateUserSubscription(e, [\'posts\', \'comments\']); return false;">удалить</a><br />\
										<label><input type="checkbox" class="i-checkbox" checked="checked" onclick="var e = new Event(event);feedSettingsHandler.updateUserSubscription(e, [\'posts\'])">следить за постами</label><br />\
										<label><input type="checkbox" class="i-checkbox" checked="checked" onclick="var e = new Event(event);feedSettingsHandler.updateUserSubscription(e, [\'comments\'])">следить за комментариями</label>'.substitute({
											login: response.users[i].login,
											rating: response.users[i].rating
										}),
									'data-user_id': response.users[i].id
								});
								liEl.inject(subscriptionsList, 'top');
							}
						}
						feedSettingsHandler.updateCounter($('js-social_interested'), subscriptionsList ? subscriptionsList.getElements('.b-subscriptions_item').length : 0);
					}
				}
				else {
					button.addClass('js-subscribed');
				}
			}
		});
	},
	updateUserSubscription: function (event, feeds) {
		var button = event.target,
			parentEl = button.getParent('.b-subscriptions_item'),
			loginEl = parentEl ? parentEl.getElement('.js-user_login') : button.getParent('form').getElement('[name=call]'),
			subscriptionsList = $('js-user_subscriptions_list'),
			feeds = feeds || [],
			action,
			data,
			url,
			switchPosition;


		if (button.get('type') == 'checkbox' && button.checked) {
			switchPosition = 'subscribe';
			action = 'subscribe_to';
		} else {
			switchPosition = 'unsubscribe';
			action = 'unsubscribe_from';
		}

		url = ajaxUrls.getSubscriptionUrl('users', switchPosition);
		data = 'users=' + (loginEl.innerHTML || loginEl.value).trim() + '&' + action + '=' + feeds.join(',');

		new futuAjax({
			button: button,
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url: url,
			data: data,
			onCompleteFunction : function (response) {
				if (switchPosition == 'unsubscribe') {
					if (button.get('id') != 'js-popup_user_socialize') {
						var destroyItem = false;
						if (button.get('type') == 'checkbox') {
							// Если все чекбоксы сняты, пользователь удаляется из подписок
							// и поэтому нужно удалить его из списка
							var inputs = parentEl.getElement('input:checked');
							destroyItem = !inputs;
						} else {
							destroyItem = true;
						}

						if (destroyItem) {
							new Fx.Morph(parentEl, {
								duration: 222,
								onComplete: function () {
									parentEl.setStyle('overflow', 'hidden');
									new Fx.Morph(parentEl, {
										duration: 100,
										onComplete: function () {
											parentEl.destroy();
											feedSettingsHandler.updateCounter($('js-social_interested'), subscriptionsList.getElements('.b-subscriptions_item').length);
										}.bind(this)
									}).start({
										height: 0
									});
								}.bind(this)
							}).start({
								opacity: 0
							});
						}
					}
					else {
						button.removeClass('js-subscribed');
					}
				}
			}
		});
	},
	updateCounter: function (el, qty) {
		if (el) {
			el.innerHTML = '(' + parseInt(qty, 10) + ' ' + utils.getPlural(parseInt(qty, 10), ['человек', 'человека', 'человек']) + ')';
		}
	}
};

domainsSelector = (function() {
    var cache = {};

    return {
        suggested_domains_errors : {},
        query_input_focused : false,

        toggleExpandBlog : function (blog_element, e) {
            e = new Event(e);
            if ($(e.target).tagName.toLowerCase() == 'a' || $(e.target).tagName.toLowerCase() == 'label' || $(e.target).tagName.toLowerCase() == 'input' || $(e.target).getParent('.b-subscribe_button')) {
                
            } else {
                blog_element.toggleClass('b-list_item__opened');
            }
        },

        selectBaseDomain : function (domain_id, expected_value, actual_value) {
            var submit_domain_el = $('js-submit_domain');
            if (expected_value != '' && actual_value != '') {
                this.showKarmaLimitError('заглавную', expected_value, actual_value);
                if (submit_domain_el) {
                    submit_domain_el.innerHTML = '';
                }
            } else {
                var found_domains_element = $('js-new_post_domain_found_domains');
                if (found_domains_element) {
                    found_domains_element.addClass('hidden');
                }
                var new_domain_element = $('js-new_post_domain');
                var selected_index_element = new_domain_element.getElement('.b-new_post_domain_selected_index');
                var selected_subdomain_element = new_domain_element.getElement('.b-new_post_domain_selected_subdomain');

                selected_index_element.removeClass('hidden');
                selected_subdomain_element.addClass('hidden');

                new_domain_element.getElement('.i-form_text_input').value = '';
                $('js-new_post_form').getElement('.js-new_post_domain_selected').value = domain_id;
                if (submit_domain_el) {
                    submit_domain_el.innerHTML = ' на <a href="/" target="_blank">заглавную</a>';
                }
            }
        },
        removeSelectedBaseDomain : function (focus_input) {
            var new_domain_element = $('js-new_post_domain');

            if (new_domain_element) {
                var selected_index_element = new_domain_element.getElement('.b-new_post_domain_selected_index');
                var selected_subdomain_element = new_domain_element.getElement('.b-new_post_domain_selected_subdomain');
                var submit_domain_el = $('js-submit_domain');

                if (selected_subdomain_element.hasClass('hidden')) {
                    new_domain_element.set('styles', {
                        'maxWidth' : new_domain_element.getSize().x + 'px'
                    });
                    new_domain_element.set('morph', {duration : 333, link : 'cancel'});
                
                    selected_subdomain_element.set('styles', {
                        'opacity' : 0
                    });
                    selected_subdomain_element.set('morph', {duration : 222, link : 'cancel'});
                
                    selected_index_element.addClass('hidden');
                    selected_subdomain_element.removeClass('hidden');
                
                    new_domain_element.morph({'maxWidth' : 1500});
                    selected_subdomain_element.morph({'opacity' : 1});
                
                    new_domain_element.getElement('.i-form_text_input').value = '';
                    if (focus_input) {
                        new_domain_element.getElement('.i-form_text_input').focus();
                    }
                    if (submit_domain_el) {
                        submit_domain_el.innerHTML = '';
                    }
                }
            }
        },
        selectDomain : function (domain_id, errors) {
            var submit_domain_el = $('js-submit_domain');
            if (errors) {
                var message = '';
                for (var i = 0, l = errors.length; i < l; i ++) {
                    message += localMessages.getErrorMessageByErrorCode(errors[i].code, '/create/post/', errors[i]);
                }
                if (message != '') {
                    new futuAlert(message, false);
                }
                $('js-new_post_domain').getElement('.i-form_text_input').value = '';
                if (submit_domain_el) {
                    submit_domain_el.innerHTML = '';
                }
            } else {
                var domain = domain_id instanceof Object ? domain_id : cache[domain_id];
                var domain_name_part = domain.url.split('.')[0];
                domainsSelector.removeSelectedBaseDomain();
                var new_domain_element = $('js-new_post_domain') || $('js-search_settings_domains');
                new_domain_element.getElement('.i-form_text_input').value = domain_name_part;
                if (submit_domain_el) {
                    submit_domain_el.innerHTML = ' на <a href="//' + domain.url + '" target="_blank">' + domain_name_part+ '</a>';
                }
                if ($('js-new_post_form')) {
                    $('js-new_post_form').getElement('.js-new_post_domain_selected').value = domain_id;
                    if ($('js-domain_in_selector_' + domain_id)) {
                        ajaxHandler.highlightField($('js-domain_in_selector_' + domain_id), 1, 0.5, 'opacity');
                    }

                    var hint = $('js-new_post_domain_control').getElement('.b-new_post_hint');

                    if (domain.attributes.post_hint) {
                        hint.removeClass('hidden').set('html', domain.attributes.post_hint);
                    }
                    else {
                        hint.addClass('hidden').set('html', '');
                    }
                }
                else {
                    searchHandler.addDomain(domain);
                }
            }
            $('js-new_post_domain_found_domains').addClass('hidden');
        },
        selectMatchingDomain : function () {
            var new_domain_element = $('js-new_post_domain') || $('js-search_settings_domains');
            var new_domain_query_value = new_domain_element.getElement('.i-form_text_input').value.trim();
            var found_domains_element = $('js-new_post_domain_found_domains');
            var found_domain_elements = found_domains_element.getElements('a');
            for (var i = 0; i < found_domain_elements.length; i++) {
                var found_domain_element = found_domain_elements[i];
                var found_domain_element_url_part = found_domain_element.getAttribute('data-domain_url_part');
                if (new_domain_query_value == found_domain_element_url_part) {
                    found_domain_element.onclick();
                    break;
                }
            }
        },
        unSelectDomain : function () {
            $('js-new_post_domain_found_domains').addClass('hidden');
            domainsSelector.removeSelectedBaseDomain();
            var new_domain_element = $('js-new_post_domain');

            if (new_domain_element) {
                $('js-new_post_form').getElement('.js-new_post_domain_selected').value = '';

                var hint = $('js-new_post_domain_control').getElement('.b-new_post_hint');

                hint && hint.addClass('hidden').set('html', '');
            }
        },
        search_domain_timeout : null,
        onQueryInputKeyPress : function (event, domain_id, expected_value, actual_value) {
            var query_input = event.target;
            var found_domains_element = $('js-new_post_domain_found_domains');

            // prevent default for up and down
            if (event.keyCode == 38 || event.keyCode == 40) {
                var e = new Event(event);
                e.preventDefault();
            }
            if (event.keyCode < 37 || event.keyCode > 40) { //everything but arrow keys
                if (event.keyCode == 13) {
                    event.preventDefault();
                    // enter - select active domain if results opened
                    if (!found_domains_element.hasClass('hidden')) {
                        var active_element = found_domains_element.getElement('.b-new_post_domain_found_domains_selected a');
                        domainsSelector.selectDomain(active_element.getAttribute('data-domain_id'), null);
                        //eval(found_domains_element.getElement('.b-new_post_domain_found_domains_selected a').getAttribute('onclick'));
                    // enter - search domains
                    } else {
                        window.clearTimeout(domainsSelector.search_domain_timeout);
                        domainsSelector.search_domain_timeout = null;
                        domainsSelector.search_domain_timeout = window.setTimeout(domainsSelector.searchDomains, 300);
                        if (query_input.value.toLocaleLowerCase() == 'заглавную') {
                            domainsSelector.selectBaseDomain(domain_id, expected_value, actual_value);
                        }
                    }
                // escape - hide results
                } else if (event.keyCode == 27) {
                    found_domains_element.addClass('hidden');
                    domainsSelector.onQueryInputBlur();
                // tab - auto match domain if results are loaded
                } else if (event.keyCode == 9) {
                    if (!found_domains_element.hasClass('hidden')) {
                        domainsSelector.selectMatchingDomain();
                    } else {
                        window.clearTimeout(domainsSelector.search_domain_timeout);
                        domainsSelector.search_domain_timeout = null;
                        domainsSelector.search_domain_timeout = window.setTimeout(domainsSelector.searchDomains, 300);
                    }
                // everything else - search
                } else {
                    domainsSelector.unSelectDomain();
                    window.clearTimeout(domainsSelector.search_domain_timeout);
                    domainsSelector.search_domain_timeout = null;
                    domainsSelector.search_domain_timeout = window.setTimeout(domainsSelector.searchDomains, 300);
                }
            } else {
                if (!found_domains_element.hasClass('hidden')) {
                    var active_domain = found_domains_element.getElement('.b-new_post_domain_found_domains_selected');
                    var next_active_domain = active_domain;
                    // up - select previous
                    if (event.keyCode == 38) {
                        if (active_domain.getPrevious('li')) {
                            next_active_domain = active_domain.getPrevious('li');
                        } else {
                            next_active_domain = found_domains_element.getLast('li');
                        }
                    // down - select next
                    } else if (event.keyCode == 40) {
                        if (active_domain.getNext('li')) {
                            next_active_domain = active_domain.getNext('li');
                        } else {
                            next_active_domain = found_domains_element.getElement('li');
                        }
                    }
                    active_domain.removeClass('b-new_post_domain_found_domains_selected');
                    next_active_domain.addClass('b-new_post_domain_found_domains_selected');
                    domainsSelector.scrollToFocusedDomain(next_active_domain);
                } else {
                    // down - search if results are hidden
                    if (event.keyCode == 40) {
                        window.clearTimeout(domainsSelector.search_domain_timeout);
                        domainsSelector.search_domain_timeout = null;
                        domainsSelector.searchDomains();
                    }
                }
            }
        },
        scrollToFocusedDomain : function (domain_element) {
            var domains_holder = $('js-new_post_domain_found_domains');
            var domains_holder_size = domains_holder.getSize();
            domains_holder_size.y = domains_holder_size.y - 2;
            var domains_holder_scroll = domains_holder.getScroll();
            
            var domain_element_position = domain_element.getPosition(domains_holder);
            var domain_element_size = domain_element.getSize();
            
            if (domain_element_position.y < 0) {
                domains_holder.scrollTo(0, domains_holder_scroll.y + domain_element_position.y);
            }
            if (domain_element_position.y + domain_element_size.y > domains_holder_size.y) {
                
                domains_holder.scrollTo(0, domains_holder_scroll.y + domain_element_position.y - domains_holder_size.y + domain_element_size.y);
            }
        },
        onQueryInputFocus : function () {
            domainsSelector.query_input_focused = true;
        },
        onQueryInputBlur : function () {
            domainsSelector.query_input_focused = false;
            var found_domains_element = $('js-new_post_domain_found_domains');
            if (!found_domains_element.hasClass('hidden')) {
                domainsSelector.selectMatchingDomain.delay(300);
            }
        },
        searchDomains : function () {
            window.clearTimeout(domainsSelector.search_domain_timeout);
            domainsSelector.search_domain_timeout = null;
            
            var query_input = ($('js-new_post_domain') || $('js-search_settings_domains')).getElement('.i-form_text_input');
            var data = 'query=' + query_input.value;
            
            if (query_input.value.length > 1) {
                new futuAjax({
                    button : query_input,
                    attribute : 'opacity',
                    color_to : 1,
                    color_from : 1,
                    url : ajaxUrls.search_domains_hostname,
                    data : data,
                    onLoadFunction : function (response) {
                        response.domains.each(function(domain) {
                            cache[domain.id] = domain;
                        });

                        domainsSelector.showFoundDomains(response.domains);
                        if (!domainsSelector.query_input_focused) {
                            domainsSelector.selectMatchingDomain();
                        }
                    }
                });
            }
        },
        showFoundDomains : function (domains) {
            var found_domains_element = $('js-new_post_domain_found_domains');
            var search_input_coordinates = ($$('.b-new_post_domain_selected_subdomain')[0] || $('js-search_settings_domains').getElement('input')).getCoordinates();
            found_domains_element.set('styles', {
                'top' : search_input_coordinates.top + search_input_coordinates.height - 2,
                'left' : search_input_coordinates.left
            });
            found_domains_element.inject(document.body);
            
            if (domains && domains.length > 0) {
                found_domains_element.removeClass('hidden');
                var iHTML = '';
                for (var i = 0; i < domains.length; i++) {
                    var domain = domains[i];
                    var domain_url_part = domain.url.split('.')[0];
                    var domain_name = null;
                    var errors = false;
                    var error;

                    if (domain.title && domain.title.length > 0) {
                        domain_name = domain.title;
                    } else if (domain.name && domain.name.length > 0) {
                        domain_name = domain.name;
                    }

                    if (domain.create_post_validation_error) {
                        errors = [];
                        for (var k in domain.create_post_validation_error) {
                            if (domain.create_post_validation_error.hasOwnProperty(k)) {
                                error = domain.create_post_validation_error[k];
                                error['domain'] = domain.url;
                                errors.push(error)
                            }
                        }
                        errors = JSON.encode(errors);
                    }
                    iHTML += '<li><a href="#" data-domain_id="{domain_id}" onclick=\'domainsSelector.selectDomain("{domain_id}", {errors}); return false;\'><span>{domain_url}</span>{domain_name}</a></li>'.substitute({
                        domain_id : domain.id,
                        domain_url : domain.url,
                        domain_url_part : domain.url.split('.')[0],
                        domain_name : domain_name ? '<br>' + domain_name : '',
                        errors: errors
                    });
                }
                found_domains_element.innerHTML = iHTML;
                found_domains_element.getElement('li').addClass('b-new_post_domain_found_domains_selected');
            } else {
                found_domains_element.addClass('hidden');
                found_domains_element.innerHTML = '';
            }
        },
        showKarmaLimitError: function(domain, expected_value, actual_value) {
            new futuAlert('Для того чтобы написать пост на&nbsp;{domain}, нужна карма выше {expected}, а у вас она {actual}.'.substitute({
                domain: domain,
                expected: expected_value,
                actual: actual_value
            }));
        }
    };
})();

navThingHandler = {
	navthing_element : null,
	active_tab_element : null,
	navthing_element_morph : false,
	navthing_hide_timer : null,
	navthing_domains : false,
	initThing : function () {
		navThingHandler.tabs = [
			{
				tabRenderer : navThingHandler.renderImgView,
				class_name : 'js-navthing_pics',
				mode : 'pics'
			},
			{ 
				tabRenderer : navThingHandler.renderTextView,
				class_name : 'js-navthing_text',
				mode : 'text'
			},
			{ 
				tabRenderer : navThingHandler.renderFullView,
				class_name : 'js-navthing_both',
				mode : 'both'
			}
		];
		navThingHandler.navthing_element = $('js-navthing');
		navThingHandler.active_tab_element = $('js-navthing_active_tab');
		navThingHandler.navthing_element_morph = new Fx.Morph(navThingHandler.navthing_element, {
			duration : 111,
			link : 'cancel'
		});
		$('js-navthing_active_tab').set('morph', {
			duration:111
		});
		navThingHandler.navthing_element.getElement('.b-navthing_both_button_left').addEvent('click', function (e) {
			e = new Event(e);
			e.preventDefault();
			navThingHandler.fullViewGoLeft();
		});
		navThingHandler.navthing_element.getElement('.b-navthing_both_button_right').addEvent('click', function (e) {
			e = new Event(e);
			e.preventDefault();
			navThingHandler.fullViewGoRight();
		});
	},
	showThing : function () {
		if (navThingHandler.navthing_domains) {
			$clear(navThingHandler.navthing_hide_timer);
			if (!navThingHandler.navthing_element.hasClass('js-navthing_opened')) {
				var navthing_holder_width = $('js-navthing_holder').getSize().x;
				var navthing_visible_width = navthing_holder_width * 0.25;
				var navthing_dx = 698 - navthing_visible_width;
				navThingHandler.navthing_element.set('styles', {
					'width' : navthing_visible_width
				});
				navThingHandler.navthing_element_morph.start({
					width : 698
				}).chain(function () {
					this.start({
						top : 0
					}).chain(function () {
						navThingHandler.setTab();
						navThingHandler.navthing_element.addClass('js-navthing_opened');
						$('js-navthing_active_tab').morph({
							opacity : 1
						});
					});
				});
			}
		} else {
			navThingHandler.loadDomains();
		}
	},
	hideThing : function () {
		$clear(navThingHandler.navthing_hide_timer);
		if (navThingHandler.navthing_element.hasClass('js-navthing_opened')) {
			navThingHandler.navthing_hide_timer = window.setTimeout(function () {
				navThingHandler.navthing_element.removeClass('js-navthing_opened');
				var navthing_holder_width = $('js-navthing_holder').getSize().x;
				var navthing_visible_width = navthing_holder_width * 0.25;
				$('js-navthing_active_tab').get('morph').start({
					opacity : 0
				}).chain(function () {
					navThingHandler.navthing_element_morph.start({
						top : -351
					}).chain(function () {
						this.start({
							width : navthing_visible_width
						}).chain(function () {
							navThingHandler.navthing_element.set('styles', {
								'width' : '25%'
							});
						});
					});
				});
			}, 300);
		}
	},
	dontHideThing : function () {
		$clear(navThingHandler.navthing_hide_timer);
	},
	
	full_view_page : 0,
	full_view_page_col : 0,
	fullViewGoLeft : function () {
		if (navThingHandler.full_view_page > 0) {
			var left = -(--navThingHandler.full_view_page*305);
			navThingHandler.navthing_element.getElement('.b-navthing_tab_both table').morph({'left': left});
		}
	},
	fullViewGoRight : function () {
		if (navThingHandler.full_view_page < navThingHandler.full_view_page_col - 2) {
			var left = -(++navThingHandler.full_view_page*305);
			navThingHandler.navthing_element.getElement('.b-navthing_tab_both table').morph({'left': left});
		}
	},
	setTab : function (active_tab_class_name) {
		var active_tab_index = 0;
		if (active_tab_class_name) {
			for (var i = 0; i < navThingHandler.tabs.length; i++) {
				if (active_tab_class_name == navThingHandler.tabs[i].class_name) {
					active_tab_index = i;
				}
				navThingHandler.navthing_element.removeClass(navThingHandler.tabs[i].class_name);
			}
			navThingHandler.saveActiveTab(active_tab_index);
		} else {
			for (var i = 0; i < navThingHandler.tabs.length; i++) {
				if (navThingHandler.navthing_element.hasClass(navThingHandler.tabs[i].class_name)) {
					active_tab_index = i;
					active_tab_class_name = navThingHandler.tabs[i].class_name;
					break;
				}
			}
		}
		navThingHandler.navthing_element.addClass(active_tab_class_name);
		navThingHandler.tabs[active_tab_index].tabRenderer();
	},
	saveActiveTab : function (active_tab_index) {
		var mode = navThingHandler.tabs[active_tab_index].mode;
		var button = navThingHandler.navthing_element.getElement('.b-navthing_tabs_navigation_menu_' + mode);
		var url = ajaxUrls.navthing_mode;
		var data = 'mode=' + mode;
		
		new futuAjax({
			button : $(button),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url : url,
			data : data,
			onLoadFunction : function (response) {
				
			}
		});
	},
	renderFullView : function () {
		if (!navThingHandler.navthing_element.getElement('.b-navthing_tab_both')) {
			var pages_col = Math.ceil(navThingHandler.navthing_domains.length / 3);
			navThingHandler.full_view_page_col = pages_col;
			var div = new Element('div', {
				'class' : 'b-navthing_tab b-navthing_tab_both',
				'html' : '<table><tbody><tr><td></td></tr></tbody></table>'
			});
			var td = div.getElement('td');
			var tr = td.getParent('tr');
			var tbl = tr.getParent('table');
			var td_HTML = '';
			
			navThingHandler.navthing_domains.each(function (domain, i) {
				var domain_template = '<div class="b-navthing_tab_both_sub">\
					<a class="b-navthing_tab_both_logo" href="{domain_url}/" title="{domain_title}" style="background-image:url({domain_logo});"></a>\
					<!-- BACKEND \
					<span class="b-navthing_tab_both_lock"></span>\
					-->\
					<h5 title="{domain_title}">{domain_title}</h5>\
					<a href="{domain_url}" class="b-navthing_tab_both_link">{domain_url_host}</a>\
					<div class="b-navthing_tab_both_creator">{domain_creator}</div>\
				</div>';
			
				td_HTML += domain_template.substitute({
					domain_url : domain.url,
					domain_url_host : (new URI(domain.url)).parsed.host,
					domain_title : domain.title,
					domain_logo : domain.logo,
					domain_creator : domain.creator
				});
			
				if (i + 1 == navThingHandler.navthing_domains.length) {
					td.innerHTML = td_HTML;
					td_HTML = '';
				} else if ((i + 1) % 3 == 0) {
					td.innerHTML = td_HTML;
					td_HTML = '';
					td = new Element('td');
					td.inject(tr);
				}
			});
		
			if (pages_col < 3) {
				navThingHandler.navthing_element.getElements('.b-navthing_both_button_left, .b-navthing_both_button_right').set({'styles' : {'display':'none'}});
			} else {
				tbl.set('morph', {duration: 333, link:'cancel'});
			}
		
			div.inject(navThingHandler.active_tab_element);
		}
	},
	renderImgView : function () {
		if (!navThingHandler.navthing_element.getElement('.b-navthing_tab_pics')) {
			var div = new Element('div', {'class':'b-navthing_tab b-navthing_tab_pics'});
			var domain_template = '<a class="b-navthing_tab_pics_logo" href="{domain_url}" title="{domain_title}" style="background-image:url({domain_logo});"></a>\
				<!-- BACKEND \
				<span class="b-navthing_both_sub_lock"></span>\
				-->\
			</div>';
		
			var div_HTML = '';
			navThingHandler.navthing_domains.each(function (domain, i) {
				div_HTML += domain_template.substitute({
					domain_url : domain.url,
					domain_title : domain.title,
					domain_logo : domain.logo
				});
			});
			div.innerHTML = div_HTML;
		
			div.inject(navThingHandler.active_tab_element);
		}
	},
	renderTextView : function () {
		if (!navThingHandler.navthing_element.getElement('.b-navthing_tab_text')) {
			var div = new Element('div', {'class':'b-navthing_tab b-navthing_tab_text'});
			var domain_template = '<a class="b-navthing_tab_text_link" href="{domain_url}" title="{domain_title}">{domain_url_part}</a>\
				<!-- BACKEND \
				<span class="b-navthing_both_sub_lock"></span>\
				-->\
			</div>';
		
			var div_HTML = '';
			navThingHandler.navthing_domains.each(function (domain, i) {
				div_HTML += domain_template.substitute({
					domain_url : domain.url,
					domain_url_part : (new URI(domain.url)).parsed.host.split('.')[0],
					domain_title : domain.title
				});
			});
			div.innerHTML = div_HTML;
		
			div.inject(navThingHandler.active_tab_element);
		}
	},
	loadDomains : function () {
		var url = ajaxUrls.navthing_domains_list;
		var data = '';
		
		new futuAjax({
			button : $('js-navthing').getElement('.b-navthing_toggle'),
			color_to : '0.8',
			color_from : '1',
			attribute : 'opacity',
			url : url,
			data : data,
			onLoadFunction : function (response) {
				navThingHandler.navthing_domains = [];
				for (var i = 0, l = response.domains.length; i < l; i++) {
					var domain = response.domains[i];
					var domain_title = domain.attributes.title ? domain.attributes.title : domain.url;
					var domain_logo = domain.attributes.logo ? domain.attributes.logo : '/static/i/0.gif';
					
					var domain_creator_url = globals.base_domain ? globals.base_domain.url : '';
					domain_creator_url += '/users/' + domain.owner.login;
					
					var domain_creator = domain.owner.gender == 'female' ? 'создательница' : 'создатель';
					domain_creator += ' &#151; ' + '<a href="' + domain_creator_url + '">' + domain.owner.login + '</a>';
					
					navThingHandler.navthing_domains.push({
						url : '//' + domain.url,
						title : domain_title,
						logo : domain_logo,
						creator : domain_creator
					});
				}
				navThingHandler.showThing();
			}
		});
	},
	setDomain : function (checkbox, domain_id) {
		var switch_position = 'delete';
		if (checkbox.checked) {
			switch_position = 'add';
		}
		var url = ajaxUrls.getNavthingUrl('domain', switch_position);
		var data = 'domain=' + domain_id;
		
		new futuAjax({
			button : $(checkbox),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url : url,
			data : data,
			onLoadFunction : function (response) {
				navThingHandler.full_view_page = 0;
				navThingHandler.full_view_page_col = 0;
				navThingHandler.navthing_element.getElements('.b-navthing_tab_text').destroy();
				navThingHandler.navthing_element.getElements('.b-navthing_tab_pics').destroy();
				navThingHandler.navthing_element.getElements('.b-navthing_tab_both').destroy();
				navThingHandler.navthing_domains = false;
			}
		});
	}
};

subscriptionsHandler = {
	renderPage : function () {
		if (globals.uri_directory[1] == 'search') {
			if (globals.uri_query.query.trim().length == 0) {
				$$('.b-underground_nav a[href="/underground/subscribers/"]')[0].click();
				return false;
			}
		}
		subscriptionsHandler.renderModeNavigation();
		subscriptionsHandler.renderSortNavigation();
		subscriptionsHandler.renderContent();
		subscriptionsHandler.loadData();
		iconsHandler.update();
	},
	renderModeNavigation : function () {
		var navigation_element = $$('.b-underground_nav')[0];
		var buttons = $$('.b-underground_nav_mode a[href="' + globals.uri_directory_to_string + '"]');
		if (buttons.length > 0) {
			modeNavigationHandler.selectItem(buttons[0]);
		} else {
			var first_button_element = $$('.b-underground_nav_mode a[href="/' + globals.uri_directory[0] + '/"]')[0];
			modeNavigationHandler.selectItem(first_button_element);
		}
	},
	renderSortNavigation : function () {
		var navigation_element = $$('.b-underground_nav')[0];
		var buttons = $$('.b-underground_nav_sort a[href="' + globals.uri_directory_to_string + '"]');
		if (globals.uri_directory[1] && globals.uri_directory[1] == 'subscribed') {
			$$('.b-underground_nav_sort').addClass('vis_hidden');
		}
		else {
			if (buttons.length > 0) {
				sortNavigationHandler.selectItem(buttons[0]);
			} else {
				sortNavigationHandler.deselectAllItems(navigation_element);
			}
			$$('.b-underground_nav_sort').removeClass('vis_hidden');
		}


	},
	renderContent : function () {
		$A($$('*[data-navigation_id]')).each(function (page_section_element) {
			var section_navigation_id = page_section_element.getAttribute('data-navigation_id');
			var section_only_on_index = page_section_element.getAttribute('data-navigation_index_only');
			
			var new_navigation_id = globals.uri_directory.join('_');
			
			if (section_only_on_index) {
				if (section_navigation_id == new_navigation_id) {
					page_section_element.removeClass('hidden');
				} else {
					page_section_element.addClass('hidden');
				}
			} else {
				for (var i = 0; i < globals.uri_directory.length; i++) {
					var new_navigation_id = '';
					for (var j = 0; j <= i; j++) {
						if (j > 0) {
							new_navigation_id += '_';
						}
						new_navigation_id += globals.uri_directory[j];
						
						if (section_navigation_id == new_navigation_id) {
							page_section_element.removeClass('hidden');
							break;
						} else {
							page_section_element.addClass('hidden');
						}
					}
				}
			}
		});
	},
	loadData : function () {
		if (globals.uri_directory[0] == 'underground') {
			subscriptionsHandler.loadDomains(false);
		}
	},
	loadDomains : function (load_more_element) {
		var load_more = false;
		var navigation_id = globals.uri_directory.slice(0, 2).join('_');
		if (load_more_element) {
			load_more = true;
		} else {
			load_more_element = $$('*[data-navigation_id="' + navigation_id + '"] .b-blogs_list')[0];
		}
		if (load_more_element) {
			var load_domains_params = {load_more : load_more};
			if (globals.uri_directory[1] == 'subscribed') {
				load_domains_params.sort = 'subscribed';
			} else if (globals.uri_directory[1] == 'new') {
				load_domains_params.sort = 'new';
			} else if (globals.uri_directory[1] == 'random') {
				load_domains_params.sort = 'random';
			} else if (globals.uri_directory[1] == 'tag') {
				load_domains_params.sort = 'tag';
			} else if (globals.uri_directory[1] == 'search') {
				load_domains_params.search = globals.uri_query.query;
			} else if (globals.uri_directory[1] == 'active') {
				load_domains_params.sort = 'active';
			} else {
				load_domains_params.sort = 'top';
			}
			if (globals.uri_directory[2] == 'asc') {
				load_domains_params.asc = true;
			}
			moreHandler.loadDomains(load_more_element, load_domains_params);
		} else {
			new futuAlert('Список не найден.');
		}
		
	},
	ignoreUserByLogin : function (form) {
		var input_element = $(form).getElement('input[name="users"]');
		if (input_element.value.trim().length > 0) {
			var data = $(form).toQueryString();
			//var list_element = form.getParent('.l-subscription_list').getElement('.b-users_list');
			new futuAjax({
				button : $(input_element),
				color_to : 0.5,
				color_from : 1,
				attribute : 'opacity',
				url : ajaxUrls.users_ignore,
				data : data,
				onLoadFunction : function (response) {
					var ulEl = $('js-ignored_users_list');
					for (var i = 0; i < response.users.length; i++) {
						var user = response.users[i];
						if (!$('js-ignored_user_' + user.id)) {
							var user_element = new Element('li', {
								html : '<input type="checkbox" class="i-checkbox" value="{user_login}" autocomplete="off" /> <a href="/users/{user_login}" target="_blank">{user_login}</a>'.substitute({
									user_login : user.login,
									user_id : user.id
								}),
								'id': 'js-ignored_user_' + user.id
							});
							user_element.inject(ulEl);
						}
					}
					if (ulEl.getElements('li').length > 0) {
						$('js-remove_from_users_ignored_list').removeClass('hidden');
						$('js-ignore_users_list_subtitle').innerHTML = 'Вот кто у вас в списке:';
					}
					form.reset();
				}
			});
		} else {
			ajaxHandler.highlightField(input_element);
		}
	},
	expelUsersFromList: function () {
		var url = ajaxUrls.getSubscriptionUrl('users', 'unignore'),
			listEl = $('js-ignored_users_list'),
			checkboxes = listEl.getElements('.i-checkbox:checked'),
			users = '',
			data;

		checkboxes.each(function (item) {
			if (users.length > 0) {
				users += ', ';
			}
			users += item.value;
		});

		if (users.length > 0) {
			data = 'users=' + users;
			new futuAjax({
				button : $('js-remove_from_users_ignored_list'),
				color_to : 0.5,
				color_from : 1,
				attribute : 'opacity',
				url : url,
				data : data,
				onLoadFunction : function (response) {
					checkboxes.each(function (item) {
						item.getParent('li').destroy();
					});
					var items = listEl.getElements('li');
					if (items.length == 0) {
						$('js-remove_from_users__ignored_list').addClass('hidden');
						$('js-ignore_users_list_subtitle').innerHTML = '';
					}
				}
			});
		}
	},
	unignoreDomain: function (button, domain_id) {
		var url = ajaxUrls.getSubscriptionUrl('domains', 'unignore');
		
		var domain_element = $('js-ignored_domain_' + domain_id);

		new futuAjax({
			button : $(button),
			color_to : 0.5,
			color_from : 1,
			attribute : 'opacity',
			url : url,
			data : 'domain=' + domain_id,
			onLoadFunction : function (response) {
				domain_element.set('styles', {
					height : domain_element.offsetHeight + 'px',
					overflow : 'hidden'
				});
				domain_element.set('morph', {
					duration : 333,
					onComplete : function () {
						domain_element.destroy();
					}
				});
				domain_element.morph({
					height : 0,
					marginBottom : 0
				});
			}
		});
	},
	subscribeRandom: function(button) {
		new futuAjax({
			button : button,
			attribute : 'opacity',
			color_to : 1,
			color_from : .5,
			url : ajaxUrls.feeds_random_subscribing,
			data : '',
			onLoadFunction : function (response) {
				button.addClass('subscribed');
				$$('.b-underground_nav_mode a[href="/underground/subscribed/"] span').set('text', response.subscribed_domains_count);
			}
		});
	}
};

modeNavigationHandler = {
	selectItem : function (button_element) {
		var navigation_element = button_element.getParent('.b-underground_nav_mode');
		var item_element = button_element.getParent();
		var active_item_element = navigation_element.getElement('.active');

		if (!item_element.hasClass('active')) {
			if (active_item_element) {
				active_item_element.removeClass('active');
			}
			item_element.addClass('active');
		}
	}
};

sortNavigationHandler = {
	selectItem : function (button_element) {
		var navigation_element = button_element.getParent('.b-underground_nav_sort');
		var item_element = button_element.getParent();
		var active_item_element = navigation_element.getElement('.active');

		if (!item_element.hasClass('active')) {
			if (active_item_element) {
				active_item_element.removeClass('active');
			}
			item_element.addClass('active');
		}
	},
	deselectAllItems : function (navigation_element) {
		navigation_element.getElements('.active').removeClass('active');
	}
};

URIHandler = {
	navigation_delay_timeout : null,
	navigateToPage : function (button_element, replace, scroll_to_top) {
		if (!URIHandler.navigation_delay_timeout) {
			URIHandler.navigation_delay_timeout = setTimeout(function () {
				clearTimeout(URIHandler.navigation_delay_timeout);
				URIHandler.navigation_delay_timeout = null;
				URIHandler.parseURI(button_element);
				URIHandler.renderPage();
				globals.first_load = false;
			}, 200);
		}
		if (window.history && history.pushState) {
			if (button_element) {
				var href = null;
				if (button_element.tagName.toLowerCase() == 'form') {
					href = button_element.action + '?' + $(button_element).toQueryString();
				} else {
					href = button_element.href;
				}
				if (href) {
					if (replace) {
						history.replaceState('', button_element.textContent, href);
					} else {
						history.pushState('', button_element.textContent, href);
					}
				}
			}
			return false;
		} else {
			return true;
		}
	},
	parseURI : function (button_element) {
		var uri = null;
		var href = null;
		if (button_element) {
			if (button_element.tagName.toLowerCase() == 'form') {
				href = button_element.action + '?' + $(button_element).toQueryString();
			} else {
				href = button_element.href;
			}
			if (href) {
				uri = new URI(href);
			}
		} else {
			uri = new URI(document.location.href);
		}

		var uri_directory = [];
		if (uri.parsed.directory != '/') {
			uri_directory = uri.parsed.directory.substr(1, uri.parsed.directory.length - 2).split('/');
		}
		if (uri.parsed.file.length > 0) {
			uri_directory.push(uri.parsed.file);
		}
		globals.uri_directory = uri_directory;
		globals.uri_directory_to_string = uri.parsed.directory;
		globals.uri_directory_to_string += (uri.parsed.file.length > 0) ? uri.parsed.file + '/' : '';

		globals.uri_query = uri.getData();
	},
	renderPage : function () {
		if (globals.uri_directory.length > 0) {
			switch (globals.uri_directory[0]) {
				case 'underground':
					subscriptionsHandler.renderPage();
					break;
				case 'users':
					profileNavigationHandler.renderPage();
					break;
				case 'democracy':
					promoHandler.renderPage();
					break;
				default:
			}
		}
	},
    createURI: function(params) {
    	var string = params instanceof Object ? Object.toQueryString(params) : params;

        return location.origin + location.pathname + (string ? '?' + string : '');
    }
};
chatHandler = {
	size : 400,
	opened : false,
	loading : false,
	loadingInterval : null,
	sending : false,
	sendingInterval : null,
	chatHolderFx : false,
	chatMessageFx : false,
	chatResizerDrag : false,
	waitToSend : false,
	firstOpening : true,
	open : function ()  {
		keypress.stop_listening();
		if (Browser.Engine.trident && Browser.Engine.version < 5) {
			if ($('post_status')) {
				$('post_status').setStyle('visibility','hidden');
			}
		}
		$('chat').removeClass('hidden');
		new Fx.Morph($('chat'), {
			duration: 300
		}).start({
			'margin-top':0
		});
		$('js-chat_send_message_holder').set('morph', {'duration':300});
		chatHandler.opened = true;
		$('js-chat_input').focus();
		chatHandler.load();
		if (!chatHandler.chatResizerDrag) {
			chatHandler.chatResizerDrag = new Drag($('js-chat_resizer'), {
				'style':true,
				modifiers: {x: false, y: false},
				onDrag:function () {
					$('js-chat_messages_overflow_holder').style.height = chatHandler.size - this.mouse.start.y + this.mouse.now.y + 'px';
				},
				onComplete:function() {
					chatHandler.size = chatHandler.size - this.mouse.start.y + this.mouse.now.y;
				}
			});
		}
	},
	close : function () {
		keypress.listen();
		new Fx.Morph($('chat'), {
			duration: 300,
			onComplete: function () {
				$('chat').addClass('hidden');
				chatHandler.opened = false;
				if (Browser.Engine.trident && Browser.Engine.version < 5) {
					if ($('post_status')) {
						$('post_status').setStyle('visibility','visible');
					}
				}
			}
		}).start({
			'margin-top': -chatHandler.size - 32
		});
		$clear(chatHandler.loadingInterval);
		chatHandler.firstOpening = true;
	},
	draw : function (response) {
		if ($('js-chat_messages_overflow_holder').getScrollSize().y - chatHandler.size - $('js-chat_messages_overflow_holder').getScroll().y > 10) {
			var scroll = false;
		} else {
			var scroll = true;
		}
		var messages = response.messages;
		for (var i = 0, l = messages.length; i < l; i++) {
			var message = messages[i];
			if (message.body.lastIndexOf(chatHandler.username + ':') == 0) {
				if (chatHandler.username == 'artimage') {
					var newMessage = new Element('div', {'class':'message message_to_artimage', 'id':'chat_message_'+message.id});
				} else {
					var newMessage = new Element('div', {'class':'message message_to_me', 'id':'chat_message_'+message.id});
				}

			} else {
				var newMessage = new Element('div', {'class':'message', 'id':'chat_message_'+message.id});
			}

			var iHTML = '';

			if (message.user.login == chatHandler.username) {
				newMessage.style.color = '#FFF';
				var color = '#FFFFFF';
				iHTML += '[<span class="js-date js-date-regular-time" data-epoch_date="' + message.created + '"></span>] <span class="user_name" style="color:'+ color +';">';
				iHTML += '<a style="color:'+ color +';" href="' + globals.parent_site + '/users/'+ message.user.login +'" onclick="chatHandler.answerName(this); return false;">'+ message.user.login +'</a>';
			} else {
				iHTML += '[<span class="js-date js-date-regular-time" data-epoch_date="' + message.created + '"></span>] <span class="user_name">';
				iHTML += '<a href="' + globals.parent_site + '/users/'+ message.user.login +'" onclick="chatHandler.answerName(this); return false;">'+ message.user.login +'</a>';
			}
			iHTML += '&gt;</span>&nbsp;' + message.body;
			newMessage.innerHTML = iHTML;
			newMessage.inject($('js-chat_messages_holder'));
			datesHandler.setDates();
			if (i == l - 1) {
				$('js-chat_last').value = message.id;
			}
		}
		if (scroll || chatHandler.firstOpening) {
			var myChatScrollFx = new Fx.Scroll($('js-chat_messages_overflow_holder')).toBottom();
		}
		chatHandler.firstOpening = false;
	},
	load : function () {
		if (!chatHandler.loading) {
			chatHandler.loading = true;
			var data = 'last_message_id=' + $('js-chat_last').value;
			new futuAjax({
				button : $('js-chat_input'),
				color_to : '1',
				color_from : '1',
				attribute : 'opacity',
				url : ajaxUrls.chat_load,
				data : data,
				onLoadFunction : function (response) {
					chatHandler.loading = false;
					$('js-chat_messages_overflow_holder').removeClass('loading_messages');
					if (response) {
						chatHandler.draw(response);
					}
					if (!chatHandler.waitToSend) {
						chatHandler.loadingInterval = (function () {chatHandler.load()}).delay(10000);
					} else {
						chatHandler.send();
					}
				}
			});
		}
	},
	validateMessage : function () {
		if ($('js-chat_input').value.length > 255) {
			new futuAlert('Сообщение в чате не может быть длиннее 255 символов.');
			return false;
		}
		return true;
	},
	send : function () {
		if (chatHandler.validateMessage()) {
			if (!chatHandler.sending) {
				if (!chatHandler.waitToSend) {
					$clear(chatHandler.loadingInterval);
					$('js-chat_send_message_holder').morph({'height':0});
					$('js-chat_input').addClass('sending_message');
					$('js-chat_input').set({'readonly':'readonly'});
				}
				var data = $('js-chat_send_message_form').toQueryString();
				if (!chatHandler.loading) {
					chatHandler.sending = true;
					chatHandler.loading = true;
					new futuAjax({
						button : $('js-chat_input'),
						color_to : '1',
						color_from : '1',
						attribute : 'opacity',
						url : ajaxUrls.chat_add,
						data : data,
						onLoadFunction : function () {
							chatHandler.waitToSend = false;
							chatHandler.sending = false;
							chatHandler.loading = false;
							$('js-chat_send_message_holder').morph({'height':32});
							$('js-chat_input').removeClass('sending_message');
							$('js-chat_input').set({'readonly':''});
							$('js-chat_input').value = '';
							chatHandler.load();
						}
					});
				} else {
					chatHandler.waitToSend = true;
					chatHandler.sending = false;
				}
			} else {

			}
		}
	},
	answerName : function (button) {
		$('js-chat_input').value = button.innerHTML + ': ' + $('js-chat_input').value;
		$('js-chat_input').focus();
	}
};

var checkboxList = new Class({
	lastInput: null,
	startInput: null,
	startInputPos: null,
	posY: null,

	initialize: function (list) {
		this.list = list;

		// Выделение чекбоксов в списке по событию клика
		this.list.addEvent('click', function (event) {
			var items = this.list.getElements('li'),
				checkboxes = [],
				checkbox;
			items.each(function (item) {
				if (!item.hasClass('b-user_not_expelable')) {
					checkbox = item.getElement('input[type=checkbox]');
					if (checkboxes) {
						checkboxes.push(checkbox);
					}
				}
			});
			if (event.target.type == 'checkbox') {
				if (!this.lastInput) {
					this.lastInput = event.target;
				}
				// Если зажата клавиша shift всем чекбоксам,
				// находящимся между двумя чекбоксами проставляется состояние последнего нажатого чекбокса
				if (event.shift) {
					var chbx1 = checkboxes.indexOf(event.target);
					var chbx2 = checkboxes.indexOf(this.lastInput);
					var start = Math.min(chbx1, chbx2);
					var end = Math.max(chbx1, chbx2);

					checkboxes.each(function (item, i) {
						if (i >= start && i <= end) {
							item.set('checked', event.target.checked);
						}
					});
				}
				if (event.target.type == 'checkbox') {
					this.lastInput = event.target;
				}
			}
		}.bind(this));

		// Выделение чекбоксов в списке при зажатой мышке
		var drag = new Drag(this.list, {
			snap: 0,
			onDrag: function(el, event) {
				var target,
					mousePos,
					start,
					end,
					itemPos;

				if (event.target.type == 'checkbox') {
					target = event.target;

					if (this.startInput) {
						if (!target.hasClass('js-mouse_over') && target != this.startInput) {
							target.addClass('js-mouse_over');
						}
						mousePos = event.page.y;
						start = Math.min(mousePos, this.startInputPos);
						end = Math.max(mousePos, this.startInputPos);

						// Всем чекбоксам, которые находятся в интервале между чекбоксом, с которого началось событие
						// и текущим положением мышки, проставляется состояние первого чекбокса.
						// Остальные чекбоксы, которые попадали в зону "выделения" (им проставлен класс js-mouse_over),
						// но больше не входят в нее проставляется противоположное состояние
						drag.checkboxes.each(function (item) {
							if (item != this.startInput) {
								itemPos = item.getPosition().y;
								if (this.posY > mousePos) {
									itemPos += item.getCoordinates().height;
								}
								if (itemPos >= start && itemPos < end) {
									item.set('checked', this.startInput.checked);
								} else if(item.hasClass('js-mouse_over')) {
									item
										.removeClass('js-mouse_over')
										.set('checked', !this.startInput.checked);
								}
							}
						}.bind(this));
					}
				}
			}.bind(this),
			onComplete: function(el, event) {
				$$('.js-mouse_over').each(function (item) {
					item.removeClass('js-mouse_over');
				});
			},
			onStart: function (el, event) {
				drag.checkboxes = this.list.getElements('input[type=checkbox]');
				if (event.target.type == 'checkbox') {
					this.posY = event.page.y;
					this.startInput = event.target;
					this.startInputPos = event.target.getPosition().y;
					this.startInput.set('checked', !this.startInput.checked);
				} else {
					this.startInput = null;
					this.startInputPos = null;
				}
			}.bind(this)
		});
	}
});


pressHandler = {
	initForm : function () {
		$('js-press_secretary_new_twit').getElement('textarea').onkeydown = function (e) {
			if (!e) e = window.event;
            if ((e.metaKey || e.ctrlKey) && e.keyCode == 13) {
                pressHandler.twit();
            } else if (e.keyCode == 27) {
				pressHandler.toggle();
			}
		};
	},
	toggle : function () {
		var form = $('js-press_secretary_new_twit');
		form.set('morph', {duration : 222});
		if (form.hasClass('js-press_opened')) {
			form.removeClass('js-press_opened');
			form.morph({'top':-225});
			$(document.body).removeEvents('click');
		} else {
			form.addClass('js-press_opened');
			form.morph({'top':105});
			
			(function () {
				$(document.body).addEvent('click', function () {
					pressHandler.toggle();
				});
				form.getElement('textarea').focus();
			}).delay(200);
		}
	},
	twit : function () {
		if (pressHandler.checkTwitLength()) {
			var form = $('js-press_secretary_new_twit');
			var data = form.getElement('form').toQueryString();
			
			new futuAjax({
				button : form.getElement('.b-new_press_submit'),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.press_secretary_shout,
				data : data,
				onLoadFunction : function (response) {
					form.getElement('textarea').value = '';
					form.getElement('.b-new_press_counter').innerHTML = '&laquo;280&raquo;';
					pressHandler.toggle();
				}
			});
		}
	},
	checkTwitLength : function () {
		var twit_length = $('js-press_secretary_new_twit').getElement('textarea').value.length;
		var press_twit_counter_element = $('js-press_secretary_new_twit').getElement('.b-new_press_counter');
		press_twit_counter_element.innerHTML = '&laquo;' + (280 - twit_length) + '&raquo';
		if (twit_length > 280) {
			press_twit_counter_element.style.color = 'red';
			press_twit_counter_element.style.fontWeight = 'bold';
		} else {
			press_twit_counter_element.style.color = 'black';
			press_twit_counter_element.style.fontWeight = 'normal';
		}
		if (twit_length > 280 || twit_length == 0) {
			return false;
		} else {
			return true;
		}
	}
};

var popupHandler = (function() {
    var cache = {};

    return {
        holder: null,
        hideTimeout: null,
        showTimeout: null,
        karma: undefined,

        showPopup: function(target, popup) {
            var position = target.getPosition(), labelSize = target.getSize(), size, id;

            this.holder
                .addClass('hidden')
                .empty()
                .appendHTML(popup)
                .removeClass('hidden')
                .setStyle('visibility', 'hidden');

            size = this.holder.getSize();

            this.holder
                .setPosition({
                    x: position.x + size.x > window.getScroll().x + window.getSize().x ? window.getScroll().x + window.getSize().x - size.x : position.x,
                    y: window.getScroll().y + window.getSize().y > position.y + labelSize.y + size.y ? position.y + labelSize.y : position.y - size.y
                })
                .setStyle('visibility', 'visible');

            if (this.holder.getElement('.js-karma')) {
                this.karma = true;
            }

            if ((id = this.holder.getElement('.b-popup').get('data-id')) && this.holder.getElement('#js-usernote')) {
                new userProfileHandler.userNotes(id, target.get('data-user_login'), this.holder);
            }

            datesHandler.setDates(this.holder);

            return this;
        },
        hidePopup: function() {
            this.holder
                .addClass('hidden');

            delete this.karma;
        },
        loadPopup: function(target) {
            var
                type = target.get('data-user_id') ? 'user' : 'blog',
                id = target.get(type == 'user' ? 'data-user_id' : 'data-domain_id');

            if (type in cache && id in cache[type]) {
                this.showPopup(target, cache[type][id]);
            }
            else {
                new futuAjax({
                    button : target,
                    color_to : 0.5,
                    color_from : 1,
                    attribute : 'opacity',
                    url : ajaxUrls.getPopupUrl(type),
                    data : 'id=' + id,
                    onLoadFunction : function (response) {
                        if ( ! (type in cache)) {
                            cache[type] = {};
                        }

                        this.showPopup(target, cache[type][id] = response.template);
                    }.bind(this)
                });
            }
        },
        unCache: function(type, id) {
            if (type in cache && id in cache[type]) {
                delete cache[type][id];
            }
        },
        toggleUserSubscription: function(button) {
            if (button.hasClass('js-subscribed')) {
                feedSettingsHandler.updateUserSubscription({target: button}, ['posts', 'comments']);
            }
            else {
                feedSettingsHandler.setUserSubscription(button.getParent('form'), button);
            }

            this.unCache('user', this.holder.getElement('.b-popup').get('data-id'));
        },
        update: function(scope, filter) {
            globals.user && globals.user.popups_enabled && scope.getElements((filter || '.c_user') + '[data-user_id]').each(function(element) {
                if ( ! element.hasClass('b-removed_user') && element.getParent('.l-mouse_capable .post, .l-mouse_capable .comment, .l-mouse_capable .b-user_friends, .l-mouse_capable #js-elections_process, .l-mouse_capable .b-notification-item_message, .l-mouse_capable .b-user_public_notes')) {
                    element.addEvent('mouseenter', function() {
                        clearTimeout(this.hideTimeout);
                        this.hideTimeout = null;
                        this.showTimeout = setTimeout(function() {
                            popupHandler.loadPopup(element);
                        }.bind(this), 250);
                    }.bind(this))
                    .addEvent('mouseleave', function() {
                        [this.showTimeout, this.hideTimeout].each(clearTimeout);
                        this.showTimeout = this.hideTimeout = null;
                        this.hideTimeout = setTimeout(function() {
                            this.hover || this.hidePopup();
                        }.bind(this), 550);
                    }.bind(this));
                }
            }.bind(this));
        },
        init: function() {
            if (globals.user && globals.user.popups_enabled) {
                this.holder = this.holder || new Element('div', {
                    'class': 'b-popup_holder hidden'
                })
                .addEvent('mouseenter', function() {
                    this.hover = true;
                    clearTimeout(this.hideTimeout);
                    this.hideTimeout = null;
                }.bind(this))
                .addEvent('mouseleave', function(e) {
                    this.hover = false;
                    this.hideTimeout = setTimeout(function() {
                        this.hover || this.hidePopup();
                    }.bind(this), 550);
                }.bind(this))
                .inject(document.body);

                document.body.addEvent('click', function(e) {
                    e.target.getParent('.b-popup_holder') || this.hidePopup();
                }.bind(this));
            }

            return this;
        }
    };
})();
var quickSearch = {
	active_item_index: 0,
	key_press_timeout: null,
	current_query: '',
	init: function () {
		var scroll_container = $('js-quick_search_container').getElement('.b-quick_search');
		if ("onmousewheel" in document) {
			scroll_container.onmousewheel = quickSearch.onResultsMouseWheel;
		} else {
			scroll_container.addEventListener('DOMMouseScroll', quickSearch.onResultsMouseWheel, false);
		}
		$(window).addEvent('resize', function () {
			if (!$('js-quick_search_container').hasClass('hidden')) {
				quickSearch.setContainerPosition();
				quickSearch.setContainerSize();
			}
		});
	},
	onQueryKeyPressed: function (event) {
		event = new Event(event);
		if (event.key == 'up' || event.key == 'down') {
			event.preventDefault();
			return;
		}
		if ($('js-header_search_input').value.trim().length == 0) {
			quickSearch.resetResults();
			return;
		}
		if (quickSearch.current_query == $('js-header_search_input').value.trim()) {
			return;
		}

		quickSearch.showResults();
		quickSearch.current_query = $('js-header_search_input').value.trim();

		window.clearTimeout(quickSearch.key_press_timeout);
		quickSearch.key_press_timeout = window.setTimeout(quickSearch.searchByQuery, 300);
	},
	setContainerSize: function () {
		var max_height = window.innerHeight - $('js-quick_search_container').getPosition().y - 10;
		$('js-quick_search_container').set('styles', {
			maxHeight: max_height
		});
		quickSearch.setScrollSize(max_height);
	},
	setContainerPosition: function () {
		var input_coordinates = $('js-header_search_input').getCoordinates();
		$('js-quick_search_container').set('styles', {
			'width': input_coordinates.width,
			'top': input_coordinates.top + input_coordinates.height - 3,
			'right': document.body.getSize().x - input_coordinates.right
		});
	},
	setScrollSize: function (max_height) {
		var height = 0;
		var scroll_container = $('js-quick_search_container').getElement('.b-quick_search');
		var fixed_header_height = parseInt(window.getComputedStyle(scroll_container).marginTop);
		max_height -= fixed_header_height;
		var fixed_footer_height = $('js-quick_search_container').getElement('.b-quick_search_full').getSize().y;
		max_height -= fixed_footer_height;
		if (Browser.name != 'firefox') {
			scroll_container.getElements('.b-quick_search_section').each(function (section) {
				height += section.getCoordinates().height;
			});
			scroll_container.set('styles', {
				height: (height > max_height ? max_height : height)
			});
		} else {
			scroll_container.set('styles', {
				height: max_height
			});
		}
	},
	
	showResults: function () {
		quickSearch.setContainerPosition();
		$('js-quick_search_container').inject(document.body);
		$('js-quick_search_container').removeClass('hidden');
		$('js-header_search_input').addClass('b-header_search_input_opened');
		quickSearch.loadingSection('users');
		quickSearch.loadingSection('domains');
		quickSearch.loadingSection('posts');
		quickSearch.loadingSection('comments');
		quickSearch.setContainerSize();
	},
	resetResults: function () {
		$('js-quick_search_container').getElements('.b-quick_search_section_item').destroy();
		$('js-quick_search_container').addClass('hidden');
		$('js-header_search_input').removeClass('b-header_search_input_opened');
		quickSearch.active_item_index = 0;
		quickSearch.current_query = '';
		quickSearch.hideSection('users');
		quickSearch.hideSection('domains');
		quickSearch.hideSection('posts');
		quickSearch.hideSection('comments');
		quickSearch.closeSection();
		quickSearch.setContainerSize();
	},
	searchByQuery: function () {
		if ($('js-header_search_input').value.trim().length > 0) {
			quickSearch.searchUsers();
			quickSearch.searchDomains();
			quickSearch.searchPosts();
			quickSearch.searchComments();
		}
	},
	loadingSection: function (section_id) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="' + section_id + '"]');
		section.getElement('.b-quick_search_section_header_caption_loading').removeClass('hidden');
		section.getElement('.b-quick_search_section_header_caption_counter').innerHTML = '';;
		section.getElement('.b-quick_search_section_header_caption_counter').addClass('hidden');
		quickSearch.showSection(section_id);
		quickSearch.setContainerSize();
	},
	showSection: function (section_id) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="' + section_id + '"]');
		var active_section = $('js-quick_search_container').getElement('.b-quick_search_section_opened');
		if (!active_section || active_section == section) {
			section.removeClass('hidden');
		}
		quickSearch.setContainerSize();
	},
	hideSection: function (section_id) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="' + section_id + '"]');
		var active_section = $('js-quick_search_container').getElement('.b-quick_search_section_opened');
		if (!active_section || active_section != section) {
			section.addClass('hidden');
		}
		section.getElements('.b-quick_search_section_item').destroy();
		quickSearch.setContainerSize();
	},
	updateSection: function (section_id, section_data) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="' + section_id + '"]');
		section.getElement('.b-quick_search_section_header_caption_loading').addClass('hidden');
		section.getElement('.b-quick_search_section_header_caption_counter').innerHTML = section_data.item_count;
		section.getElement('.b-quick_search_section_header_caption_counter').removeClass('hidden');
		if (section_data.item_count > 0) {
			env.render('quick_search.html', section_data, function (err, docs_html) {
				if (!section_data.more) {
					section.getElements('.b-quick_search_section_item').destroy();
				}
				section.appendHTML(docs_html);
				quickSearch.navigateTo();
				quickSearch.setContainerSize();
				datesHandler.setDates(section);
			});
		} else {
			quickSearch.hideSection(section_id);
		}
	},
	searchUsers: function (more) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="users"]');
		quickSearch.showSection('users');
		var data = {
			query: quickSearch.current_query,
			sort_by: 'karma'
		};
		if (more) {
			data.page = parseInt(section.getAttribute('data-section_page')) + 1;
		}
		var url = router.generate('users_search');
		new futuAjaxNew({
			type : 'GET',
			button : (new Element('div')),
			url : url,
			data : Object.toQueryString(data),
			onLoadFunction : function (response) {
				section.setAttribute('data-section_loading', 'no');
				section.setAttribute('data-section_page', response.page);
				if (response.page >= response.page_count) {
					section.setAttribute('data-section_fully_loaded', 'yes');
				} else {
					section.setAttribute('data-section_fully_loaded', 'no');
				}
				quickSearch.updateSection('users', {
					users: response.users,
					item_count: response.item_count,
					more: more
				});
			}
		});
	},
	searchDomains: function (more) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="domains"]');
		quickSearch.showSection('domains');
		var url = ajaxUrls.blogs_search;
		var offset = more ? section.getElements('.b-quick_search_section_item').length : 0;
		var data = 'offset=' + offset + '&query=' + encodeURIComponent(quickSearch.current_query);
		new futuAjax({
			button : new Element('div'),
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				section.setAttribute('data-section_loading', 'no');
				if (!response.offset) {
					section.setAttribute('data-section_fully_loaded', 'yes');
				} else {
					section.setAttribute('data-section_fully_loaded', 'no');
				}
				quickSearch.updateSection('domains', {
					domains: response.domains,
					item_count: response.total,
					more: more
				});
			}
		});
	},
	searchPosts: function (more) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="posts"]');
		quickSearch.showSection('posts');
		var url = ajaxUrls.search_docs;
		var offset = more ? section.getElements('.b-quick_search_section_item').length : 0;
		var data_obj = {
			'offset': offset,
			'query': quickSearch.current_query,
			'type': 'posts',
			'limit': 5
		};
		var data = Object.toQueryString(data_obj);
		new futuAjax({
			button : new Element('div'),
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				section.setAttribute('data-section_loading', 'no');
				if (response.docs.length == 0) {
					section.setAttribute('data-section_fully_loaded', 'yes');
				} else {
					section.setAttribute('data-section_fully_loaded', 'no');
				}
				quickSearch.updateSection('posts', {
					posts: response.docs,
					item_count: response.total,
					more: more
				});
			}
		});
	},
	searchComments: function (more) {
		var section = $('js-quick_search_container').getElement('.b-quick_search_section[data-section="comments"]');
		quickSearch.showSection('comments');
		var url = ajaxUrls.search_docs;
		var offset = more ? section.getElements('.b-quick_search_section_item').length : 0;
		var data_obj = {
			'offset': offset,
			'query': quickSearch.current_query,
			'type': 'comments',
			'limit': 5
		};
		var data = Object.toQueryString(data_obj);
		new futuAjax({
			button : new Element('div'),
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				section.setAttribute('data-section_loading', 'no');
				if (response.docs.length == 0) {
					section.setAttribute('data-section_fully_loaded', 'yes');
				} else {
					section.setAttribute('data-section_fully_loaded', 'no');
				}
				quickSearch.updateSection('comments', {
					comments: response.docs,
					item_count: response.total,
					more: more
				});
			}
		});
	},
	
	loadMore: function () {
		var section = quickSearch.getOpenedSection();
		if (section && !(section.getAttribute('data-section_fully_loaded') === 'yes') && !(section.getAttribute('data-section_loading') === 'yes')) {
			section.setAttribute('data-section_loading', 'yes');
			var section_type = section.getAttribute('data-section');
			if (section_type == 'users') {
				quickSearch.searchUsers(true);
			}
			if (section_type == 'domains') {
				quickSearch.searchDomains(true);
			}
			if (section_type == 'posts') {
				quickSearch.searchPosts(true);
			}
			if (section_type == 'comments') {
				quickSearch.searchComments(true);
			}
		}
	},
	getOpenedSection: function () {
		return $('js-quick_search_container').getElement('.b-quick_search_section_opened');
	},
	openSection: function (event, button) {
		event && event.preventDefault();
		var section = button.getParent('.b-quick_search_section');
		var sections = $('js-quick_search_container').getElements('ul');
		sections.forEach(function (sec) {
			if (sec != section) {
				sec.addClass('hidden');
			}
		});
		section.addClass('b-quick_search_section_opened');

		$('js-quick_search_container').getElement('.b-quick_search').addClass('b-quick_search_opened');
		$('js-quick_search_container').getElement('.b-quick_search').scrollTo(0, 0);
		quickSearch.setContainerSize();
		$('js-header_search_input').focus();
	},
	closeSection: function (event) {
		event && event.preventDefault();
		var sections = $('js-quick_search_container').getElements('ul');
		sections.removeClass('b-quick_search_section_opened');
		quickSearch.showSection('users');
		quickSearch.showSection('domains');
		quickSearch.showSection('posts');
		quickSearch.showSection('comments');
		$('js-quick_search_container').getElement('.b-quick_search').removeClass('b-quick_search_opened');
		quickSearch.setContainerSize();
	},

	activateItem: function () {
		var items = $('js-quick_search_container').getElements('li');
		var item = items[quickSearch.active_item_index - 1];
		if (item) {
			if (item.hasClass('b-quick_search_section_item')) {
				var href = item.getElement('a').href;
				window.location.href = href;
			} else if (item.hasClass('b-quick_search_section_header')) {
				if (!item.hasClass('b-quick_search_section_opened')) {
					quickSearch.openSection(null, item.getElement('a'));
				}
			}
		} else {
			window.location.href = '/search/?domain_ids=1&query=' + encodeURIComponent(quickSearch.current_query);
		}
	},

	onNavigateKeyPressed: function (event) {
		event = new Event(event);
		if (event.key == 'up' || event.key == 'down') {
			event.preventDefault();
			quickSearch.navigateTo(event.key);
		}
		if (event.key == 'esc') {
			if (quickSearch.getOpenedSection()) {
				event.preventDefault();
				quickSearch.closeSection();
			}
		}
		if (event.key == 'enter') {
			event.preventDefault();
			quickSearch.activateItem();
		}
	},
	onResultsMouseOver: function (item) {
		var items = $('js-quick_search_container').getElements('li');
		items.removeClass('b-quick_search_item_active');
		item.addClass('b-quick_search_item_active');
		quickSearch.active_item_index = items.indexOf(item) + 1;
	},
	setNextItem: function () {
		var items = $('js-quick_search_container').getElements('li');
		items.removeClass('b-quick_search_item_active');
		var item = null;
		for (var i = quickSearch.active_item_index; i < quickSearch.active_item_index + items.length; i++) {
			var item_index = (i >= items.length) ? Math.abs(-1 * (items.length - i)) : i;
			item = items[item_index];
			var is_hidden = item.getSize().y < 1;
			if (!is_hidden) {
				break;
			}
		}
		quickSearch.active_item_index = item_index + 1;
		items[quickSearch.active_item_index - 1].addClass('b-quick_search_item_active');
	},
	setPreviousItem: function () {
		var items = $('js-quick_search_container').getElements('li');
		items.removeClass('b-quick_search_item_active');
		var item = null;
		for (var i = quickSearch.active_item_index; i < quickSearch.active_item_index + items.length; i++) {
			var item_index = 2 * quickSearch.active_item_index - i - 2;
			item_index = item_index >= 0 ? item_index : items.length + item_index;
			item = items[item_index];
			var is_hidden = item.getSize().y < 1;
			if (!is_hidden) {
				break;
			}
		}
		quickSearch.active_item_index = item_index + 1;
		items[quickSearch.active_item_index - 1].addClass('b-quick_search_item_active');
	},
	navigateTo: function (key) {
		var items = $('js-quick_search_container').getElements('li');
		if (items.length > 0) {
			items.removeClass('b-quick_search_item_active');
			if (key == 'up') {
				quickSearch.setPreviousItem();
			} else if (key == 'down') {
				quickSearch.setNextItem();
			} else if (items[quickSearch.active_item_index - 1]) {
				items[quickSearch.active_item_index - 1].addClass('b-quick_search_item_active');
			} else {
				quickSearch.active_item_index = 0;
			}
			if (quickSearch.active_item_index > 0) {
				quickSearch.scrollToItem(items[quickSearch.active_item_index - 1]);
			}
		}
	},
	scrollToItem: function (item) {
		if (item) {
			var list = $('js-quick_search_container').getElement('.b-quick_search');
			var list_height = list.getSize().y;
			var item_y = item.getPosition(list).y;
			var item_height = item.getSize().y;

			if ((item_y + item_height) > list_height) {
				list.scrollTo(0, list.getScroll().y + item_y - list_height + item_height);
				quickSearch.onResultsMouseWheel({
					currentTarget: list,
					preventDefault: function () {},
					deltaY: -1
				});
			} else if (item_y < 0) {
				list.scrollTo(0, list.getScroll().y + item_y);
			}
		} else {
			items[quickSearch.active_item_index - 1].addClass('b-quick_search_item_active');
		}
	},
	onResultsMouseWheel: function (event) {
		var distance_till_end = Math.ceil(event.currentTarget.scrollTop) - event.currentTarget.scrollHeight + event.currentTarget.offsetHeight;
		if ((event.deltaY > 0 && distance_till_end >= 0) ||
			(event.deltaY < 0 && event.currentTarget.scrollTop < 1)) {
			event.preventDefault();
		}
		if (distance_till_end >= -100) {
			quickSearch.loadMore();
		}
	}
};

moreHandler = {
	itemsPerPage: 42,
	totalPages: null,
	toggle: function (state) {
		this._isPaused = state === undefined ? !this._isPaused : !state;
	},

	loadDocs : function (button, options) {
		var options = options || {};
		var data = '';
		var url = ajaxUrls.index_moar;
		var color_to = 0.5;
		var color_from = 1;
		var ajaxAttribute = 'opacity';

		var offset = $('js-posts_holder').getElements('.post').length + $('js-posts_holder').getElements('.comment').length;
		$$('.b-comments_ignored_description *[data-invisible_docs_count]').each(function (invisible_docs_counter_element) {
			offset += parseInt(invisible_docs_counter_element.getAttribute('data-invisible_docs_count'));
		});

		if (options.current_page && options.total_pages) {
			if (!moreHandler.currentPage && !moreHandler.totalPages) {
				moreHandler.currentPage = options.current_page;
				moreHandler.totalPages = options.total_pages;
			}
			offset = moreHandler.currentPage *  moreHandler.itemsPerPage;
		}
		data = 'offset=' + offset + '&';
		
		if (options.sorting) {
			data += 'sorting=' + options.sorting + '&';
		}
		
		if (options.feed_type) {
			data += 'feed_type=' + options.feed_type + '&';
		}
		
		if (options.threshold) {
			data += 'threshold=' + options.threshold + '&';
		}
		
		if (options.user) {
			data += 'user=' + options.user + '&';
			if (options.comments) {
				url = ajaxUrls.user_comments;
			} else {
				url = ajaxUrls.user_posts;
			}
		}
		if (options.tag) {
			data += 'tag_id=' + options.tag + '&';
			url = ajaxUrls.tags_list;
		}
		if (options.favourites) {
			
			if (!options.load_more) {
				data = '';
				data += 'sort=' + $('js-favourites_sort').value + '&';
			}
			url = ajaxUrls.favourites_list;
		}
		if (!options.load_more) {
			$('js-posts_holder').getElements('div').destroy();
			$('js-posts_holder').getElements('p').destroy();
			$('js-index_load_more_posts').addClass('hidden');
			$('js-posts_holder').addClass('js-loading_animation');
		} else {
			if ($('js-index_load_more_posts')) {
				$('js-index_load_more_posts').addClass('js-more_loading_animation');
				$('js-index_load_more_posts').innerHTML = 'Загружаем';
			}
		}
		if (options.my_things) {
			if (!options.load_more) {
				data = '';
				data += 'sort=' + $('js-my_things_sort').value + '&';
				data += 'period=' + $('js-my_things_period').value + '&';
				data += 'unread=' + ($('js-my_things_unread').checked ? '1' : '0') + '&';
				$('js-posts_holder').getElements('.post').destroy();
			}
			url = ajaxUrls.interest_moar;
		}
		if (options.inbox) {
			if (!options.load_more) {
				data = '';
				data += 'sort=' + $('js-inbox_sort').value + '&';
				data += 'unread=' + ($('js-inbox_unread').checked ? '1' : '0') + '&';
				data += 'filter_owner=' + $('js-inbox_filter').value + '&';
				$('js-posts_holder').getElements('.post').destroy();
			}
			url = ajaxUrls.inbox_moar;
		}
		if (options.search) {
			if ($('js-threshold_search_input').value.trim().length == 0) {
				return false;
			}
			data = '';
			if (!options.load_more) {
				color_to = Colors.background_color;
				color_from = Colors.inputs_bg_color;
			} else {
				data += 'offset=' + $('js-posts_holder').getElements('.post, .comment').length + '&';
			}
			data += 'query=' + encodeURIComponent($('js-threshold_search_input').value) + '&';
			
			if ($('js-search_domain')) {
				data += 'domain=' + $('js-search_domain').value + '&';
			}
			if ($('js-search_authors')) {
				data += 'authors=' + encodeURIComponent($('js-search_authors').value.trim()) + '&';
			}
			if ($('js-search_type')) {
				if ($('js-search_type').value != '2') {
					data += 'type=' + $('js-search_type').value + '&';
				}
			}
			if ($('js-search_period')) {
				if ($('js-search_period').value != '-1') {
					data += 'period=' + $('js-search_period').value + '&';
				}
			}
			url = ajaxUrls.search_docs;
		}
		if (options.hidden_posts) {
			url = ajaxUrls.hidden_post_moar;
		}
		if (options.grendizer) {
			url = ajaxUrls.grendizer_moar;
		}
		
		data = data.substr(0, data.length - 1);
		
		new futuAjax({
			button : $(button),
			color_to : color_to,
			color_from : color_from,
			attribute : ajaxAttribute,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				var loadingButton = $('js-index_load_more_posts');

				$('js-posts_holder').removeClass('js-loading_animation');
				
				var new_post_page = new Element('div', {
					html : response.template,
					'class' : 'b-posts_page'
				});
				
				$A(new_post_page.getElements('.post')).each(function (loaded_post_element) {
					if ($(loaded_post_element.id)) {
						loaded_post_element.dispose();
					}
				});
				
				new_post_page.inject(loadingButton, 'before');

				if (response.offset) {
					loadingButton.removeClass('hidden');

					// Для страниц с пагинатором изменяется текущая страница в пагинаторе
					if (moreHandler.totalPages && moreHandler.currentPage) {
						moreHandler.currentPage++;
						if (window.paginator) {
							window.paginator.inputData.pageCurrent = moreHandler.currentPage;
							window.paginator.redraw();
						}
						if (moreHandler.totalPages == moreHandler.currentPage) {
							loadingButton.addClass('hidden');
						}
					}
				} else {
					loadingButton.addClass('hidden');
				}
				if (loadingButton) {
					loadingButton.removeClass('js-more_loading_animation');
					loadingButton.innerHTML = 'Ещё? Еще!';
				}
				
				if (options.my_things) {
					moreHandler.setHeaderNavigationCounters('interest', response.unread_count);
				} else if (options.inbox) {
					moreHandler.setHeaderNavigationCounters('inbox', response.unread_count);
				}

				//postsCutHandler.cut(new_post_page);
				datesHandler.setDates();
				postsCutHandler.resizeImages(new_post_page);
				commentsHandler.setMaxImagesWidth(new_post_page);
				futuMediaPlayer.initPopupMedia(new_post_page);
				popupHandler.update(new_post_page);
				iconsHandler.update(new_post_page);
				postControlsHandler.updateCodeTag(new_post_page);
			}
		});
	},
	setHeaderNavigationCounters : function (counter_type, unread_count) {
		var button_element = null;
		var button_caption = '';
		if (counter_type == 'interest') {
			button_caption = 'Мои вещи';
			button_element = $('js-header_nav_my_things');
		} else {
			button_element = $('js-header_nav_inbox');
		}
		if (button_element) {
			var unread_count_caption = moreHandler.getUnreadCounterCaption(unread_count);
			button_element.getElement('i').innerHTML = '{unread_caption}'.substitute({
				unread_caption : unread_count_caption ? button_caption + ' ' + unread_count_caption : button_caption
			});
		}
	},
	loadDomains : function (button, options) {
		var options = options || {};
		var data = '';
		var url = null;
		var type = options.type ? options.type : '';
		var list_element = null;
		var more_button = null;
		var loading_animation_attribute = 'background-color';
		var loading_animation_color_to = Colors.links_system_color;
		var loading_animation_color_from = Colors.links_color;
		
		if (!options.load_more) {
			list_element = button;
			more_button = list_element.getNext('.b-load_more_domains_button');
		} else {
			more_button = button;
			list_element = more_button.getPrevious('.b-blogs_list');
		}
		
		if (!options.load_more) {
			list_element.getElements('.b-list_item').destroy();
			list_element.getElements('.b-list_page').destroy();
			more_button.addClass('hidden');
			list_element.addClass('js-loading_animation');
			
			loading_animation_attribute = 'opacity';
			loading_animation_color_to = 1;
			loading_animation_color_from = 1;
		} else {
			more_button.addClass('js-more_loading_animation');
			more_button.innerHTML = 'Загружаем';
		}
		
		data = 'offset=' + list_element.getElements('.b-list_item').length;
		
		if (options.sort) {
			url = ajaxUrls.getBlogsSortUrl(type, options.sort);
			if (options.tag) {
				data += '&body=' + options.tag;
			}
		}
		
		if (options.asc) {
			url += 'asc';
		}
		
		if (options.search) {
			url = ajaxUrls.blogs_search;
			data += '&query=' + encodeURIComponent(options.search);
			$('js-domains_search_input').value = options.search;
			$('js-blogs_list_search_result').innerHTML = '';
		}
		if (!url) {
			new futuAlert('Мы не знаем, как сортировать список.');
			return false;
		}
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				$(list_element).removeClass('js-loading_animation');
				more_button.removeClass('js-more_loading_animation');
				more_button.innerHTML = 'Ещё? Еще!';
				var list_page = new Element('div', {
					html : response.template
				});
				$A(list_page.getElements('.b-list_item')).each(function (new_list_item) {
					var new_list_item_id = new_list_item.getAttribute('data-user-id');
					if (list_element.getElements('.b-list_item[data-user-id="' + new_list_item_id + '"]').length > 0) {
						new_list_item.destroy();
					}
				});
				list_page.inject(list_element);
				iconsHandler.update(list_element);

				if (response.offset) {
					more_button.removeClass('hidden');
				} else {
					more_button.addClass('hidden');
				}
				if (options.search) {
					if (response.total == 0) {
						$('js-blogs_list_search_result').innerHTML = 'Мы не нашли совпадений в полях названия и описания подлепр по запросу «<b>{search_query}</b>»'.substitute({
							search_query : options.search.htmlEscape()
						});
					} else {
						$('js-blogs_list_search_result').innerHTML = 'ЭВМ нашла {search_count} по запросу «{search_query}»'.substitute({
							search_query : options.search.htmlEscape(),
							search_count : response.total + ' ' + utils.getPlural(response.total, ['подлепру', 'подлепры', 'подлепр'])
						});
					
					}
				}
			}
		});
	},
	loadDomainsTags : function (button, options) {
		var options = options || {};
		var data = '';
		var list_element = $('js-subscription_domains_tags');
		var load_more_button_element = list_element.getNext('.b-cloud_more_button');
		
		if (!options.load_more) {
			list_element.innerHTML = '';
			load_more_button_element.addClass('hidden');
		}
		
		data = 'offset=' + list_element.getElements('a').length;
		
		var tags_max_level = list_element.getAttribute('data-tags_max_level');
		if (tags_max_level || tags_max_level === 0) {
			data += '&level=' + tags_max_level;
		}
		
		var attribute = 'color';
		var color_to = Colors.links_color;
		var color_from = Colors.links_system_color;
		
		if (button == list_element) {
			attribute = 'opacity';
			color_to = 1;
			color_from = 1;
		}
		
		new futuAjax({
			button : $(button),
			attribute : attribute,
			color_to : color_to,
			color_from : color_from,
			url : ajaxUrls.blogs_tags_moar,
			data : data,
			onLoadFunction : function (response) {
				if (response.level || response.level === 0) {
					list_element.setAttribute('data-tags_max_level', response.level)
				}
				$(button).removeClass('js-loading_animation');
				var list_page = new Element('div');
				var iHTML = '';
				for (var i = 0, l = response.domains_tags.length; i < l; i++) {
					var tag = response.domains_tags[i];
					var tag_level = tag.domains_count ? tag.domains_count : 1;
					if (tag_level > 8) {
						tag_level = 8;
					}
					iHTML += '<a class="s{tag_level}" href="/underground/tag/{tag_body}/" onclick="return URIHandler.navigateToPage(this);">{tag_name}</a> '.substitute({
						'tag_level' : tag.level ? tag.level : 1,
						'tag_body' : encodeURIComponent(tag.tag.body),
						'tag_name' : tag.tag.body,
						'tag_id' : tag.tag.id
					});
				}
				list_page.innerHTML = iHTML;
				list_page.inject(list_element);

				if (response.offset) {
					load_more_button_element.removeClass('hidden');
				} else {
					load_more_button_element.addClass('hidden');
				}
				subscriptionsHandler.renderTagNavigation();
			}
		});
	},
	loadUsers : function (button, options) {
		var options = options || {};
		var data = '';
		var url = ajaxUrls.users_list;
		var list_container = $('js-users_list');
		var list_element = list_container.getElement('.b-users_list');
		var more_button = $('js-load_more_users_button');
		var input = $('js-users_search_input');
		var textEl = $('js-users_statistics');

		data = 'query=' + encodeURIComponent(input.value);

		new futuAjaxNew({
			type : 'GET',
			button : $(button),
			animated_element : $(button),
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : '/api/search/user_notes/', //router.generate('users_search'),
			data : data,
			onLoadFunction : function (response) {
				
				console.log(response);
				
			}
		});
	},
	colorRows: function (list) {
		var rows = list ? list.getElements('.b-list_item') : null;
		if (rows) {
			rows.each(function (item, i) {
				if ((i + 1) % 2 == 1) {
					item.addClass('b-list_item_odd');
				}
			});
		}
	},
	loadUsersCities : function (button, options) {
		var options = options || {};
		var data = '';
		var list_element = $('js-subscription_users_cities');
		var load_more_button_element = list_element.getNext('.b-cloud_more_button');
		
		if (!options.load_more) {
			list_element.innerHTML = '';
			load_more_button_element.addClass('hidden');
		}
		
		data = 'offset=' + list_element.getElements('a').length;
		
		var tags_max_level = list_element.getAttribute('data-tags_max_level');
		if (tags_max_level || tags_max_level === 0) {
			data += '&level=' + tags_max_level + '&';
		}
		
		var attribute = 'color';
		var color_to = Colors.links_color;
		var color_from = Colors.links_system_color;
		
		if (button == list_element) {
			attribute = 'opacity';
			color_to = 1;
			color_from = 1;
		}
		
		new futuAjax({
			button : $(button),
			attribute : attribute,
			color_to : color_to,
			color_from : color_from,
			url : ajaxUrls.users_cities,
			data : data,
			onLoadFunction : function (response) {
				if (response.level || response.level === 0) {
					list_element.setAttribute('data-tags_max_level', response.level)
				}
				$(button).removeClass('js-loading_animation');
				var list_page = new Element('div');
				var iHTML = '';
				for (var i = 0, l = response.cities.length; i < l; i++) {
					var city = response.cities[i];
					iHTML += '<a class="s{city_level}" href="/users/city/{city_id}/" onclick="return URIHandler.navigateToPage(this);">{city_name}</a> '.substitute({
						'city_level' : city.level ? city.level : 1,
						'city_name' : city.name,
						'city_id' : city.id
					});
				}
				list_page.innerHTML = iHTML;
				list_page.inject(list_element);

				if (response.offset) {
					load_more_button_element.removeClass('hidden');
				} else {
					load_more_button_element.addClass('hidden');
				}
				subscriptionsHandler.renderTagNavigation();
			}
		});
	},
	loadComments : function (button, options) {
		var options = options || {};
		var data = '';

		data = 'offset=' + $('js-comments_holder').getElements('.comment').length + '&';
		data += 'user=' + options.user;
		
		new futuAjax({
			button : $(button),
			color_to : '#cccccc',
			color_from : '#7F91A7',
			url : ajaxUrls.user_comments,
			data : data,
			onLoadFunction : function (response) {
				var comments_length = 0;
				if (response.comments) {
					comments_length = response.comments.length;
					for (var i = 0; i < comments_length; i++) {
						var comment = response.comments[i];
						var comment_element = false;
						if (!$('' + comment.id)) { 
							comment_element = moreHandler.getCommentElement(comment);
							comment_element.inject($(button), 'before');
						}
					}
				} else {
					$(button).addClass('hidden');
				}
			}
		});
	},
	getCommentElement : function (comment) {
		var comment_iHTML = '<div class="comment_inner">\
				<div class="c_body">{comment_body}</div>\
				<div class="c_footer">\
					<a class="c_icon" href="/comments/{comment_post_id}#{comment_id}">&nbsp;</a>\
					Написал <a class="c_user" href="/users/{comment_user_login}">{comment_user_login}</a>, {comment_date}\
					<div class="vote c_vote">\
						<strong class="vote_result" onclick="voteDetailsHandler.show({type:\'comment\', button:this, id:\'{comment_id}\', post_id:\'{comment_post_id}\'});">{comment_rating}</strong>\
					</div>\
				</div>\
			</div>'.substitute({
			'comment_id' : comment.id,
			'comment_post_id' : comment.post_id,
			'comment_tree_level' : comment.tree_level,
			'comment_user_id' : comment.user.id,
			'comment_user_login' : comment.user.login,
			'comment_body' : comment.body,
			'comment_date' : utils.getTimeDiff(comment.created),
			'comment_rating' : comment.rating
		});
		
		var comment_element_class = 'comment indent_' + comment.tree_level + ' u' + comment.user.id;
		
		if (globals.current_user == comment.user.login) {
			comment_element_class += ' mine';
		}
		
		var comment_element = new Element('div', {
			'class' : comment_element_class,
			'id' : comment.id,
			'html' : comment_iHTML
		});
		 return comment_element;
	},
	getUnreadCounterCaption : function (unread_count) {
		var unread_count_caption = '';
		if (unread_count[0] > 0 && unread_count[1] > 0) {
			unread_count_caption = '{unread_posts}/{unread_comments}'.substitute({
				unread_posts : unread_count[0],
				unread_comments : unread_count[1]
			});
		} else {
			var remaining_unread_count = unread_count[0] || unread_count[1];
			if (remaining_unread_count) {
				unread_count_caption = '' + remaining_unread_count;
			}
		}
		return unread_count_caption;
	}
};
commentsHandler = {
	filter: (function() {
		var
			options = {
				// бинарные параметры
				unread: null,         // непрочитанные
				links: null,          // со ссылками
				images: null,         // с картинками
				videos: null,         // со встроенными видео

				// выбор из списка
				gender: null,         // по полу автора — 'male' либо 'female'

				// строки
				author: null,         // по юзернейму автора
				query: null,          // по наличию подстроки в тексте

				// сортировка
				sort: null            // сортировка — 'default' (по времени, старые вверху) либо 'rating'
			},
			groups = {
				content: ['unread', 'links', 'images', 'videos', 'query'], // фильтры по содержимому — могут работать совместно по логике "и"
				owner: ['gender', 'author']                                // фильтры по принадлежности — взаимоисключающие
			},
			selected_users = [];

		return {
			current_epoch: null,
			epoch_of_first_unread_comment: 0,
			ids: [],
			controls: null,

			// получить кнопку фильтра по его ключу key
			control: function(key) {
				return this.controls.getElement('[data-key=' + key + ']');
			},
			// выставить значение фильтра option в value и соответствующим образом выставить остальные, если не skip
			set: function(option, value, skip) {
				var element;

				if ( ! (option in options)) {
					return this;
				}

				if (typeof value == 'boolean') {
					options[option] = value ? 'on' : 'off';
				}
				else {
					options[option] = value || null;
				}

				if ( ! skip && groups.owner.indexOf(option) != -1) {
					groups.owner.forEach(function(key) {
						key == option || this.set(key, null, true);
					}.bind(this));
				}

				if (options[option] !== null) {
					if (element = this.control(option).getElement('input')) {
						element.set('value', value).getParent('a').set('data-value', value || null);
					}

					if (option == 'unread') {
						for (var group in groups) {
							groups[group].forEach(function(key) {
								key == option || this.set(key, null, true);
							}.bind(this));
						}
					}
					else {
						this.set('unread', null, true);
					}

					this.control('all').removeClass('active');
					this.control(option).addClass('active');
				}
				else {
					if (element = this.control(option).removeClass('active').getElement('input')) {
						element.set('value', '').getParent('a').set('data-value', null);
					}
					else if (element = this.control(option).getElement('select')) {
						futuSelects.each(function(select) {
							if (select.select == element) {
								select.select.set('value', '');
								select.button.removeClass('threshold_select_button').set('text', select.select.getElement('option').get('text'));
							}
						});
					}

					skip || this.check() || this.control('all').addClass('active');
				}

				return this;
			},
			// сбросить все фильтры
			clear: function() {
				for (var option in options) {
					option == 'sort' || this.set(option, null);
				}

				this.control('all').addClass('active');

				return this;
			},
			// проверить, выставлен ли хоть один фильтр
			check: function() {
				for (var option in options) {
					if (options[option]) {
						return true;
					}
				}

				return false;
			},
			// пометить комментарии, как прочитанные
			viewPost: function (button, post_id, current_epoch) {
				var post_id = post_id || globals.post.id;
				var current_epoch = current_epoch || this.current_epoch;
				new futuAjax({
					button: button || new Element('span'),
					attribute: 'opacity',
					color_to: 0.5,
					color_from: 1,
					url: ajaxUrls.post_view,
					data: 'post_id=' + post_id + '&timestamp=' + current_epoch
				});
			},
			// послать запрос на подгрузку комментариев
			sendReload: function (view_post, button, data) {
				var comments_holder = $('js-comments_holder');
				new futuAjax({
					button: button,
					attribute: 'opacity',
					color_to: 0.5,
					color_from: 1,
					url: $('js-comments').hasClass('comments_inbox') ? ajaxUrls.inbox_comments : ajaxUrls.post_comments,
					data: Object.toQueryString(data) + '&post_id=' + globals.post.id,

					onLoadFunction: function(response) {
						comments_holder.set('html', response.template).removeClass('js-loading_animation');

						// подсвечиваем контент под критерии поиска
						(this.ids = response.filtered_comments_ids).length && this.ids.each(this.highlight);

						// выделяем выбранных пользователей
						selected_users.length && $$('.u' + selected_users.join(', .u')).addClass('selected');

						// инициализируем всю фигню
						commentsHandler.new_comment_forms = {};
						commentsHandler.postProcess(comments_holder);
						commentsHandler.setMaxImagesWidth(comments_holder);
						datesHandler.setDates();
						popupHandler.update(comments_holder);
						commentsHandler.initComments();

						comments_holder.getElements('.comment').each(function(comment_element) {
							if (!comment_element.hasClass('comment_collapse_initialized')) {
								commentsHandler.initCommentCollapse(comment_element);
							}
						})

						// обновляем время новых и последнего захода
						if (view_post) {
							this.epoch_of_first_unread_comment = response.epoch_of_first_unread_comment || response.current_epoch;
							this.current_epoch = response.current_epoch;
							this.viewPost();
						}

						$('js-comments_navigation_mine')
							.fireEvent('refresh');

					}.bind(this)
				});
			},
			// загрузить блок комментариев с морганием на button и, если refresh, пометить новые комментарии как прочитанные
			reload: function(button, refresh, skip) {
				var data = {};
				

				for (var i in options) {
					if (options[i] !== null) {
						data[i] = [true, false].indexOf(options[i]) != -1 ? (options[i] ? 'on' : 'off') : options[i];
					}
				}

				skip || history.pushState(null, document.title, URIHandler.createURI(data));


				if (refresh && (data.unread == 'on' || Object.getLength(data) == 0)) {
					// при ручном обновлении всех или новых, обновляем отметку новых временем последнего обновления
					data.mark_as_unread_after = this.current_epoch;
				} else {
					// при любой другой подгрузке комментов, отмечаем новые с момента загрузки страницы
					data.mark_as_unread_after = this.epoch_of_first_unread_comment;
				}
				this.sendReload(true, button, data);

				return this;
			},
			// выделить жёлтым критерии фильтрации в блоке комментария с номером id
			highlight: function(id) {
				var className = 'b-search_match', comment = $('' + id);

				if (comment) {
					for (var option in options) {
						if (option != 'sort' && options[option]) {
							switch (option) {
								case 'query':
									var
										body = comment.getElement('.c_body').get('html'), // старый HTML
										new_body = '',                                    // новый HTML
										tag = false,                                      // находимся ли мы внутри тега
										i = 0,                                           // текущий индекс
										c = '',                                           // текущий символ
										o = options[option][0].toLowerCase();             // первый символ строки поиска

									while (c = body[i]) {
										if (c == '<') {
											// вошли в тег
											tag = true;
										}
										else if (c == '>') {
											// вышли из тега
											tag = false;
										}

										// если мы не внутри тега, и текущий символ совпал с первым символом запроса, проверяем на подстроку целиком
										if ( ! tag && c.toLowerCase() == o && body.substr(i, options[option].length).toLowerCase() == options[option].toLowerCase()) {
											// подстрока нашлась по текущему индексу — подсвечиваем её...
											new_body += '<span class="{className}">{str}</span>'.substitute({
												className: className,
												str: body.substr(i, options[option].length)
											});

											// ...и перескакиваем сразу к её концу
											i += options[option].length;
										}
										else {
											new_body += c;
											i ++;
										}
									}

									comment.getElement('.c_body').set('html', new_body);

									break;
								case 'links':
									comment.getElement('.c_body').getElements('a').addClass(className);

									break;
								case 'images':
									comment.getElement('.c_body').getElements('img').addClass(className);

									break;
								case 'videos':
									futuMediaPlayer.getMediaElements(comment).addClass(className + ' ' + className + '-video');

									break;
								case 'gender':
									if (comment.get('data-user_gender') == options[option]) {
										comment.getElement('.c_wrote').addClass(className);
									}

									break;
								case 'author':
									if (comment.get('data-user_login').toLowerCase() == options[option].toLowerCase()) {
										comment.getElement('.c_user').addClass(className);
									}

									break;
							}
						}
					}
				}
			},
			// выделить все комментарии юзера
			selectUser: function(id) {
				var id = '' + id;

				if (selected_users.indexOf(id) == -1) {
					selected_users.push(id);

					$$('.u' + id).addClass('selected');
				}
				else {
					selected_users.splice(selected_users.indexOf(id), 1);

					$$('.u' + id).removeClass('selected');
				}
			},
			// подготовить интерфейс
			init: function(current_epoch, epoch_of_first_unread_comment) {
				var filter = this;

				this.controls = $('js-comments').getElement('.b-comments_controls').addEvent('selectstart', function() {
					return false;
				});

				this.controls.getElements('select').each(function(element) {
					new futuSelect(element);
				});

				this.controls.getElements('a[data-prefix]').each(function(element) {
					element.getElement('.threshold_select_button').captureEvent('click', element);
				});

				this.controls.getElements('[data-key]').each(function(element) {
					var key = element.get('data-key');

					if (key in options && element.hasClass('active')) {
						if (element.get('data-value')) {
							options[key] = element.get('data-value');
						}
						else if (element.getElement('select, input') && element.getElement('select, input').get('value')) {
							options[key] = element.getElement('select, input').get('value');
						}
						else {
							options[key] = 'on';
						}
					}

					if (key == 'refresh') {
						element.addEvent('click', function() {
							filter.reload(this, true);
						});
					}
					else if (key == 'all') {
						element.addEvent('click', function() {
							filter.clear().reload(this);
						});
					}
					else if (key == 'unread') {
						element.addEvent('click', function() {
							filter.clear();
							filter.control('unread').addClass('active')
							filter.control('all').removeClass('active')
							options['unread'] = 'on';
							filter.reload(this);
						});
					}
					else if (groups.content.indexOf(key) != -1) {
						element.addEvent('click', function() {
							filter.control(key).getElement('input') || filter.set(key, ! this.hasClass('active') || null).reload(this);
						});
					}
				});

				this.ids.length && this.ids.each(this.highlight);

				this.controls.getElements('form').addEvent('submit', function() {
					var input = this.getElement('input'), link = this.getParent('a');

					filter.set(link.get('data-key'), input.get('value') || null).reload(link);

					input.blur();

					return false;
				});
				
				this.first_load = true;
				['popstate', 'pushstate'].each(function(evt) {
					window.addEvent(evt, function(e) {
						if (!this.first_load) {
							var params = location.search.replace('?', '').parseQueryString();

							this.clear();

							for (option in params) {
								this.set(option, params[option]);
							}

							this.reload(this.control('refresh'), false, true);
						}
						this.first_load = false;
					}.bind(this));
				}.bind(this));

				// Скроллим до первого нового, если мы зашли на новые
				window.addEvent('domready', function () {
					if (options['unread'] == 'on' && $$('.new').length > 0) {
						commentsHandler.commentsScroll($$('.new')[0]);
					}
				});

				// запоминаем время последнего комментария для фильтрации
				this.epoch_of_first_unread_comment = epoch_of_first_unread_comment;

				// читаем пост, чтобы сбросились счетчики "вне поста"
				this.current_epoch = current_epoch;
				this.viewPost();
			}
		}
	})(),

	sendNewComment : function (options) {
		var data = options.data;
		var post_id = options.post_id;
		var new_comment_form = options.new_comment_form;
		var url = ajaxUrls.comment_submit;
		if (globals.post && globals.post.has_acl) {
			url = ajaxUrls.inbox_comment_submit;
		}
		new futuAjax({
			button : new_comment_form.container,
			animated_element : new_comment_form.container.getElement('textarea'),
			color_to : Colors.background_color,
			color_from : Colors.inputs_bg_color,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				
				if ($('js-comments_no_new_comments')) {
					$('js-comments_no_new_comments').dispose();
				}
				
				if (new_comment_form.container.getElement('input[name="media"]')) {
					new_comment_form.container.getElement('input[name="media"]').destroy();
					new_comment_form.container.getElement('.b-file_uploader_drag').innerHTML = utils.isFileDragAndDropSupported() ? 'или перетащить сюда' : '';
				}
				
				var comment_element_holder = new Element('div', {
					html : response.template
				});
				var comment_element = comment_element_holder.getElement('.comment');
				
				$(comment_element).set('styles', {
					'overflow' : 'hidden',
					'max-height' : 0,
					'opacity' : 0
				});
				
				if (response.comment.parent_id) {
					comment_element.inject($('' + response.comment.parent_id), 'after');
				} else {
					if (commentsHandler.new_thread_comment_form && commentsHandler.new_thread_comment_form.container.getParent().id == 'js-comments_add_block_top') {
						comment_element.inject($('js-comments_holder'), 'top');
					} else {
						comment_element.inject($('js-comments_holder'), 'bottom');
					}
				}
				
				if (options.onSubmitComment) {
					options.onSubmitComment();
				}
				
				$(comment_element).set('morph', {duration : 111, onComplete : function () {
					$(comment_element).style.maxHeight = 'none';
					$(comment_element).style.overflow = 'visible';
				}});
				$(comment_element).morph({
					'maxHeight' : 300,
					'opacity' : 1
				});
				
				commentsHandler.postProcess(comment_element);
				commentsHandler.setMaxImagesWidth(comment_element);
				datesHandler.setDates();
				popupHandler.update(comment_element);
				iconsHandler.update(comment_element);

				if (Math.random() < 0.01) {
					new futuAlert('Ничто так не радует, как хороший комментарий, %username%.');
				}
				
				commentsHandler.initComments(comment_element);

				$('js-comments_navigation_mine') && $('js-comments_navigation_mine')
					.fireEvent('refresh');
			}
		});
	},
	countComments : function () {
		if ($('js-comments_holder')) {
			var all_comments = $('js-comments_holder').getChildren('.comment').length;
			var shrinked_comments = $('js-comments_holder').getChildren('.shrinked').length;
			var new_comments = $('js-comments_holder').getChildren('.new').length;
			if ($('js-comments_trashhold_count')) {
				if (all_comments > 0) {
					$('js-comments_trashhold_count').innerHTML = (all_comments - shrinked_comments) + ' из ' + all_comments + ' ' + commentsHandler.getPluralComments(all_comments);
				} else {
					$('js-comments_trashhold_count').innerHTML = 'нет комментариев';
				}
			}
			if ($('js-new_comms')) {
				$('js-new_comms').getElement('.b-comments_count').innerHTML = '('+ new_comments +')';
			}
			if ($('js-all_comms')) {
				$('js-all_comms').getElement('.b-comments_count').innerHTML = '('+ all_comments +')';
			}
		}
	},
	getPluralComments : function (sec) {
		var texts = ['комментария', 'комментариев', 'комментариев'];
		return utils.getPlural(sec, texts);
	},
	switchNew: function () {
		if ($('js-comments_header_new_selector').hasClass('js-new_comms_active')) {
			$('js-comments_header_new_selector').removeClass('js-new_comms_active');
			$('js-comments_header_new_selector').addClass('js-all_comms_active');
			$('js-comments').removeClass('new_only');
			$('js-new_comms').addClass('hidden');
			$('js-all_comms').removeClass('hidden');
			if ($('js-comments_no_new_comments')) {
				$('js-comments_no_new_comments').addClass('hidden');
			}
		} else {
			$('js-comments_header_new_selector').addClass('js-new_comms_active');
			$('js-comments_header_new_selector').removeClass('js-all_comms_active');
			$('js-comments').addClass('new_only');
			$('js-new_comms').removeClass('hidden');
			$('js-all_comms').addClass('hidden');
			if ($('js-comments_no_new_comments') && $$('.show').length == 0) {
				$('js-comments_no_new_comments').removeClass('hidden');
			}
		}
	},
	showNoNewComments : function () {
		if ($('js-comments_no_new_comments')) {
			$('js-comments_no_new_comments').removeClass('hidden');
		}
	},
	new_comment_forms : {},
	toggleCommentForm : function (button, post_id, comment_id, button_src, citing_image) {
		if ($(button).hasClass('c_icon') && (button.getParent('.b-user_posts') || button.getParent('.b-search_docs_results'))) {
			return true;
		}
		var comment_holder = $(button).getParent('.comment');
		if (commentsHandler.new_comment_forms[comment_id]) {
			commentsHandler.new_comment_forms[comment_id].toggle(citing_image);
		} else {
			var new_comment_form_holder = new Element('div', {
				'style' : 'zoom:1;'
			});
			new_comment_form_holder.inject(comment_holder);
			commentsHandler.new_comment_forms[comment_id] = new commentForm(new_comment_form_holder, {
				onSubmit : function () {
					commentsHandler.sendNewComment({
						data : new_comment_form_holder.getElement('form').toQueryString(),
						new_comment_form : commentsHandler.new_comment_forms[comment_id],
						post_id : post_id,
						onSubmitComment : function () {
							commentsHandler.new_comment_forms[comment_id].clear();
							commentsHandler.new_comment_forms[comment_id].hide();
						}
					});
				},
				post_id : post_id,
				comment_id : comment_id,
				comment_user_name : comment_holder.getElement('.c_user') ? comment_holder.getElement('.c_user').innerHTML : '',
				focus_on_show : true,
				focus_on_build : true,
				closable : true,
				button_src: button_src
			});
			commentsHandler.new_comment_forms[comment_id].show(citing_image);
			
		}
		return false;
	},
	showParent : function (parent_id, this_id) {
		var parent = $(parent_id);
		var this_com = $(this_id);

		if (!parent) {
			return;
		}
		
		parent.addClass('show');
		
		if (!parent.getElement('.c_previous') || parent.getElement('.c_previous').href != '#' + parent_id) {
			if (parent.getElement('.c_previous')) {
				parent.getElement('.c_previous').destroy();
			}
			var prevLink = new Element('a', {
				'href':'#' + this_id,
				'html':'&darr;',
				'class':'c_previous',
				'events':{
					'click':function (e) {
						e = new Event(e);
						e.preventDefault();
						commentsHandler.commentsScroll(this_com);
						$(this).destroy();
					}
				}
			});
			
			parent.getElement('.c_footer .ddi') && prevLink.inject(parent.getElement('.c_footer .ddi'));
		}
		commentsHandler.commentsScroll(parent);
	},
	
	commentsScroll : function (target, focus) {
		var target_x = window.getScroll().x;
		var target_y = target.getPosition().y;
		if (focus) {
			window.windowScrollFocus = focus;
		} else {
			window.windowScrollFocus = false;
		}
		window.windowScroll.start(target_x, target_y);
	},
	validateCommentForm : function (form) {
		if (form.getElement('textarea').value.trim().length == 0) {
			new futuAlert('Не забудьте написать комментарий!');
			return false;
		} else {
			return true;
		}
	},
	scrollToAndShowNewThreadCommentForm : function () {
		$('js-comments_add_block_bottom').getElement('.comments_add_block_bottom_link').addClass('hidden');
		commentsHandler.commentsScroll($('js-comments_add_block_bottom'), commentsHandler.new_thread_comment_form);
	},
	toggleFoldedComments : function (button, folded_block_id) {
		var button_holder = button.getParent('div');
		var folded_block = button_holder.nextSibling;
		if ($('js-comments_holder').getElement('.comment_in_folded_block_' + folded_block_id)) {
			$(button).getElement('span').addClass('hidden');
			$(button).getElement('i').removeClass('hidden');
			$('js-comments_folded_block_' + folded_block_id).destroy();
		} else {
			$(button).getElement('span').innerHTML = 'свернуть';
			$(button).getElement('span').removeClass('hidden');
			$(button).getElement('i').addClass('hidden');
			(new Element('div', {
				'id' : 'js-comments_folded_block_' + folded_block_id,
				'html' : folded_block.data
			})).inject(button_holder, 'after');
		}
		
		//$(this).getParent('.b-unfold_comment_block_link').destroy();
	},
	setThreshold : function (post_id) {
		var select_element = $('js-post_comments_threshold');
		var data = 'post=' + post_id + '&threshold=' + select_element.value;
		new futuAjax({
			button : $(select_element),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.post_comments_threshold,
			data : data,
			onLoadFunction : function (response) {
				window.location.reload();
			}
		});
		
	},
	setCommentsThreshold : function (post_id) {
		var select_element = $('js-select_threshold_comments_sort');
		var data = 'id=' + post_id + '&threshold=' + select_element.value;
		new futuAjax({
			button : $(select_element),
			color_to : '#FFF',
			color_from : '#FFF',
			url : ajaxUrls.post_comments_sorting,
			data : data,
			onLoadFunction : function (response) {
				window.location.reload();
			}
		});
		
	},
	toggleNewThreadCommentForm : function (post_id, container, button_src, focus_on_show) {
		var focus_on_show = focus_on_show || false;
		var button = $('js-toggle_new_thread_button');
		if (!commentsHandler.new_thread_comment_form) {
			var el = new Element('div', {
				'class': 'hidden b-comments_reply_block_container'
			});
			el.inject(document.body);
			commentsHandler.new_thread_comment_form = new commentForm(el, {
					onSubmit : function () {
						commentsHandler.sendNewComment({
							data : commentsHandler.new_thread_comment_form.container.getElement('form').toQueryString(),
							new_comment_form : commentsHandler.new_thread_comment_form,
							post_id : post_id,
							onSubmitComment : function () {
								commentsHandler.new_thread_comment_form.clear();
								commentsHandler.new_thread_comment_form.hide();
								button.removeClass('hidden');
							},
							target : 'top'
						});
					},
					onClose: function () {
						button.removeClass('hidden');
					},
					post_id : post_id,
					focus_on_show : focus_on_show,
					closable : true,
					button_src: button_src
			});
			commentsHandler.new_thread_comment_form.container.inject(container);
			button.addClass('hidden');
			commentsHandler.new_thread_comment_form.show();
		} else {
			commentsHandler.new_thread_comment_form.options.focus_on_show = focus_on_show;
			// Если блок с полем ввода раскрыт и находится в контейнере, относящемся к таргет-элементу,
			// то скрываем поле, иначе переносим поле в нужный контейнер
			if (commentsHandler.new_thread_comment_form.visible && container == commentsHandler.new_thread_comment_form.container.getParent()) {
				button.removeClass('hidden');
				commentsHandler.new_thread_comment_form.hide();
			} else {
				commentsHandler.new_thread_comment_form.container.inject(container);
				button.addClass('hidden');
				commentsHandler.new_thread_comment_form.show();
			}
		}
	},
	focusOnBottomCommentForm : function (user_login) {
		$('js-comments_add_block_bottom').getElement('textarea').focus();
		$('js-comments_add_block_bottom').getElement('textarea').value = user_login + ': ' + $('js-comments_add_block_bottom').getElement('textarea').value;
	},
 	onSetMaxImageWidth: function (img) {
 		/*  override / hook to this (via _.onAfter)
 			utilized by LeproPaint	 */
	},
	setMaxImagesWidth : function (scope) {
		var comments_images_elements = (scope || document.body).getElements('.b-post_body_pic img:not(.js-image_in_comments), .c_body img:not(.js-image_in_comments), .post img:not(.js-image_in_comments), .b-user_text img');
		comments_images_elements.addClass('js-image_in_comments');
		comments_images_elements.each(function (preview_image) {
			if (!preview_image.getParent('a')) {
				commentsHandler.onSetMaxImageWidth (preview_image)
				preview_image.addEvent('click', function () {
					$$('.js-image_opened').fireEvent('click');
					if (!preview_image.hasClass('js-image_in_comments_opened')) {
						preview_image.addClass('js-image_in_comments_opened');
						var preview_image_coordinates = preview_image.getPosition();
						var image_copy = new Element('img', {
							'src' : this.getAttribute('src'),
							'class' : 'js-image_opened',
							'events' : {
								'load' : function () {
									var windowCoords = $(window).getCoordinates();
									var original_image_height = image_copy.height;
									var original_image_width = image_copy.width;
									if (original_image_width > preview_image.width) {
										image_copy.set('styles', {
											'position' : 'absolute',
											'left' : preview_image_coordinates.x + 'px',
											'top' : preview_image_coordinates.y + 'px',
											'width' : preview_image.width + 'px',
											'height' : preview_image.height + 'px',
											'zIndex' : 2,
											'background-color': Colors.background_color
										});
										image_copy.get('morph').removeEvents('complete');
										image_copy.set('morph', {
											duration : 333,
											link : 'cancel'
										});
										var target_width = original_image_width < windowCoords.width ? original_image_width : windowCoords.width ;
										var k = target_width / original_image_width;
										var target_height = original_image_height * k;
										var target_top = $(window).getScroll().y + windowCoords.height / 2 - target_height/2;
										if (target_top < $(window).getScroll().y) {
											target_top = $(window).getScroll().y;
										}
										var target_left = preview_image_coordinates.x - ((target_width - preview_image.width)/2);
										if (target_left < $(window).getScroll().x) {
											target_left = $(window).getScroll().x;
										}
										if (target_width == windowCoords.width) {
											target_left = 0;
										}
										preview_image.setStyle('opacity', 0);
										image_copy.morph({
											'height' : target_height,
											'width' : target_width,
											'top' : target_top,
											'left' : target_left
										});
										image_copy.addEvent('click', function () {
											image_copy.get('morph').removeEvents('complete');
											image_copy.set('morph', {
												duration : 333,
												onComplete : function () {
													preview_image.removeClass('js-image_in_comments_opened');
													preview_image.setStyle('opacity', null);
													image_copy.destroy();
												}
											});
											image_copy.morph({
												'height' : preview_image.height,
												'width' : preview_image.width,
												'top' : preview_image_coordinates.y,
												'left' : preview_image_coordinates.x
											});
										});
										image_copy.inject(document.body);
									}
								}
							}
						});
					}
				});
			}
		});
	},
	toggleCollapsedComments : function (toggle_element, animation_disabled) {
		var collapsed_holder_element = $(toggle_element).getParent('.b-comments_collapsed');
		var comments_list_element = collapsed_holder_element.getElement('.b-comments_collapsed_comments');
		collapsed_holder_element.toggleClass('b-comments_collapsed_expanded');
		if (animation_disabled) {
			comments_list_element.set('styles', {
				'max-height' : 'none'
			});
		} else {
			comments_list_element.set('morph', {
				duration: 333,
				chain: 'ignore'
			});
			if (collapsed_holder_element.hasClass('b-comments_collapsed_expanded')) {
				comments_list_element.get('morph').start({
					'max-height' : 1000
				}).chain(function () {
					comments_list_element.set('styles', {
						'max-height' : 'none'
					});
				});
			} else {
				comments_list_element.set('styles', {
					'max-height' : 1000
				});
				comments_list_element.get('morph').start({
					'max-height' : 0
				});
			}
		}
	},
	scrollToCollapsedComment : function () {
		var comment_id = window.location.hash.substr(1);
		if ($(comment_id) && $(comment_id).hasClass('.comment')) {
			var comment_element = $(comment_id);
			if (comment_element.getParent('.b-comments_collapsed')) {
				var collapsed_comments_element = comment_element.getParent('.b-comments_collapsed');
				var toggle_collapsed_comments_element = collapsed_comments_element.getElement('.b-comments_collapsed_toggle');
				commentsHandler.toggleCollapsedComments(toggle_collapsed_comments_element, true);
				if (!Browser.chrome) {
					(function () {
						window.scrollTo(window.getScroll().x, comment_element.getPosition().y);
					}).delay(300);
				}
			}
		}
	},
	showAllParentsOfNewComments : function () {
		if (globals.user && !globals.user.dont_show_new_comments_parents) {
			var new_comments = $$('.comment.new');
			$A(new_comments).each(function (new_comment_element) {
				if (new_comment_element.getParent('.b-comments_collapsed')) {
					var collapsed_comments_element = new_comment_element.getParent('.b-comments_collapsed');
					var toggle_collapsed_comments_element = collapsed_comments_element.getElement('.b-comments_collapsed_toggle');
					commentsHandler.toggleCollapsedComments(toggle_collapsed_comments_element, true);
				}
				var iterated_comment_element = new_comment_element;
				while (iterated_comment_element && iterated_comment_element.getAttribute('data-parent_comment_id')) {
					var parent_comment_id  = iterated_comment_element.getAttribute('data-parent_comment_id');
					var parent_comment_element = $('' + parent_comment_id);
					if (parent_comment_element) {
						parent_comment_element.addClass('show');
					}
					iterated_comment_element = parent_comment_element;
				}
			});
		}
	},
	toggleCommentsLimitInfo: function(container, errors, button) {
		var el = container.getElement('.b-comments_reply_block_container_limit'),
			content,
			newHeight,
			text = '';

		if (!el) {
			el = new Element('div', {
				'class': 'b-comments_reply_block_container_limit',
				html: '<div class="b-comments_reply_block_container_limit_content"></div>'
			});
			el.inject(document.body);
			el.inject(container);
			el.set('styles', {
				overflow: 'hidden',
				height: 0
			});
		}
		for (var i = 0, l = errors.length; i < l; i++) {
			text += localMessages.getAccessError(errors[i], 'comment');
		}
		el.getElement('.b-comments_reply_block_container_limit_content').innerHTML = text;
		datesHandler.setDates();

		content = el.getElement('.b-comments_reply_block_container_limit_content');
		newHeight = el.getCoordinates().height == 0 ? content.getCoordinates().height : 0;

		new Fx.Morph(el, {
			duration: 100,
			onComplete: function() {
				if (el.getCoordinates().height > 0) {
					el.set('styles', {
						height: null
					});
				}
			}
		}).start({
				height: newHeight
			});
		return false;
	},
	
	toggleCommentUnderThreshold : function (button, scroll) {
		var comment_element = $(button).getParent('.comment');
		var comment_body_element = $(comment_element).getElement('.c_body');

		if (comment_body_element.hasClass('c_hidden')) {
			comment_body_element.removeClass('c_hidden');
			$(button).getPrevious('.c_answer').removeClass('c_hidden');
			$(button).getNext('.c_collapse').removeClass('c_hidden');
			$(button).addClass('c_hidden');

			var comment_body_height = comment_element.getElement('.c_body').clientHeight + parseInt(comment_element.getElement('.c_body').getStyle('margin-bottom'));
			comment_element.getElement('.c_body').set('data-height', comment_body_height);
			scroll && window.scrollBy(0, comment_body_element.get('data-height'));
		} else {
			scroll && window.scrollBy(0, -comment_body_element.get('data-height'));

			comment_body_element.addClass('c_hidden');
			$(button).getPrevious('.c_answer').addClass('c_hidden');
			$(button).getPrevious('.c_expand').removeClass('c_hidden');
			$(button).addClass('c_hidden');
		}
	},
	
	showLinkedComment : function () {
		if (window.location.hash) {
			var hash = window.location.hash.substr(1), comment_element = $(hash);

			if (comment_element && comment_element.hasClass('comment')) {
				comment_element.addClass('new');
			}
		}
	},
	
	timer_for_comments_init : null,
	setTimerForCommentsInit : function () {
		commentsHandler.initComments();
		commentsHandler.timer_for_comments_init = window.setInterval(function () {
			commentsHandler.initComments();
	    }, 500);
	},
	initComments : function (default_comment_element) {
		var comments_elements = default_comment_element ? [default_comment_element] : $$('.comment:not(.comment-initialized)');
		if (default_comment_element && !default_comment_element.hasClass('comment-initialized')) {
			commentsHandler.initComment(default_comment_element);
		} else {
			comments_elements.each(function (comment_element) {
				commentsHandler.initComment(comment_element);
			});
		}
	},
	initComment : function (comment_element) {
		comment_element.addClass('comment-initialized');
		if (!comment_element.getAttribute('data-comment_deleted')) {
			commentsHandler.initCommentVoting(comment_element);
			commentsHandler.initCommentReply(comment_element);
			commentsHandler.initCommentNavigation(comment_element);
			commentsHandler.initCommentIgnore(comment_element);
			futuMediaPlayer.initPopupMedia(comment_element);
			iconsHandler.update(comment_element);

			// Сворачиваем ветки, сохранённые в localStorage
			if (localStorage) {
				var localStorageObject = JSON.parse(localStorage.getItem('leprosorium_folded_comments')) || {},
					post_id = comment_element.get('data-post_id'),
					comment_id = String(comment_element.get('id'))
					tree_level = comment_element.get('data-tree_level'),
					button = comment_element.getElement('.b-button');

				if (localStorageObject[post_id] && localStorageObject[post_id].indexOf(comment_id) >=0) {
					this.toggleThread(button, tree_level);
				}
			}

			postControlsHandler.updateCodeTag(comment_element);
		}
	},
	initCommentReply : function (comment_element) {
		var reply_form_available = !comment_element.getAttribute('data-reply_form_unavailable');
		var post_id = comment_element.getAttribute('data-post_id');
		var comment_id = comment_element.getAttribute('id');
		var submit_button_src = comment_element.getAttribute('data-submit_button_src') || globals.domain.submit_button_src;
		if (reply_form_available) {
			comment_element.getElements('.c_answer').addEvent('click', function (e) {
				var e = new Event(e);
				if (!commentsHandler.toggleCommentForm(this, post_id, comment_id, submit_button_src)) {
					e.preventDefault();
				}
			});
		}
	},
	initCommentNavigation : function (comment_element) {
		var comment_id = comment_element.getAttribute('id');
		if (comment_element.getElement('.c_parent')) {
			var parent_button_element = comment_element.getElement('.c_parent');
			parent_button_element.addEvent('click', function (e) {
				var e = new Event(e);
				e.preventDefault();
				commentsHandler.showParent(comment_element.getAttribute('data-parent_comment_id'), comment_id);
			});
		}
	},
	initCommentCollapse : function (comment_element) {
		comment_element.getElements('.c_expand, .c_collapse').addEvent('click', function (e) {
			var e = new Event(e);
			e.preventDefault();
			commentsHandler.toggleCommentUnderThreshold(this, true);
		});
		comment_element.addClass('comment_collapse_initialized');
	},
	initNegativeCommentCollapse : function(comment_element, scroll) {
		var comment_user_gender = comment_element.get('data-user_gender');
		var comment_answer_button = comment_element.getElement('.c_answer');
		var comment_body_height = comment_element.getElement('.c_body').clientHeight + parseInt(comment_element.getElement('.c_body').getStyle('margin-bottom'));
		
		comment_element.getElement('.c_body').set('data-height', comment_body_height);
		
		if (! comment_element.getElement('.c_expand')) {
			var comment_hide_html = '<a href="#" class="c_expand">что {written}?</a> <a href="#" class="c_collapse c_hidden">отвратительно</a>'.substitute({
				'written' : comment_user_gender == 'male' ? 'он написал' : 'она написала'
			});

			comment_answer_button.appendHTML(comment_hide_html, 'after');
			commentsHandler.toggleCommentUnderThreshold(comment_element.getElement('.c_collapse'), scroll);
			commentsHandler.initCommentCollapse(comment_element);
		}
		
	},
	initCommentIgnore : function (comment_element) {
		var comment_user_id = comment_element.getAttribute('data-user_id');
		if (!comment_element.getAttribute('data-comment_deleted') && !comment_element.getAttribute('data-comment_ignored') && globals.user.id != comment_user_id) {
			var button_element = new Element('a', {
				'class' : 'b-controls_button b-icon_button_close',
				'html' : '&times;'
			});
			button_element.addEvent('click', function () {
				commentControlsHandler.showPanel({
					button : this,
					comment_id : comment_element.getAttribute('id'),
					user_id : comment_user_id,
					user_login : comment_element.getAttribute('data-user_login'),
					options:[
						'user_ignore'
					]
				});
			});
			button_element.inject(comment_element.getElement('.ddi'));
		}
	},
	initCommentVoting : function (comment_element) {
		var voting_element = comment_element.getElement('.vote');
		if (voting_element) {
			var voting_iHTML = '';
			var voting_plus_iHTML = '';
			var voting_minus_iHTML = '';
			var voting_voted_result = voting_element.getAttribute('data-user_vote');
			var comment_user_id = comment_element.getAttribute('data-user_id');
			
			voting_element.addEvent('mouseover', function () {
				voting_element.addClass('over');
			});
			voting_element.addEvent('mouseout', function () {
				voting_element.removeClass('over');
			});
			voting_plus_iHTML += '<a class="vote_button vote_button_plus {voted_plus_class}" onclick="voteHandler.vote(\'{comment_id}\', \'vote_button_plus\', \'comment\'); return false;" href="#">+<em></em></a>'.substitute({
				'comment_id' : comment_element.id,
				'voted_plus_class' : voting_voted_result == '1' ? 'vote_voted' : ''
			});
			voting_minus_iHTML += '<a class="vote_button vote_button_minus {voted_minus_class}" onclick="voteHandler.vote(\'{comment_id}\', \'vote_button_minus\', \'comment\'); return false;" href="#">&mdash;<em></em></a>'.substitute({
				'comment_id' : comment_element.id,
				'voted_minus_class' : voting_voted_result == '-1' ? 'vote_voted' : ''
			});
		
			voting_iHTML += voting_minus_iHTML;
			voting_iHTML += '<strong class="vote_result" onclick="voteResultsHandler.showVoteResult(\'{comment_id}\', \'comment\'); return false;">{comment_rating}</strong>'.substitute({
				comment_rating : voting_element.getElement('.vote_result').innerHTML,
				comment_id : comment_element.id
			});
			voting_iHTML += voting_plus_iHTML;
			voting_element.innerHTML = voting_iHTML;

			// Скрываем комментарий, если пользователь поставил ему минус
			if (globals.user.comments_collapse_on_minus && voting_voted_result == '-1') {
				this.initNegativeCommentCollapse(comment_element);
			}
		}
	},
	initCommentsNavigation: function() {
		var panel = $('js-comments_navigation'),
			current = {},
			comments = {}

 		$('js-comments_navigation_mine')
 			.addEvent('refresh', function() {
		 		['mine', 'new'].each(function(className) {
		 			comments[className] = $$('.comment.' + className);
		 			current[className] = -1;
		 		});

		 		commentsHandler.toggleCommentsNavigationActive(current, comments);
 			})

 		$('js-comments_navigation_mine')
 			.fireEvent('refresh');

		panel.getElements('.js-comments_jump')
			.addEvents({
				click: function(e) {
					var dir = this.get('data-dir'),
						className = this.get('data-class');

					if (window.windowScroll.isRunning() || !this.hasClass('active')) {
						return false;
					}

					animatePosts.navigateToComment(dir, e);
					
					current[className] = (current[className] + (dir == 'up' ? length - 1 : 1)) % length;
					
					commentsHandler.toggleCommentsNavigationActive(current, comments);
				}
			})
	},
	toggleCommentsNavigationActive : function(current, comments) {
		if (comments['mine'].length == 0) {
			$('js-comments_navigation_mine').removeClass('active');
		}
		else {
			$('js-comments_navigation_mine').addClass('active');
		}
	},
 	postProcess : function(scope) {
 		(scope || document.body).getElements('.c_body').each(function(comment_body_element) {
			postsCutHandler.resizeImages(comment_body_element);
 		});
 	},
 	getThreadComments: function (comment_element, tree_level) {
 		var comments = [];
 		comments.push(comment_element);
 		next_element = comment_element.getNext();
 		while (next_element && (
 				(next_element.tagName.toLowerCase() == 'a') ||
 				(next_element.hasClass('comment') && commentsHandler.commentIsInThread(next_element, tree_level)))) {
 			if (next_element.tagName.toLowerCase() != 'a') {
 				comments.push(next_element);
 			}
 			next_element = next_element.getNext();
 		}
 		return comments;
 	},
 	commentIsInThread: function (comment_element, tree_level) {
 		var comment_is_in_thread = true;
 		for (var i = tree_level; i >= 0; i--) {
 			if (comment_element.hasClass('indent_' + i)) {
 				comment_is_in_thread = false;
 				break;
 			}
 		}
 		return comment_is_in_thread;
 	},
 	toggleThread : function (button, tree_level) {
 		// toggle comment's content
 		var toggle_thread_element = button.getParent('.b-comment_thread_collapse');
 		var first_comment_height = toggle_thread_element.getParent('.comment').getElement('.c_body').getCoordinates().height;
 		toggle_thread_element.getAllNext().toggleClass('hidden');
 		toggle_thread_element.getParent('.c_footer').getAllPrevious().toggleClass('hidden');
 		toggle_thread_element.getParent('.c_footer').getElement('.c_vote') && toggle_thread_element.getParent('.c_footer').getElement('.c_vote').toggleClass('hidden');
 		button.getParent('.comment').toggleClass('b-comment_thread_folded_first');
 		
 		if (button.getParent('.comment').hasClass('b-comment_thread_folded_first')) {
 		    window.scrollTo(window.getScroll().x, window.getScroll().y - first_comment_height - 4);
 		} else {
 		    first_comment_height = toggle_thread_element.getParent('.comment').getElement('.c_body').getCoordinates().height;
 		    window.scrollTo(window.getScroll().x, window.getScroll().y + first_comment_height + 4);
 		}

 		// toggle all other thread comments
 		var comments_elements = commentsHandler.getThreadComments(button.getParent('.comment'), tree_level);
 		comments_elements.each(function (comment_element, i) {
 			if (i > 0) {
 				if (toggle_thread_element.hasClass('b-comment_thread__collapse')) {
 					comment_element.addClass('hidden');
 				} else {
 					comment_element.removeClass('hidden');
 					// open all collapsed comment if parent has been opened
 					if (comment_element.hasClass('comment') && comment_element.getElement('.b-comment_thread_collapse')) {
 						comment_element.getElement('.b-comment_thread_collapse').addClass('b-comment_thread__collapse');
 						comment_element.getElement('.b-comment_thread_collapse').getAllNext().removeClass('hidden');
 						comment_element.getElement('.c_body').removeClass('hidden');
 						comment_element.getElement('.c_vote') && comment_element.getElement('.c_vote').removeClass('hidden');
 						comment_element.removeClass('b-comment_thread_folded_first');
 						this.updateThreadFoldedState(comment_element, true);
 					}
 				}
 			}
 		}.bind(this));
 		toggle_thread_element.toggleClass('b-comment_thread__collapse');

 		var comment_element = toggle_thread_element.getParent('.comment');

 		if (!toggle_thread_element.hasClass('b-comment_thread__collapse')) {		
 			this.updateThreadFoldedState(comment_element);
 		}
 		else {
 			this.updateThreadFoldedState(comment_element, true);
 		}
 	},
 	markThread : function (button, tree_level) {
 		var comment_element = button.getParent('.comment');
 		var comments_elements = commentsHandler.getThreadComments(comment_element, tree_level);
 		comments_elements.each(function (comment_element, i) {
 			comment_element.addClass('b-comment_thread_' + tree_level);
 			comment_element.addClass('b-comment_thread_visible');
 			if (i == 0) {
 				comment_element.addClass('b-comment_thread_visible_first');
 			}
 			if (i == comments_elements.length - 1) {
 				comment_element.addClass('b-comment_thread_visible_last');
 			}
 		});
 	},
 	unmarkThread : function (button, tree_level) {
 		var comment_element = button.getParent('.comment');
 		var comments_elements = commentsHandler.getThreadComments(comment_element, tree_level);
 		comments_elements.each(function (comment_element, i) {
 			comment_element.removeClass('b-comment_thread_' + tree_level);
 			comment_element.removeClass('b-comment_thread_visible');
 			if (i == 0) {
 				comment_element.removeClass('b-comment_thread_visible_first');
 			}
 			if (i == comments_elements.length - 1) {
 				comment_element.removeClass('b-comment_thread_visible_last');
 			}
 		});
 	},
 	updateThreadFoldedState : function (comment_element, remove) {
 		var localStorageObject = localStorage && JSON.parse(localStorage.getItem('leprosorium_folded_comments')) || {},
 			post_id = comment_element.get('data-post_id'),
 			comment_id = String(comment_element.get('id')),
 			storage_comment_index = localStorageObject[post_id] ? localStorageObject[post_id].indexOf(comment_id) : -1;

 		if (!remove) {
 			if (storage_comment_index < 0) {
 				localStorageObject[post_id] ? localStorageObject[post_id].push(comment_id) : localStorageObject[post_id] = [comment_id];
 			}
 		}
 		else {
 			storage_comment_index >= 0 && localStorageObject[post_id].splice(storage_comment_index, 1);
 		}

 		localStorage && localStorage.setItem('leprosorium_folded_comments', JSON.stringify(localStorageObject));
 	}
};

commentForm = function (container, options) {
	if (!container) {
		new futuAlert('Укажите элемент для контейнера.');
		return false;
	}
	this.container = container;
	this.options = options || {};
	this.options.onSubmit = options.onSubmit || function () {};
	this.options.onClose = options.onClose || function () {};
	this.options.post_id = options.post_id || function () {};
	this.options.comment_id = options.comment_id || '';
	this.options.comment_user_name = options.comment_user_name || false;
	this.options.focus_on_build = options.focus_on_build || false;
	this.options.focus_on_show = options.focus_on_show || false;
	this.options.closable = options.closable || false;
	this.options.button_src = options.button_src || '/static/i/lepra/yarrr.gif';
	this.visible = false;
	this.build();
}
commentForm.prototype.set = function (param) {
	this.options[param] = param;
};
commentForm.prototype.show = function (citingImage) {
	this.container.set('styles', {
		'overflow' : 'hidden',
		'maxHeight' : 0
	});
	this.container.removeClass('hidden');
	
	this.container.get('morph').removeEvents('complete');
	this.container.set('morph', {
		duration : 222,
		onComplete : (function () {
			this.visible = true;
			this.container.set('styles', {
				'overflow' : ''
			});
			// Удаление файла при раскрытии блока комментариев
			// с уже проинициализированным загрузчиком файлов
			// чтобы избежать возникаемой ошибки в IE из-за скрытия flash-блока
			if (this.uploader && Browser.name == 'ie') {
				this.deleteFile();
			}
		}).bind(this)
	});
	
	this.container.morph({
		'maxHeight' : 1000
	});
	
	this.container.getElement('textarea').addEvent('focus', function () {
		keypress.stop_listening();
	});
	this.container.getElement('textarea').addEvent('blur', function () {
		keypress.listen();
	});
	
	this.container.getElement('textarea').value = this.container.getElement('textarea').value;
	if (this.options.focus_on_show && !citingImage) {
		if (/\bMSIE 6/.test(navigator.userAgent) && !window.opera) {
			
		} else {
			this.container.getElement('textarea').focus();
		}
		if (this.container.getElement('textarea').value.trim().length == 0) {
			this.container.getElement('textarea').value = this.options.comment_user_name ? this.options.comment_user_name + ', ' : '';
		}
	}
};
commentForm.prototype.hide = function (onComplete) {	
	this.container.set('morph', {
		duration : 222,
		onComplete : (function () {
			this.container.addClass('hidden');
			this.visible = false;
			if (onComplete) {
				onComplete();
			}
		}).bind(this)
	});
	
	this.container.morph({
		'maxHeight' : 0
	});
	
};
commentForm.prototype.toggle = function (citingImage) {
	if (this.container.hasClass('hidden')) {
		this.show(citingImage);
	} else {
		this.hide();
	}
};
commentForm.prototype.clear = function () {
	this.container.getElement('textarea').value = '';
};

commentForm.prototype.showFileForm = function () {
	this.container.getElement('textarea').value = '';
};

commentForm.prototype.validate = function () {
	if (this.container.getElement('textarea').value.trim().length == 0 && !this.container.getElement('input[name="media"]')) {
		ajaxHandler.highlightField(this.container.getElement('textarea'));
		this.container.getElement('textarea').focus();
		return false;
	}
	return true;
};

commentForm.prototype.build = function () {
	this.container.addClass('hidden');

	var dragContainer;
	var iHTML = '<div class="b-comments_reply_block">\
			<form action="" method="post">\
				<input type="hidden" value="" name="wtf">\
				<input type="hidden" value="{comment_id}" name="parent">\
				<input type="hidden" value="{post_id}" name="post">\
				<div class="b-textarea_editor"></div>\
				<div class="b-comments_add_textarea">\
					<textarea data-user-suggest-menu class="i-form_text_input" name="body"></textarea>\
				</div>\
				<div class="b-comments_bottom_bar">\
					<input class="b-comments_reply_block_yarrr" type="image" alt="YARRR!" src="{button_src}">\
					<a href="#" class="b-file_uploader_button"><span class="b-uploader_button_text">я, пожалуй, приложу картинку</span></a>\
					<div class="b-file_uploader hidden" id="js-file_uploader_{comment_id}">\
						<a href="#" class="b-comments_reply_block_delete_file">впрочем, без картинки тоже ничего</a>\
						<a href="#" id="js-file_uploader_button_{comment_id}" class="b-file_uploader_browse_button">выбрать файл</a>\
						<span class="b-file_uploader_drag" id="js-file_uploader_drag_{comment_id}">{drop_text}</span>\
					</div>\
				</div>\
			</form>\
		</div>'.substitute({
			post_id : this.options.post_id,
			comment_id : this.options.comment_id,
			drop_text: utils.isFileDragAndDropSupported() ? 'или перетащить сюда' : '',
			button_src: this.options.button_src
		});

	this.container.innerHTML = iHTML;

	UserSuggestMenu.autoInitialize(this.container);
	
	this.container.getElement('form').addEvent('submit', (function (e) {
		var e = new Event(e);
		e.preventDefault();
		if (this.validate()) {
			this.options.onSubmit();
		}
	}).bind(this));
	this.container.getElement('textarea').addEvent('keydown', (function (e) {
		if ((e.meta || e.control) && e.code == 13) {
			var e = new Event(e);
			e.preventDefault();
			if (this.validate()) {
				this.options.onSubmit();
			}
		}
	}).bind(this));
	this.wysiwyg = new wysiwyg(this.container.getElement('.b-textarea_editor'), this.container.getElement('.i-form_text_input'));
	
	if (this.options.closable) {
		var close_button_element = new Element('a', {
			'class' : 'b-close_btn',
			'html' : '&times;',
			'href' : '#'
		});
		close_button_element.inject(this.container.getElement('.b-comments_reply_block'));
		
		close_button_element.addEvent('click', (function (e) {
			e = new Event(e);
			e.preventDefault();
			this.hide(this.options.onClose);
		}).bind(this));
		close_button_element.addEvent('touchend', (function (e) {
			e = new Event(e);
			e.preventDefault();
			this.hide(this.options.onClose);
		}).bind(this));
	}

	if (this.options.focus_on_build) {
		this.container.getElement('textarea').focus();
	}

	if (utils.isFileUploadSupported()) {
		this.container.getElement('.b-file_uploader_button').addEvent('click', (function (e) {
			e = new Event(e);
			e.preventDefault();
			this.container.getElement('.b-file_uploader_button').addClass('hidden');
			this.container.getElement('.b-file_uploader').removeClass('hidden');
			if (!this.uploader) {
				this.uploader = new futuFileUploader({
					container: 'js-file_uploader_' + this.options.comment_id,
					browseButton: 'js-file_uploader_button_' + this.options.comment_id,
					dropElement: 'js-file_uploader_drag_' + this.options.comment_id,
					dropElementNode: $('js-file_uploader_drag_' + this.options.comment_id),
					uploadProgress: function(up, file) {
						$('js-file_uploader_drag_' + this.options.comment_id).innerHTML = file.name + '&nbsp;(' + file.percent + '%)';
					}.bind(this),
					uploadComplete: function(up, file, response) {
						ajaxHandler.highlightField($('js-file_uploader_' + this.options.comment_id), '#FFFFFF', '#556E8C');
					}.bind(this),
					fileUploaded: function(up, file, response) {
						var response = JSON.decode(response.response);
						if (response.media_id) {

							if (this.container.getElement('input[name="media"]')) {
								this.container.getElement('input[name="media"]').value = response.media_id;
							} else {
								var media_input = new Element('input', {
									type : 'hidden',
									name : 'media',
									value : response.media_id
								});
								media_input.inject(this.container.getElement('form'));
							}
						} else {
							if (response.status == 'ERR') {
								for (var i = 0; i < response.errors.length; i++) {
									ajaxHandler.alertError(localMessages.getErrorMessageByError(response.errors[i]));
								}
								return false;
							}
						}
					}.bind(this)
				});
			}
		}).bind(this));
	
		this.container.getElement('.b-comments_reply_block_delete_file').addEvent('click', (function (e) {
			e = new Event(e);
			e.preventDefault();
			this.deleteFile();
		}).bind(this));
	} else {
		this.container.getElement('.b-file_uploader_button').addClass('hidden');
	}
};
commentForm.prototype.deleteFile = function() {
	this.container.getElement('.b-file_uploader_button').removeClass('hidden');
	this.container.getElement('.b-file_uploader').addClass('hidden');
	$('js-file_uploader_drag_' + this.options.comment_id).innerHTML = utils.isFileDragAndDropSupported() ? 'или перетащить сюда' : '';
	if (this.container.getElement('input[name="media"]')) {
		this.container.getElement('input[name="media"]').destroy();
	}
};
subsAdsHandler = {
	sendPreview : function (form) {
		if (subsAdsHandler.checkPreview()) {
			if (!$(form).hasClass('js-loading')) {
				$(form).addClass('js-loading')
				var data = 'wtf=' + subsAdsHandler.wtf + '&preview=' + encodeURIComponent($('js-subs_ads_preview_body').value);
				ajaxLoadPost('/adsctl/', data, function (ajaxObj) {
					$(form).removeClass('js-loading')
					var response = ajaxHandler.checkResponse(ajaxObj);
					if (response) {
						//$('js-subs_ads_preview_logo').style.backgroundImage = 'url('+ response.preview.logo +')';
						$('js-subs_ads_preview_name').innerHTML = response.preview.body;
						$('js-subs_ads_preview').removeClass('hidden');
					}
				});
			}
		}
	},
	checkPreview : function () {
		if ($('js-subs_ads_preview_body').value.length < 1 || $('js-subs_ads_preview_body').value.length > 100) {
			ajaxHandler.highlightField($('js-subs_ads_preview_body'));
			return false;
		}
		return true;
	},
	askFinal : function () {
		var text =  'Вы действительно хотите купить рекламу на ' + subsAdsHandler.price*$('js-subs_ads_add_time').value + ' ЛВ?';
		Charley.ask({
			text:text,
			yes:'- Да, Пожалуйста!',
			no:'Вы знаете, я передумал',
			password:true,
			onYes:function () {
				subsAdsHandler.sendFinal($('js-subs_ads_form_final'));
			}
		});
	},
	sendFinal : function (form) {
		if (!$(form).hasClass('js-loading')) {
			$(form).addClass('js-loading');
			Charley.close();
			var data = 'wtf=' + subsAdsHandler.wtf + '&add=1&body=' + encodeURIComponent($('js-subs_ads_preview_body').value) + '&days=' + $('js-subs_ads_add_time').value + '&password=' + encodeURIComponent($('charley_holder').getElement('.password').value);
			ajaxLoadPost('/adsctl/', data, function (ajaxObj) {
				$(form).removeClass('js-loading')
				var response = ajaxHandler.checkResponse(ajaxObj);
				if (response) {
					var ad = subsAdsHandler.buildAdsBlock(response.ad);
					ad.inject($('js-subs_ads_current_holder'));
				}
			});
		}
	},
	cancel : function () {
		$('js-subs_ads_preview').addClass('hidden');
		$('js-subs_ads_preview_body').focus();
	},
	buildAdsBlock : function (ad) {
		var iHTML = '<a class="b-subs_ads_logo" href="#" style="background-image:url(' + ad.logo + ');"></a>';
		iHTML +=    '	<div class="b-subs_ads_text">';
		iHTML +=    '		<h2 class="b-subs_ads_name"><a href="//' + ad.url + '">' + ad.body + '&mdash;&nbsp;<span class="b-subs_ads_url">' + ad.url + '</span></a></h2>';
		iHTML +=    '		<div class="b-subs_ads_index">';
		iHTML +=    '			<input type="checkbox" />';
		iHTML +=    '			<label>выводить на главную</label>';
		iHTML +=    '		</div>';
		iHTML +=    '	</div>';
		iHTML +=    '	<div class="b-subs_ads_settings">';
		iHTML +=    '		<p class="b-subs_ads_expires">до ' + ad.expires + '</p>';
		iHTML +=    '		<p class="b-subs_ads_delete"><a href="#" onclick="subsAdsHandler.deleteAd(\'' + ad.id + '\', this); return false;">удалить</a></p>';
		iHTML +=    '		<p class="b-subs_ads_prolong"><a href="#" onclick="subsAdsHandler.prolong(\'' + ad.id + '\', this); return false;">продлить</a></p>';
		iHTML +=    '	</div>';
		var newAd = new Element('div', {'class':'b-subs_ads'});
		newAd.innerHTML = iHTML;
		return newAd;
	},
	prolong : function (id, button) {
		var iHTML = '<input type="text" value="1" class="b-subs_ads_prolong_time" onkeydown="subsAdsHandler.checkProlong(event, \''+ id+ '\', this);" /> дней';
		var subs_ads_prolong_holder = $(button).getParent('.subs_ads_prolong');
		subs_ads_prolong_holder.innerHTML = iHTML;
		subs_ads_prolong_holder.getElement('.subs_ads_prolong_time').focus();
	},
	checkProlong : function (e, id, input) {
		e = new Event(e);
		if (e.key == 'enter') {
			subsAdsHandler.askProlong(id, input);
		}
	},
	askProlong : function (id, input) {
		var text =  'Вы действительно хотите продлить рекламу на ' + subsAdsHandler.price*input.value + ' ЛВ?';
		Charley.ask({
			text:text,
			yes:'- Да, Пожалуйста!',
			no:'Вы знаете, я передумал',
			password:true,
			onYes:function () {
				subsAdsHandler.sendProlong(id, input);
			}
		});
	},
	sendProlong : function (id, input) {
		if (!$(input).hasClass('js-loading')) {
			$(input).addClass('js-loading');
			Charley.close();
			var data = 'wtf=' + subsAdsHandler.wtf + '&prolong=' + id + '&days=' + input.value + '&password=' + encodeURIComponent($('charley_holder').getElement('.password').value);
			ajaxLoadPost('/adsctl/', data, function (ajaxObj) {
				$(input).removeClass('js-loading')
				var response = ajaxHandler.checkResponse(ajaxObj);
				if (response) {
					var ads_expires = $(input).getParent('.subs_ads').getElement('.subs_ads_expires');
					var ads_prolong = $(input).getParent('.subs_ads').getElement('.subs_ads_prolong');

					ads_prolong.innerHTML = '<a href="#" onclick="subsAdsHandler.prolong(\'' + id + '\', this); return false;">продлить</a>';
					ads_expires.innerHTML = 'до ' + response.ad.expires;
				}
			});
		}
	},
	deleteAd : function (id, button) {
		//subsAdsHandler.askDeleteAd(id, button);
		subsAdsHandler.sendDeleteAd(id, button);
	},
	askDeleteAd : function (id, button) {
		var text =  'Вы действительно хотите удалить рекламу?';
		Charley.ask({
			text:text,
			yes:'- Да, Пожалуйста!',
			no:'Вы знаете, я передумал',
			password:true,
			onYes:function () {
				subsAdsHandler.sendDeleteAd(id, button);
			}
		});
	},
	sendDeleteAd : function (id, button) {
		if (!$(button).hasClass('js-loading')) {
			$(button).addClass('js-loading');
			var data = 'wtf=' + subsAdsHandler.wtf + '&delete=' + id;
			ajaxLoadPost('/adsctl/', data, function (ajaxObj) {
				$(button).removeClass('js-loading')
				var response = ajaxHandler.checkResponse(ajaxObj);
				if (response) {
					var ads_holder = $(button).getParent('.subs_ads');
					ads_holder.destroy();
				}
			});
		}
	},
	indexAd_all_length : 0,
	indexAd_filter_length : 0,
	indexAd_overflow_holder : false,
	indexAd_ad : false,
	indexAd_holder : false,

	toggleIndexHeaderAdInit : function (showAds) {
        subsAdsHandler.showAds = showAds;
        subsAdsHandler.adContainer = $('js-subs_ads_on_index');
        subsAdsHandler.adContainerWrapper = $('js-subs_ads_on_index__wrapper');
        this.setSize(0);
        if (!subsAdsHandler.showAds) {
            subsAdsHandler.adContainer.addClass('b-subs_ads_on_index_closed b-subs_ads_on_index_visible');
        }
        subsAdsHandler.winWidth = window.getSize().x;
        window.addEvent('resize', function(){
            var deltaWidth = subsAdsHandler.winWidth - window.getSize().x;
            subsAdsHandler.setSize(deltaWidth);
        })
	},
    setSize : function  (delta) {
        if (subsAdsHandler.showAds) {
            delta = 0;
        }
        subsAdsHandler.adContainerWidth = subsAdsHandler.adContainer.getSize().x - delta +'px';
        subsAdsHandler.adContainerHeight = subsAdsHandler.adContainer.getSize().y+'px';
        subsAdsHandler.adContainer.setStyles({
            'height': subsAdsHandler.adContainerHeight
        });
        $('js-subs_ads_on_index__roll').setStyles({
            'height': subsAdsHandler.adContainerHeight,
            'line-height': subsAdsHandler.adContainerHeight
        })
        subsAdsHandler.adContainerWrapper.setStyles({
            'position':'absolute',
            'width': subsAdsHandler.adContainerWidth
        });
    },
	toggleIndexHeaderAd : function () {
        if (!subsAdsHandler.lockAnimation) {
            var showAds = subsAdsHandler.showAds ? 0 : 1;
    		var data = 'show_ads='+showAds;
    		new futuAjax({
    			button : new Element('a'),
    			attribute : 'opacity',
    			color_to : 0.5,
    			color_from : 1,
    			url : ajaxUrls.profile_settings,
    			data : data,
    			onLoadFunction : function (response) {
                    if (showAds === 0) {
                        subsAdsHandler.lockAnimation = true;
                        subsAdsHandler.adContainer.addClass('b-subs_ads_on_index_closed b-subs_ads_on_index_visible');
                        setTimeout(function(){
                            subsAdsHandler.showAds = false;
                            subsAdsHandler.lockAnimation = false;
                        }, 200)
                    } else {
                        subsAdsHandler.lockAnimation = true;
                        $$('.l-wrapper')[0].setStyle('overflow-x', 'hidden');
                        subsAdsHandler.adContainer.removeClass('b-subs_ads_on_index_closed');
                        setTimeout(function(){
                            subsAdsHandler.adContainer.removeClass('b-subs_ads_on_index_visible');
                            $$('.l-wrapper')[0].setStyle('overflow-x', 'visible');
                            subsAdsHandler.showAds = true;
                            subsAdsHandler.lockAnimation = false;
                        },200)
                    }
    			}
    		});
        }
	}
};

inboxHandler = {
	// add people to inbox
	
	initNewInboxForm : function () {
		$('js-new_inbox_form').onkeydown = function (e) {
	        if (!e) e = window.event;
	        if ((e.metaKey || e.ctrlKey) && e.keyCode == 13) {
	            inboxHandler.submitNewInboxForm();
	        }
	    }
	},
	checkNewInboxForm : function () {
		if ($('js-new_inbox_to').value.trim().length < 1) {
			$('js-new_inbox_to').value = globals.user.login;
		}
		if ($('js-new_inbox_body').value.trim().length < 1) {
			new futuAlert('Напишите что-нибудь в письме!');
			ajaxHandler.highlightField($('js-new_inbox_body'));
			return false;
		}
		return true;
	},
	submitNewInboxForm : function () {
		if (inboxHandler.checkNewInboxForm()) {
			var data = 'to=' + encodeURIComponent($('js-new_inbox_to').value.trim()) + '&body=' + encodeURIComponent($('js-new_inbox_body').value.trim());
			new futuAjax({
				button : $('js-new_inbox_submit'),
				color_to : inboxHandler.customLoadingColor3,
				color_from : inboxHandler.customLoadingColor4,
				url : ajaxUrls.inbox_post_submit,
				data : data,
				onLoadFunction : function (response) {
					$('js-new_inbox_to').value = '';
					$('js-new_inbox_body').value = '';

					if (response.warnings) {
						new futuAlert('Письмо отправлено.');
						(function () {
							window.location.href = '/my/inbox/' + response.post.id;
						}).delay(2000);
					} else {
						window.location.href = '/my/inbox/' + response.post.id;
					}
				}
			});
		}
	}
};

/* inboxes controls */
inboxControlsHandler = {
	usersAdd : function (inbox_id) {
		var new_user_input_element = $('js-inbox_controls_send_to');
		if (new_user_input_element.value.trim() != '') {
			var data = 'post=' + inbox_id + '&call=' + encodeURIComponent(new_user_input_element.value.trim());
			new futuAjax({
				button : new_user_input_element,
				color_to : Colors.background_color,
				color_from : Colors.inputs_bg_color,
				url : ajaxUrls.inbox_acl,
				data : data,
				onLoadFunction : function (response) {
					new_user_input_element.value = '';
					
					var inbox_users_elements = $('js-inbox_controls_users');
					
					if (response.users.length > 0) {
						for (var i = 0; i < response.users.length; i++) {
							var new_user_element = new Element('span',{
								'class': 'b-inbox_controls_user',
								'html' : '<span class="b-inbox_controls_delete_user">[<a title="удалить" href="#" onclick="inboxControlsHandler.deleteUser(this, \'{inbox_id}\', \'{user_id}\'); return false;">x</a>]</span> <a href="/users/{user_login}" class="c_user{user_inactive}">{user_login}</a> <span class="b-inbox_controls_mute_user">[<a title="забанить" href="#" onclick="inboxControlsHandler.muteUser(this, \'{inbox_id}\', \'{user_id}\'); return false;">+</a>]</span> <span class="b-inbox_controls_unmute_user">[<a title="разбанить" href="#" onclick="inboxControlsHandler.unmuteUser(this, \'{inbox_id}\', \'{user_id}\'); return false;">-</a>]</span>'.substitute({
										'inbox_id' : inbox_id,
										'user_login' : response.users[i].login,
										'user_id' : response.users[i].id,
										'user_inactive' : response.users[i].active == 1 ? '' : ' b-removed_user'
								}),
								'id' : 'js-inbox_controls_user_' + response.users[i].id
							});
							new_user_element.inject(inbox_users_elements);
							inbox_users_elements.appendChild(document.createTextNode(' '));
						}
						$('js-inbox_controls_status').innerHTML = 'Письмо читают:';
						
						var user_count = $$('#js-inbox_controls_users .c_user').length;
						if (user_count > 5) {
							$('js-inbox_controls_user_toggle').removeClass('hidden');
						}
						$('js-inbox_controls_user_toggle').setAttribute('data-count', user_count - 5);
					} else {
						ajaxHandler.alertError('Никого не удалось добавить.');
					}
				}
			});
		} else {
			ajaxHandler.alertError('Введите имя пользователя!');
			ajaxHandler.highlightField(new_user_input_element);
		}
	},
	deleteInbox : function (button, inbox_id, onComplete) {
		new futuDialogPopup({
			text: 'Письмо взаправду удалится навсегда, точно?',
			type: 'confirm',
			callback: function() {
				var data = 'post=' + inbox_id;
				new futuAjax({
					button : $(button),
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					url : ajaxUrls.inbox_delete,
					data : data,
					onLoadFunction : function (response) {
						if (onComplete) {
							onComplete();
						}
						window.location.href = '/my/inbox';
					}
				});
			}
		});
	},
	deleteUser : function (button, post_id, user_id, onComplete) {
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.inbox_acl,
			data : 'post=' + post_id + '&expel=' + user_id,
			onLoadFunction : function (response) {
				var user_in_list_element = $('js-inbox_controls_user_' + user_id);
				user_in_list_element.destroy();
				
				var moar_users_count = parseInt($('js-inbox_controls_user_toggle').get('data-count'));
				if (moar_users_count <= 1) {
					$('js-inbox_controls_user_toggle').addClass('hidden');
				}
				$('js-inbox_controls_user_toggle').set('data-count', moar_users_count-1);
				
				if (!$('js-inbox_controls_users').getElement('.b-inbox_controls_user')) {
					$('js-inbox_controls_status').innerHTML = 'Письмо читаете только вы.';
				}
				if (onComplete) {
					onComplete();
				}
			}
		});
	},
	muteUser : function (button, post_id, user_id, onComplete) {
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.inbox_acl,
			data : 'post=' + post_id + '&mute=' + user_id,
			onLoadFunction : function (response) {
				var user_in_list_element = $('js-inbox_controls_user_' + user_id);
				user_in_list_element.addClass('b-inbox_controls_user_muted');
				if (onComplete) {
					onComplete();
				}
			}
		});
	},
	unmuteUser : function (button, post_id, user_id, onComplete) {
		new futuAjax({
			button : $(button),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.inbox_acl,
			data : 'post=' + post_id + '&unmute=' + user_id,
			onLoadFunction : function (response) {
				var user_in_list_element = $('js-inbox_controls_user_' + user_id);
				user_in_list_element.removeClass('b-inbox_controls_user_muted');
				if (onComplete) {
					onComplete();
				}
			}
		});
	},
	toggleExpandUsers : function(button) {
		if (!$('js-inbox_controls_users').hasClass('expanded')) {
			$('js-inbox_controls_users').addClass('expanded');
			button.set('text', 'Свернуть')
		}
		else {
			$('js-inbox_controls_users').removeClass('expanded');
			button.set('text', 'И ещё ')
		}
	}
};
amnesiaHandler = {
	validateRecoveryRequest : function () {
		var loginInput = $('js-amnesia_login'),
			emaiInput = $('js-amnesia_email');

		loginInput.value = loginInput.value.trim();
		emaiInput.value = emaiInput.value.trim();

		if (loginInput.value.trim().length == 0 && emaiInput.value.trim().length == 0) {
			ajaxHandler.highlightField(loginInput, '#E9DFC3', '#FF0000');
			ajaxHandler.highlightField(emaiInput, '#E9DFC3', '#FF0000');
			new futuAlert('Введите логин и адрес почты!');
			loginInput.focus();
			return false;
		} else if (loginInput.value.trim().length == 0) {
			ajaxHandler.highlightField(loginInput, '#E9DFC3', '#FF0000');
			new futuAlert('Введите логин!');
			loginInput.focus();
			return false;
		} else if (emaiInput.value.trim().length == 0) {
			ajaxHandler.highlightField(emaiInput, '#E9DFC3', '#FF0000');
			new futuAlert('Введите адрес почты!');
			emaiInput.focus();
			return false;
		}

		return true;
	},
	sendRecoveryRequest : function () {
		if (amnesiaHandler.validateRecoveryRequest()) {
			var login = $('js-amnesia_login').value,
				emailStr = 'адрес почты, указанный в настройках',
				loginStr = '';

			if ($('js-amnesia_email').value.trim().length) {
				emailStr = 'указанный адрес почты';
			}
			if (login.trim().length) {
				loginStr = ' для пользователя <a href="/users/' + login + '">' + login + '</a>';
			}

			new futuAjax({
				button : $('js-amnesia_recovery_request_form').getElement('.b-submit_button') || $('js-amnesia_recovery_request_form').getElement('button'),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.amnesia,
				data : $('js-amnesia_recovery_request_form').toQueryString(),
				onLoadFunction : function (response) {
					var msg = '<div style="font-size:15px; text-align:left;">Письмо со&nbsp;специальной ссылкой ушло на&nbsp;' + emailStr +
								'. Если вам удастся получить его и&nbsp;нажать на&nbsp;эту ссылку в&nbsp;течение 15 минут, ' +
								'тогда вы попадете на секретную страницу, где сможете установить новый пароль' + loginStr +
								'. В&nbsp;противном случае придется все повторять сначала.</div>';
					new futuAlert(msg, true);
					$('js-amnesia_recovery_request_form').reset();
				}
			});
		}
	}
};

userProfileHandler = {
    userNotes : function(user_id, user_login, scope) {
        var oldText = '';

        $extend(this, {
            container : (scope || document.body).getElement('#js-usernote'),
            input : null,
            default_notes_text : 'Место для заметок. Заметки могут быть видны всем гражданам.',

            sendNote : function () {
                document.removeEvent('click', this.sendNote);
                document.removeEvent('touchend', this.sendNote);

                popupHandler.unCache('user', user_id);

                if (this.input.value != oldText) {
                    var type = 'POST';
                    var url = router.generate('user_note');
                    if (this.container.hasClass('js-user_note_has_note')) {
                        var type = 'PUT';
                        var url = router.generate('user_note_set', {
                            note_id : this.container.getAttribute('data-note_id')
                        });
                    }
                    new futuAjaxNew({
                        button : this.container,
                        attribute: 'opacity',
                        color_to : '0.5',
                        color_from : '1',
                        type :  type,
                        url : url,
                        headerContentType: 'application/json',
                        data: JSON.encode({
                            user_login: user_login,
                            body: this.input.value
                        }),
                        onLoadFunction : function (response) {
                            this.setNote(response.body, response.id);
                        }.bind(this)
                    });
                }
                else {
                    this.setNote(oldText);
                }
            }.bind(this),
            setNote : function (text, note_id) {
                if (this.container.contains(this.input)) {
                    this.input = this.input.dispose();
                }

                if (text !== undefined && text !== null && text.trim() != '') {
                    this.container.innerHTML = text;
                    this.container.addClass('js-user_note_has_note');
                    this.container.setAttribute('data-note_id', note_id);
                } else {
                    this.container.innerHTML = this.default_notes_text;
                    this.container.removeClass('js-user_note_has_note');
                    this.container.removeAttribute('data-note_id');
                }

                this.container.removeClass('active');
            }.bind(this)
        });

        (this.input = new Element('input', {type: 'text', 'class': 'i-form_text_input usernote_input'}))
            .addEvents({
                keydown: function (e) {
                    e = new Event(e);

                    if (e.key == 'enter') {
                        this.sendNote();
                    }
                    else if (e.key == 'esc') {
                        this.setNote(oldText);
                    }
                }.bind(this),
                click: function (e) {
                    e = new Event(e);
                    e.stopPropagation();
                },
                focus: function (e) {
                    document.addEvent('click', this.sendNote);
                }.bind(this)
            });

        this.container.addEvent('click', function (e) {
            e = new Event(e);
            e.stopPropagation();

            var text = oldText = (new Element('textarea', {
                html : this.container.innerHTML.trim()
            })).value;

            if ( ! this.container.hasClass('js-user_note_has_note') || text == this.default_notes_text) {
                text = '';
            }

            this.container.empty().addClass('active');
            this.input
                .inject(this.container)
                .set('value', text)
                .focus();

            document.addEvent('click', this.sendNote);
            document.addEvent('touchend', this.sendNote);
        }.bind(this));

        this.container.getParent('.b-popup') || this.container.hasClass('js-user_note_has_note') || new futuAjaxNew({
            type : 'GET',
            button : this.container,
            animated_element : this.input,
            attribute : 'opacity',
            color_to : 1,
            color_from : 1,
            url : router.generate('user_note'),
            data : 'user_login=' + encodeURIComponent(user_login) + '&author_login=' + encodeURIComponent(globals.user.login),
            onLoadFunction : function (response) {
                if (response.user_notes && response.user_notes[0]) {
                    this.setNote(response.user_notes[0].body);
                    this.container.setAttribute('data-note_id', response.user_notes[0].id);
                } else {
                    this.setNote();
                }
                
            }.bind(this)
        });
    },
    togglePublicFavourites : function (button) {
        var data = 'public_favourites=';
        data += $('js-users_public_favourites').checked ? '1' : '0';
        new futuAjax({
            button : $(button).getParent(),
            color_to : Colors.links_color,
            color_from : Colors.links_visited_color,
            attribute : 'color',
            url : ajaxUrls.profile_settings,
            data : data,
            onLoadFunction : function (response) {

            }
        });
    },
    togglePublicNotes : function (button) {
        var data = 'public_notes=';
        data += $('js-users_public_notes').checked ? '1' : '0';
        new futuAjax({
            button : $(button).getParent(),
            color_to : Colors.links_color,
            color_from : Colors.links_visited_color,
            attribute : 'color',
            url : ajaxUrls.profile_settings,
            data : data,
            onLoadFunction : function (response) {

            }
        });
    }
};

editProfileHandler = {
    current_user_email : false,
    sendProfileData : function () {
        var sendData = function (password) {
            var data = $('js-edit_profile_form').toQueryString();
            if (editProfileHandler.current_user_email != $('js-profile_form_mail').value) {
                data += '&email=' + encodeURIComponent($('js-profile_form_mail').value);
            }
            if (password) {
                data += '&password=' + encodeURIComponent(password);
            }
            new futuAjax({
                button : $('js-profile_form_submit'),
                color_to : '#cccccc',
                color_from : '#f1f1f1',
                url : ajaxUrls.profile_details,
                data : data,
                onLoadFunction : function (response) {
                    if (profile_password_confirm) {
                        profile_password_confirm.close();
                    }
                    editProfileHandler.current_user_email = $('js-profile_form_mail').value;
                    if (response.csrf_token) {
                        globals.user.csrf_token = response.csrf_token;
                    }
                    if (response.birthday) {
                        editProfileHandler.setBirthday(response.birthday);
                    }
                    new futuAlert('Профайл обновлен');
                }
            });
        }
        if (editProfileHandler.current_user_email != $('js-profile_form_mail').value) {
            var profile_password_confirm = futu_password_confirm('Адрес почты&nbsp;&mdash; оплот безопасности.<br>Ваш пароль, пожалуйста:', sendData);
        } else {
            sendData();
        }
    },
    sendSettingsData : function () {
        var data = $('js-edit_settings_form').toQueryString();
        $A($('js-edit_settings_form').getElements('input[type=checkbox]')).each(function (checkbox_element) {
            if (!checkbox_element.checked) {
                data += '&' + checkbox_element.name + '=0';
            }
        });
        new futuAjax({
            button : $('js-settings_form_submit'),
            color_to : '#cccccc',
            color_from : '#e9e9e9',
            url : ajaxUrls.profile_settings,
            data : data,
            onLoadFunction : function (response) {
                new futuAlert('Настройки сайта обновлены');
            }
        });
    },
    passwordChangingInit: function() {
        this.currentPasswordField = $('js-password_current_password');
        this.passwordField = $('js-password_change_password');
        this.passwordConfirmField = $('js-password_change_repeat_password');

        if (this.currentPasswordField) {
            this.currentPasswordField.addListener('blur', this.validateCurrentPassword.bind(this));
            this.currentPasswordField.addListener('keyup', function() {
                this.removeFieldError(this.currentPasswordField);
            }.bind(this));
        }
        this.passwordField.addListener('blur', this.validatePassword.bind(this));
        this.passwordField.addListener('keyup', this.validatePasswordStrength.bind(this));
        this.passwordConfirmField.addListener('blur', this.validatePasswordConfirm.bind(this));
        this.passwordConfirmField.addListener('keyup', function() {
            this.passwordConfirmFieldFocused = true;
            this.removeFieldError(this.passwordConfirmField);
        }.bind(this));
    },
    validateCurrentPassword: function() {
        var container = this.currentPasswordField.getParent('.b-form_field'),
            strengthSign = container.getElement('.b-password_validation'),
            error = new Element('div', {
                'class': 'b-form_error'
            });
        if (this.currentPasswordField.value.trim().length < 1) {
            error.innerHTML = 'Заполните поле.';
            this.showError(this.currentPasswordField, error);
            this.showValidSign(this.currentPasswordField, 'invalid', 'valid');
        }
    },
    validatePassword: function() {
        var container = this.passwordField.getParent('.b-form_field'),
            strengthSign = container.getElement('.b-password_validation'),
            value = this.passwordField.value.trim(),
            error = new Element('div', {
                'class': 'b-form_error'
            });

        if (value.length < 1) {
            error.innerHTML = 'Заполните поле.';
            this.showError(this.passwordField, error);
            strengthSign.setStyle('display', 'none');
            this.showValidSign(this.passwordField, 'invalid', 'valid');
        } else if (value.length < 8) {
            error.innerHTML = 'Короткий пароль!';
            this.showError(this.passwordField, error);
            strengthSign.setStyle('display', 'none');
            this.showValidSign(this.passwordField, 'invalid', 'valid');
        }
        this.validatePasswordConfirm();
    },
    validatePasswordStrength: function() {
        var passwordInput = $('js-password_change_password');
        var container = passwordInput.getParent('.b-form_field');
        var strengthValidation = typeof zxcvbn === 'function' ? zxcvbn(passwordInput.value) : false;
        var className = 'b-password_validation';
        var validSign = container.getElement('.b-input_validation');
        var strengthSign = container.getElement('.' + className);

        var errorTextClassName = 'b-form_error';

        if (strengthValidation) {
            var error = new Element('div');
            switch (strengthValidation.score) {
                case 0:
                case 1:
                    className += ' b-password_validation_invalid';
                    error.innerHTML = 'Небезопасный пароль!';
                    break;
                case 2:
                case 3:
                    className += ' b-password_validation_weak';
                    errorTextClassName = 'b-form_error_weak';
                    error.innerHTML = 'Слабый пароль.';
                    break;
                case 4:
                    className += ' b-password_validation_valid';
                    errorTextClassName = 'b-form_error_valid';
                    error.innerHTML = '';
                    break;
            }
            validSign.setStyle('display', 'none');
            strengthSign.setStyle('display', 'block');
            strengthSign.setProperty('class', className);
            error.setProperty('class', errorTextClassName);
            container.getElement('.b-form_error_content')
                .empty()
                .adopt(error);
        }
    },
    validatePasswordConfirm: function() {
        var container = this.passwordConfirmField.getParent('.b-form_field'),
            errorText = container.getElement('.b-form_error_content'),
            validSign = container.getElement('.b-input_validation'),
            error;

        if (this.passwordConfirmFieldFocused) {
            if (this.passwordField.value != this.passwordConfirmField.value) {
                error = new Element('div', {
                    'class': 'b-form_error',
                    html: 'О нет! Они не совпададзе!'
                });
                this.showError(this.passwordConfirmField, error);
                this.showValidSign(this.passwordConfirmField, 'invalid', 'valid');
            } else if (this.passwordConfirmField.value.trim().length > 0) {
                this.removeError(errorText);
                this.showValidSign(this.passwordConfirmField, 'valid', 'invalid');
            } else {
                this.removeError(errorText);
                this.hideValidSign(this.passwordConfirmField);
            }
        }
    },
    showValidSign: function(input, addClass, removeClass) {
        var container = input.getParent('.b-form_field'),
            validSign = container.getElement('.b-input_validation');

        validSign
            .setStyle('display', 'block')
            .addClass('b-input_' + addClass)
            .removeClass('b-input_' + removeClass);
    },
    hideValidSign: function(input) {
        var container = input.getParent('.b-form_field'),
            validSign = container.getElement('.b-input_validation'),
            strengthSign = container.getElement('.b-password_validation');

        validSign.setStyle('display', 'none');
        if (strengthSign) {
            strengthSign.setStyle('display', 'none');
        }
    },
    showError: function(field, error) {
        var container = field.getParent('.b-form_field'),
            errorContainer = container.getElement('.b-form_error_content');

        this.removeError(field);
        errorContainer.adopt(error);
    },
    removeFieldError: function(input) {
        if (input) {
            this.removeError(input);
            this.hideValidSign(input);
        }
    },
    removeError: function(input) {
        var container = input.getParent('.b-form_field'),
            errorContainer = container.getElement('.b-form_error_content');

        errorContainer.empty();
    },
    changePassword : function (secret) {
        var data = $('js-password_change_form').toQueryString();

        this.passwordConfirmFieldFocused = true;
        if (this.currentPasswordField) {
            this.validateCurrentPassword();
        }
        this.validatePassword();
        this.validatePasswordConfirm();

        if (secret) {
            if ($('js-password_change_password').value.trim().length == 0 || ($('js-password_change_repeat_password').value.trim() != $('js-password_change_password').value.trim())) {
                new futuAlert('Два пароля, одинаковых, в две коробки&nbsp;&mdash; простая концепция.');
                return false;
            }
        } else {
            if ($('js-password_current_password').value.trim().length == 0 || $('js-password_change_password').value.trim().length == 0 || ($('js-password_change_repeat_password').value.trim() != $('js-password_change_password').value.trim())) {
                new futuAlert('Необходимо указать старый пароль и два раза новый.');
                return false;
            }
        }
        new futuAjax({
            button : $('js-password_change_form').getElement('.b-submit_button'),
            color_to : '#cccccc',
            color_from : '#e9e9e9',
            url : ajaxUrls.password,
            data : data,
            onLoadFunction : function (response) {
                $('js-password_change_form').reset();
                this.removeFieldError(this.passwordField);
                this.removeFieldError(this.passwordConfirmField);
                if (secret) {
                    new futuAlert('Пароль обновлен и вам можно <a href="/">войти</a>.', true);
                } else {
                    new futuAlert('Сейчас у вас новый пароль!');
                }
            }.bind(this)
        });
    }
};

profilePicHandler = {
    init: function() {
        this.initUploader();
    },
    initUploader: function() {
        if (!utils.isFileUploadSupported()) {
            $('js-userpic_uploader_container').addClass('hidden');
        }
        var dragContainer = $('js-userpic_uploader_drag_container');

        this.uploader = new futuFileUploader({
            container: 'js-userpic_uploader_container',
            browseButton: 'js-userpic_uploader_button',
            dropElement: 'js-userpic_uploader_drag_container',
            dropElementNode: $('js-userpic_uploader_drag_container'),
            fileUploaded: function(up, file, response) {
                var response = JSON.decode(response.response);

                if (response.media_id) {
                    this.changeAvatarImage(response.media_id);
                }
            }.bind(this)
        });
    },
    changeAvatarTitle: function(button) {
        var input = button.getNext('.b-userpic_title_input');

        button.addClass('hidden');
        button.hasClass('empty') || input.set('value', button.get('text'));
        input.removeClass('hidden').focus();

        function updateTitle() {
            var data = {
                title: input.value
            };

            new futuAjaxNew({
                button : input,
                attribute : 'opacity',
                color_to: 0.5,
                color_from: 1,
                url: ajaxUrls.profile_avatar('title', globals.current_user),
                data: JSON.encode(data),
                headerContentType: 'application/json',
                onLoadFunction : function (response) {
                    var container = $('js-userpic_wrapper'),
                        title = container.getElement('.b-userpic_title_add');

                    input.addClass('hidden');

                    if (response.title != '') {
                        button.removeClass('hidden');
                        title.removeClass('empty').innerHTML = response.title;
                    } else {
                        button.removeClass('hidden');
                        title.addClass('empty').innerHTML = 'добавить подпись';
                    }
                }
            });
        }

        input.addEvents({
            keyup: function(e) {
                if (e.event.keyCode === 13) {
                    updateTitle();
                }
                return false;
            }.bind(this),
            blur: function() {
                updateTitle();
            }.bind(this)
        });
    },
    changeAvatarImage: function(image_id) {
        var data = {
            image_id: image_id
        }

        new futuAjaxNew({
            button : new Element('a'),
            attribute : 'opacity',
            color_to: 0.5,
            color_from: 1,
            url: ajaxUrls.profile_avatar('image', globals.current_user),
            data: JSON.encode(data),
            headerContentType: 'application/json',
            onLoadFunction : function (response) {
                var container = $('js-userpic_wrapper'),
                    image = container.getElement('.b-userpic_image');

                image.set('src', response.image_location);
                $('js-userpic_uploader_container').addClass('uploaded');
                container.getElement('.b-userpic').removeClass('b-userpic_empty');
            }
        });
    }
};

profileBackgroundHandler = {
    init: function(login, price) {
        $('js-user_backgrounds_toggle').addEvent('click', function() {
            this.getParent().toggleClass('b-user_backgrounds_show');
            return false;
        });

        document.body.addEvent('click', function(e) {
            if (!e.target.hasClass('b-user_backgrounds') && !e.target.getParent('.b-user_backgrounds')) {
                profileBackgroundHandler.close();
            }
        });

        this.login = login;
        this.price = price;
        this.initUploader();
    },
    initUploader: function() {
        if (!utils.isFileUploadSupported()) {
            $('js-background_uploader_container').addClass('hidden');
        }
        var dragContainer = $('js-background_uploader_drag_container');

        this.uploader = new futuFileUploader({
            container: 'js-background_uploader_container',
            browseButton: 'js-background_uploader_button',
            dropElement: 'js-background_uploader_drag_container',
            dropElementNode: $('js-background_uploader_drag_container'),
            fileUploaded: function(up, file, response) {
                var response = JSON.decode(response.response)
                $$('.b-user_block').setStyle('background-image', 'url(' + response.media_url + ')');
                $('js-background_save') && $('js-background_save').set('text');

                var save_button_text = 'Оплатить?';

                var data = {
                    image_id: response.media_id
                }

                if (profileBackgroundHandler.login != globals.user.login) {
                    $('js-background_save').set('text', 'C вас ' + profileBackgroundHandler.price/100 + ' ЛВ. ');

                    var save_button_element = new Element('a', {
                        'text': save_button_text,
                        'events': {
                            click: function() {

                                var save_background = function(password) {
                                    data.password = password;
                                    profileBackgroundHandler.save(data);
                                }

                                Charley.ask({
                                    text: 'Вы покупаете фон для ' + profileBackgroundHandler.login + ' за ' + profileBackgroundHandler.price/100 + ' ЛВ',
                                    yes: '- Да, Пожалуйста!',
                                    no: 'Вы знаете, я передумал',
                                    password: true,
                                    onYes: save_background
                                });
                            }
                        }
                    });

                    $('js-background_save').removeClass('hidden');
                    save_button_element.inject($('js-background_save'));
                }
                else {
                    profileBackgroundHandler.save(data);
                }

            }.bind(this)
        });
    },
    save: function(data) {
        new futuAjaxNew({
            button : new Element('a'),
            attribute : 'opacity',
            color_to: 0.5,
            color_from: 1,
            url: ajaxUrls.getProfileBackgroundUrl(profileBackgroundHandler.login),
            data: JSON.encode(data),
            headerContentType: 'application/json',
            onLoadFunction : function (response) {
                var message = profileBackgroundHandler.login == globals.user.login ? 'Вы установили новый фон в своём профиле' : 'Вы приобрели фон для ' + profileBackgroundHandler.login; 
                $$('.b-user_backgrounds').removeClass('b-user_backgrounds_show');
                $('js-background_save') && $('js-background_save').set('text').addClass('hidden');
                $('js-background_remove') && $('js-background_remove').removeClass('hidden');
                Charley.charley && Charley.close();
                new futuAlert(message);
            }
        });
    },
    remove: function(button) {
        new futuAjaxNew({
            button : button,
            attribute : 'opacity',
            color_to: 0.5,
            color_from: 1,
            url: ajaxUrls.getProfileBackgroundUrl(profileBackgroundHandler.login),
            data: '',
            type: 'DELETE',
            headerContentType: 'application/json',
            onLoadFunction : function (response) {
                $$('.b-user_block')[0].setStyle('background-image');
                $('js-background_remove').addClass('hidden');
                new futuAlert('Фон удалён');
            }
        });
    },
    close: function() {
        $$('.b-user_backgrounds_show').removeClass('b-user_backgrounds_show');
    },
    toggleSetting: function(checkbox) {
        var checkbox_value = checkbox.checked ? '1' : '0';
        var data = 'block_external_profile_image=' + checkbox_value;
        new futuAjax({
            button : checkbox,
            attribute : 'opacity',
            color_to : 0.5,
            color_from : 1,
            url : ajaxUrls.profile_settings,
            data : data,
            onLoadFunction : function (response) {
            }
        });
    }
}

profileNavigationHandler = {
    replaceUriDirectory: function(uri_directory) {
        if (uri_directory == 'subs' || uri_directory == 'favs') {
            var compare_object = {
                'subs': ['domains'],
                'favs': ['favourites', 'posts']
            }

            Array.each(compare_object[uri_directory], function(element, index) {
                globals.uri_directory.splice(2 + index, 1, element);
            })
        }
    },
    renderPage: function() {
        profileNavigationHandler.replaceUriDirectory(globals.uri_directory[2]);

        profileNavigationHandler.renderSectionNavigation();
        profileNavigationHandler.renderContent();
        profileNavigationHandler.loadData();

    },
    renderSectionNavigation: function () {
        var all_buttons = $$('.b-menu__profile .b-menu_list_link');
        var active_button = $$('.b-menu__profile .b-menu_list_link[data-section="' + globals.uri_directory[2] + '"]');
        active_button = active_button[0] ? active_button[0] : all_buttons[0];
        all_buttons.removeClass('b-menu_list_link_active');
        active_button.addClass('b-menu_list_link_active');
    },
    renderContent: function () {
        var index_offset = 0;
        var index_len = 1;

        if (globals.uri_directory[3] == 'search') {
            index_offset = 1;
            index_len = 2;
        } else {
            $('js-profile_search_input').value = '';
        }

        var navigation_id = decodeURIComponent(globals.uri_directory.slice(0, 3 + index_offset).join('_')).toLowerCase();
        var profile_section = $$('*[data-navigation_id^="' + decodeURIComponent(navigation_id) + '"]')[0];

        $A($$('*[data-navigation_id]')).each(function (page_section_element) {
            page_section_element.toggleClass('hidden', profile_section != page_section_element);
        });
    },
    loadData: function() {
        var data_object = {};
        var index_offset = 0;
        var index_len = 1;

        if (globals.uri_directory[3] == 'search') {
            index_offset = 1;
            index_len = 2;
        } else {
            $('js-profile_search_input').value = '';
        }

        var navigation_id = decodeURIComponent(globals.uri_directory.slice(0, 3 + index_offset).join('_')).toLowerCase();
        var profile_section = $$('*[data-navigation_id^="' + decodeURIComponent(navigation_id) + '"]')[0];
        var data_type = globals.uri_directory.slice(2, 2 + index_len).join('/');
        var page = parseInt(globals.uri_directory[4 + index_offset]) ? parseInt(globals.uri_directory[4 + index_offset]) : 1;
        var data_object = { page : page };
        var target_user_login = globals.uri_directory[1];
        var url = ajaxUrls.getProfileData(data_type, target_user_login);
        var data = Object.toQueryString( Object.append(data_object, globals.uri_query) );
        var navigation_element = $$('.b-menu__profile')[0];

        profile_section.innerHTML = '';
        $('js-loader') && $('js-loader').inject(profile_section);
        profile_section.addClass('js-loading_animation');
        $('js-profile_search').toggleClass('hidden', !(globals.uri_directory[2] == 'posts' || globals.uri_directory[2] == 'comments'));

        new futuAjaxNew({
            button : profile_section,
            attribute : 'opacity',
            color_to : 1,
            color_from : 1,
            url : url,
            data : data,
            type : 'GET',
            onLoadFunction : function (response) {
                response = Object.merge(response, {
                    user : globals.user ? globals.user : null,
                    target_user : {
                        login : target_user_login
                    },
                    data_type : data_type,
                    query : globals.uri_query ? Object.toQueryString(globals.uri_query) : ''
                });
                response.scheme = (new URI()).parsed.scheme;

                $('js-paginator') && $('js-paginator').remove();

                if (data_type == '') {
                    env.render('profile_info.html', response, function (err, info_html) {
                        profile_section.removeClass('js-loading_animation');
                        $('js-loader').inject(document.body);
                        profile_section.innerHTML = info_html;

                        iconsHandler.update();
                        datesHandler.setDates();
                        postsCutHandler.resizeImages(profile_section);
                        commentsHandler.setMaxImagesWidth();
                        futuMediaPlayer.initPopupMedia(profile_section);

                        if (response.user_info.id == response.user.id) {
                            profilePicHandler.init();
                        }
                    });
                }
                else {
                    env.render('profile_docs.html', response, function (err, docs_html) {
                        profile_section.removeClass('js-loading_animation');
                        $('js-loader') && $('js-loader').inject(document.body);
                        profile_section.innerHTML = docs_html;

                        iconsHandler.update();
                        datesHandler.setDates();
                        postsCutHandler.resizeImages(profile_section);
                        commentsHandler.setMaxImagesWidth(profile_section);
                        futuMediaPlayer.initPopupMedia(profile_section);
                        postControlsHandler.updateCodeTag(profile_section);

                        if (response.comments) {
                            commentsHandler.initComments();
                        }

                        if (response.data_type == 'favourites') {
                            response.data_type = 'favs';
                        }

                        if (response.page_count > 1) {
                            new Paginator('js-paginator', response.page_count, 10, response.page, '/users/' + response.target_user.login + '/' + response.data_type + '/pages/', null, false, true, (globals.uri_query ? Object.toQueryString(globals.uri_query) : ''));
                        }
                    });  
                } 
            }
        });
    }
};

publicNotes = {
    init: function (container, user_login, price) {
        this.container = container;
        this.user_login = user_login;
        this.price = price;
        this.container.getElement('.b-user_public_notes_logo').addEvent('click', function () {
            publicNotes.toggleList();
        });
        this.container.getElement('.b-user_public_notes_list').addEvent('click', function () {
            publicNotes.toggleList(true);
        });
        this.container.getElement('.b-user_public_notes_authors').addEvent('click', function () {
            publicNotes.purchaseAuthors();
        });
        this.public_notes_sorting = JSON.parse(localStorage.getItem('public_notes_sorting'));
        this.public_notes_sorting = this.public_notes_sorting || {
            profiles : {}
        };
        this.loadNotes();
    },
    loadNotes: function (page, sorting) {
        page = page || 0;
        if (page > this.container.getElements('.b-pagination-item').length - 1) {
            page = 0;
        }
        if (page < 0) {
            page = this.container.getElements('.b-pagination-item').length - 1;
        }
        this.page = page;

        if (sorting) {
            this.public_notes_sorting.profiles[this.user_login] = sorting;
            localStorage.setItem('public_notes_sorting', JSON.stringify(this.public_notes_sorting));
        } else if (this.public_notes_sorting.profiles[this.user_login]) {
            sorting = this.public_notes_sorting.profiles[this.user_login];
        } else {
            sorting = 'rating';
        }

        this.container.getElements('.b-user_public_notes_sorting_button').removeClass('b-user_public_notes_sorting_button_active')
        this.container.getElement('.b-user_public_notes_sorting_button_' + sorting).addClass('b-user_public_notes_sorting_button_active')

        new FuturicoHttpRequest({
            url: router.generate('user_note'),
            data: {
                user_login: this.user_login,
                page: page + 1,
                per_page: 10,
                order_by: sorting
            },
            success: function (response) {
                env.render('profile_notes.html', response, function (err, notes_html) {
                    this.container.getElement('.b-user_public_notes_list').innerHTML = notes_html;
                    datesHandler.setDates();
                    popupHandler.update(this.container.getElement('.b-user_public_notes_list'));
                    this.container.getElements('.b-pagination-item').each(function (pagination_item, i) {
                        pagination_item.addEvent('click', function () {
                            publicNotes.loadNotes(i);
                        });
                    });
                    if (response.user_notes && response.user_notes[0]) {
                        this.container.addClass('b-user_public_notes_loaded');
                        if (response.user_notes[0].author) {
                            this.container.addClass('b-user_public_notes__authors');
                        }
                    } else {
                        this.container.addClass('hidden');
                    }
                }.bind(this));
            }.bind(this)
        });
    },
    toggleList: function (open) {
        if (open && this.container.hasClass('b-user_public_notes__opened')) {
            return;
        }
        this.container.getElement('.b-user_public_notes_list').set('styles', {
            height: this.container.getElement('.b-user_public_notes_list ul').getCoordinates().height + 'px'
        });
        this.container.toggleClass('b-user_public_notes__opened', open);
        this.container.getElement('.b-user_public_notes_list').get('morph').removeEvents('complete');
        this.container.getElement('.b-user_public_notes_list').set('morph', {
            duration: 100,
            onComplete: (function () {
                this.container.getElement('.b-user_public_notes_list').set('styles', {
                    height: 'auto'
                });
            }).bind(this)
        });
        this.container.getElement('.b-user_public_notes_list').morph({
            height: this.container.getElement('.b-user_public_notes_list ul').getCoordinates().height + 'px'
        });
    },
    purchaseAuthors: function () {
        var submitPurchase = function (password) {
            var data = {
                'password' : password,
                'target_user_login' : this.user_login
            };

            new futuAjaxNew({
                headerContentType: 'application/json',
                button : this.container.getElement('.b-user_public_notes_authors'),
                color_to : '0.5',
                color_from : '1',
                attribute : 'opacity',
                url: router.generate('user_notes_purchase'),
                data: JSON.encode(data),
                onLoadFunction : function (response) {
                    var date_ends = (new Date(response.ends_at*1000)).format('dd.mm.yyyy, HH:MM');
                    new futuAlert('Авторы будут открыты для вас до ' + date_ends, true);
                    Charley.close();
                    publicNotes.loadNotes();
                },
                onCustomErrorFunction: function (request) {
                    var response = JSON.decode(request.response);
                    var closeCharleyWindow = true;
                    for (var i = 0, l = response.errors.length; i < l; i++) {
                        if (response.errors[i].description.code == 'invalid_password') {
                            closeCharleyWindow = false;
                        }
                    }
                    if (closeCharleyWindow) {
                        Charley.close(null, 0);
                    }
                }
            });
        }.bind(this);
        Charley.ask({
            text: 'Вы хотите узнать авторов заметок о пользователе ' + this.user_login + ' за ' + this.price/100 + '&nbsp;ЛВ?',
            yes: '- Да, пожалуйста!',
            no: 'Вы знаете, я передумал',
            password: true,
            onYes: submitPurchase
        });
    },
    vote: function (button, note_id, value) {
        if (button.hasClass('vote_voted')) {
            return false;
        }
        button.getParent('.vote').getElements('.vote_voted').removeClass('vote_voted');
        button.addClass('vote_voted');
        new futuAjaxNew({
            headerContentType: 'application/json',
            button : button,
            color_to : '0.5',
            color_from : '1',
            attribute : 'opacity',
            url: router.generate('user_notes_vote', {
                note_id: note_id
            }),
            data: JSON.encode({
                vote: value
            }),
            onLoadFunction : function (response) {
                button.getParent('.vote').getElement('.vote_result').innerHTML = response.rating;
            }
        });
    }
};

var karmaHandler = {
	vote: function (value, position, user_id, target) {
		var container = target.getParent('.js-karma') || document.body;
		if (!target.hasClass('active')) {
			target.addClass('active');
			
			if (value == 'plus') {
				container.getElement('.b-karma_button__' + position + '_minus').removeClass('active');
			} else {
				container.getElement('.b-karma_button__' + position + '_plus').removeClass('active');
			}
			
			var newKarmaVote = 0;
			container.getElements('.b-karma_button').each(function (karmaButtonEl) {
				if (karmaButtonEl.hasClass('active')) {
					newKarmaVote += +karmaButtonEl.getAttribute('data-karma_value');
				}
			});
			
			new futuAjax({
				button: target,
				url: ajaxUrls.user_karma_vote,
				data: 'user=' + user_id + '&karma_value=' + newKarmaVote,
				attribute : 'opacity',
				color_to : 1,
				color_from : 1,
				onLoadFunction: function (response) {
					popupHandler.unCache('user', user_id);
					container.getElement('.b-karma_value_inner').innerHTML = response.karma;
				}
			});
		}
	}
};

tagsHandler = {
	private_tag_html : '<li id="js-private_tag_{tag_id}">\
		<a href="/tag/{tag_body}" class="b-post_tag">{tag_body}</a><a onclick="var e = new Event(event);tagsHandler.deleteTag(e, {tag_id}, {post_id}); return false;" href="#" title="отвратительно" class="b-controls_button b-icon_button_close">&times;</a>\
	</li>',
	public_tag_html : '<li><a href="/tag/{tag_body}" class="b-post_tag">{tag_body}</a>{comma}</li>',
	setTagsList : function (response, post_id) {
		var getTagsHTML = function (tags_type) {
			var html = '';
			var list = response[tags_type + '_tags'];
			for (var i = 0, l = list.length; i < l; i++) {
				html += tagsHandler[tags_type + '_tag_html'].substitute({
					tag_body : list[i].body,
					tag_id : list[i].id,
					post_id : post_id,
					comma: i < l - 1 ? ',' : ''
				});
			}
			return html;
		}
		$('js-post_tags_public').getElement('ul').innerHTML = getTagsHTML('public');
		$('js-post_tags_private').getElement('ul').innerHTML = getTagsHTML('private');
	},
	deleteTag: function(event, tag_id, post_id) {
		var button = event.target;
		new futuAjax({
			button : button,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url: ajaxUrls.tag_delete,
			data: 'tag_id=' + tag_id + '&post=' + post_id,
			onLoadFunction : function (response) {
				tagsHandler.setTagsList(response, post_id);
			}
		});
	},
	saveTags: function(button, post_id) {
		var input_element = $('js-post_tags_form').getElement('.i-form_text_input');
		if (input_element.value.trim().length == 0) {
			ajaxHandler.highlightField(input_element);
			return false;
		}
		var data = 'tag_body=' + input_element.value.trim();
		data += '&post=' + post_id;
		new futuAjax({
			button : input_element,
			color_to : Colors.background_color,
			color_from : Colors.inputs_bg_color,
			url: ajaxUrls.tags_add,
			data: data,
			onLoadFunction : function (response) {
				input_element.value = '';
				tagsHandler.setTagsList(response, post_id);
			}
		});
	},
	goToTagPosts : function () {
		if ($('js-tagname_input').value.trim().length < 1) {
			new futuAlert('Не забудьте написать что-нибудь в поле для тега.');
			ajaxHandler.highlightField($('js-tagname_input'));
		} else {
			window.location.href="/tag/" + encodeURIComponent($('js-tagname_input').value);
		}
	},
	toggleCloud : function () {
		var cloud_tags_element = $('js-tags_cloud').getElement('.b-cloud_inner');
		var cloud_toggle_element = $('js-tags_cloud').getElement('.b-cloud_toggle_button');
		if ($('js-tags_cloud').hasClass('b-cloud__opened')) {
			$('js-tags_cloud').removeClass('b-cloud__opened');
		} else {
			if (!cloud_tags_element.getElement('a')) {
				new futuAjax({
					button : cloud_toggle_element,
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					url: ajaxUrls.tags_cloud,
					data: '',
					onLoadFunction : function (response) {
						cloud_tags_element.innerHTML = response.template;
						$('js-tags_cloud').addClass('b-cloud__opened');
					}
				});
			} else {
				$('js-tags_cloud').addClass('b-cloud__opened');
			}
		}
	}
};


newPostHandler = {
	validateNewPost : function (preview) {
		if ($('js-new_post_body').value.trim().length < 1 && $('js-new_post_media_url').value == '') {
			$('js-new_post_body').focus();
			new futuAlert('Введите текст сообщения!');
			return false;
		}
		return true;
	},
	submitNewPost : function () {
		if (newPostHandler.validateNewPost()) {	
			var data = {};

			data.body = $('js-new_post_body').value;
			
			if ($('js-new_post_media_url').value) {
				data.media = {url: $('js-new_post_media_url').value};
			}

			new futuAjaxNew({
				attribute : 'opacity',
				button : $('js-new_post_submit'),
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.post_submit(),
				data : JSON.encode(data),
				type: 'POST',
				headerContentType: 'application/json',
				onLoadFunction : function (response) {
					var url;
					url = globals.domain.url;
					url += '/comments/' + response.id;
					window.location.href = url;
				}
			});
		}
	},
	file_uploader : null,
	initFileUploader : function (sandbox, response_url) {
		var file_container_element = $('js-new_post_file');
		if (utils.isFileUploadSupported()) {
			file_container_element.getElement('.b-file_uploader_button').addEvent('click', (function (e) {
				e = new Event(e);
				e.preventDefault();
				file_container_element.getElement('.b-file_uploader_button').addClass('hidden');
				file_container_element.getElement('.b-file_uploader').removeClass('hidden');
				if (!newPostHandler.file_uploader) {
					newPostHandler.file_uploader = new futuFileUploader({
						url: sandbox ? ajaxUrls.sandbox_media : ajaxUrls.media,
						container: 'js-file_uploader',
						browseButton: 'js-file_uploader_button',
						dropElement: 'js-file_uploader_drag',
						dropElementNode: $('js-file_uploader_drag'),
						uploadProgress: function(up, file) {
							$('js-file_uploader_drag').innerHTML = file.name + '&nbsp;(' + file.percent + '%)';
						},
						uploadComplete: function(up, file, response) {
							ajaxHandler.highlightField($('js-file_uploader'), '#FFFFFF', '#556E8C');
						},
						fileUploaded: function(up, file, response) {
							var response = JSON.decode(response.response);
							
							if (response_url && response.media_url) {
								if ($('js-new_post_media_url')) {
									$('js-new_post_media_url').value = response.media_url;
								} else {
									var media_input = new Element('input', {
										type : 'hidden',
										name : 'media',
										id : 'js-new_post_media_url',
										value : response.media_url
									});
									media_input.inject($('js-new_post_file'));
								}
							}
							else if (response.media_id) {
								if ($('js-new_post_media_id')) {
									$('js-new_post_media_id').value = response.media_id;
								} else {
									var media_input = new Element('input', {
										type : 'hidden',
										name : 'media',
										id : 'js-new_post_media_id',
										value : response.media_id
									});
									media_input.inject($('js-new_post_file'));
								}
							} 
							else {
								if (response.status == 'ERR') {
									for (var i = 0; i < response.errors.length; i++) {
										ajaxHandler.alertError(localMessages.getErrorMessageByError(response.errors[i]));
									}
									return false;
								}
							}
						}
					});
				}
			}));
		}
		if (!utils.isFileUploadSupported()) {
			$('js-new_post_file').addClass('hidden');
			return;
		}
	},
	deleteFile : function () {
		var file_container_element = $('js-new_post_file');
		file_container_element.getElement('.b-file_uploader_button').removeClass('hidden');
		file_container_element.getElement('.b-file_uploader').addClass('hidden');
		$('js-file_uploader_drag').innerHTML = utils.isFileDragAndDropSupported() ? 'или перетащить сюда' : '';
		if ($('js-new_post_media_id')) {
			$('js-new_post_media_id').value = '';
		}
		if ($('js-new_post_form').getElement('input[name="media"]')) {
			$('js-new_post_form').getElement('input[name="media"]').set('value');
		}
	},
	initMiniForm: function() {
		var form = $('js-new_post_form'),
			container = form.getParent();

		form.getElement('textarea').addEvent('focus', function() {
			container.addClass('b-new_post_miniform_expand');
		});

		form.getElement('textarea').addEvent('change', function() {
			if (this.value == '') {
				container.removeClass('b-new_post_miniform_written');
			}
			else {
				container.addClass('b-new_post_miniform_written');
			}
		});

		form.getElement('textarea').addEvents({
			'blur': function() {
				setTimeout(function() {
					if (!container.hasClass('b-new_post_miniform_written')) {
						container.removeClass('b-new_post_miniform_expand');
					}
				}.bind(this), 100);
			},
			'keydown': function (e) {
				var e = new Event(e);
				if ((e.meta || e.control) && e.code == 13) {
					e.preventDefault();
					newPostHandler.submitNewPost();
				}
			}
		});

		form.getElement('.b-new_post_miniform_yarrr').addEvent('click', function() {
			this.submitNewPost();
		}.bind(this));

		form.getElement('.b-file_uploader_button').addEvent('click', function() {
			container.addClass('b-new_post_miniform_uploading').addClass('b-new_post_miniform_written');
		});

		form.getElement('.b-new_post_delete_file').addEvent('click', function() {
			container.removeClass('b-new_post_miniform_uploading');
		});

		$('js-new_post_body_wysiwyg').getElements('.b-textarea_editor_button').each(function(el){
		    el.addEvent('click', function() {
		    	container.addClass('b-new_post_miniform_written');
		    });
		})

	}
};
newSubsiteHandler = {
	validateNewSubsiteForm : function () {
		if ($('js-new_domain_prefix').value.trim().length < 1) {
			new futuAlert('Не следует вот так просто нажимать на эту кнопку! Придумайте хорошее имя домена третьего уровня!');
			ajaxHandler.highlightField($('js-new_domain_prefix'));
			$('js-new_domain_prefix').focus();
			return false;
		}
		return true;
	},
	sendData: function (password) {
		var data = $('js-new_subdomain_form').toQueryString();
		if (password) {
			data += '&password=' + password;
		}

		new futuAjax({
			button : $('js-new_subdomain_submit_button'),
			url : ajaxUrls.domain_create,
			data : data,
			color_to : 0.5,
			color_from : 1,
			attribute : 'opacity',
			onLoadFunction : function (response) {
				if (response.domain_url) {
					window.location.href = '//' + response.domain_url;
				}
			}
		});
	},
	sendNewSubsiteForm : function () {
		if (newSubsiteHandler.validateNewSubsiteForm()) {
			Charley.ask({
				form: $('js-new_subdomain_form'),
				text: 'Вы создаёте подлепрозорий совершенно бесплатно!',
				yes: '- Да, Пожалуйста!',
				no: 'Вы знаете, я передумал',
				password: true,
				onYes: newSubsiteHandler.sendData
			});
		}
	}
};
invitesHandler = {
	resendInvite : function (button, invite_id) {
		new futuAjax({
			button : $(button),
			color_to : '#90BBED',
			color_from : '#556E8C',
			attribute : 'color',
			url : ajaxUrls.invite_resend,
			data : 'id=' + invite_id,
			onLoadFunction : function (response) {
				new futuAlert('Письмо отправлено заново.');
			}
		});
	},
	cancelInvite : function (button, invite_id) {
		new futuAjax({
			button : $(button),
			color_to : '#90BBED',
			color_from : '#556E8C',
			attribute : 'color',
			url : ajaxUrls.invite_cancel,
			data : 'id=' + invite_id,
			onLoadFunction : function (response) {
				$(button).getParent('.b-invite_issued').destroy();
				if (!$('js-issued_invites_holder').getElement('.b-invite_issued')) {
					$('js-issued_invites_holder').innerHTML = 'У Вас нет ни одного выпущенного приглашения.';
				}
				new futuAlert('Приглашение отменено');
			}
		});
	},
	validateInviteForm : function () {
		if ($('js-new_invite_email').value.trim().length < 1) {
			new futuAlert('Email-адрес необходимо обязательно указать.');
			return false;
		}
		if ($('js-new_invite_password').value.trim().length < 1) {
			new futuAlert('Это одно из немногих мест, где необходим ваш пароль. Безопасность, сами понимаете.');
			return false;
		}
		return true;
	},
	sendInvite : function () {
		if (invitesHandler.validateInviteForm()) {
			new futuAjax({
				button : $('js-new_invite_submit'),
				color_to : '#cccccc',
				color_from : '#e9e9e9',
				url : ajaxUrls.invite_issue,
				data : $('js-new_invite_form').toQueryString(),
				onLoadFunction : function (response) {
					var new_issued_invite_element = new Element('div', {'class' : 'b-invite_issued'});
					new_issued_invite_element.innerHTML = '<a href="mailto:{invite_email}" class="b-invite_issued_email">{invite_email}</a>\
						<div class="b-invite_issued_controls"><a href="#" onclick="invitesHandler.resendInvite(this, \'{invite_id}\'); return false;">отправить ещё раз?</a> | <a href="#" onclick="invitesHandler.cancelInvite(this, \'{invite_id}\'); return false;">забить?</a></div>'.substitute({
						'invite_email' : response.invite.email,
						'invite_id' : response.invite.id
					});
					
					if (!$('js-issued_invites_holder').getElement('.b-invite_issued')) {
						$('js-issued_invites_holder').innerHTML = 'Вы уже отправили приглашения на следующие адреса, но они никак на это не отреагировали:';
					}
					new_issued_invite_element.inject($('js-issued_invites_holder'));
					
					new futuAlert('Приглашение отправлено');
					
					$('js-new_invite_form').reset();
				}
			});
		}
	},
	sendDevitoInvite : function (button, post_id) {
		var sendData = function (password) {
			var data = 'post_id=' + post_id;
			if (password) {
				data += '&password=' + encodeURIComponent(password);
			}
			new futuAjax({
				button : $(button),
				color_to : 0.5,
				color_from : 1,
				attribute : 'opacity',
				url : ajaxUrls.invite_issue,
				data : data,
				onLoadFunction : function (response) {
					if (devito_password_confirm) {
						devito_password_confirm.close();
						$(button).getParent('.b-devito_invite').addClass('hidden');
						$(button).getParent('.b-devito_post').addClass('b-devito_post__no_invite');
						new futuAlert('Инвайт отправлен');
					}
				}
			});
		}
		var devito_password_confirm = futu_password_confirm('Инвайт&nbsp;&mdash; ценная штука, ваш пароль, пожалуйста:', sendData);
	}
};
invitesShopHandler = {
	invite_price : 1000,
	validatePurchaseForm : function () {
		var amount = parseInt($('js-invites_shop_form_amount').value, 10);
		if (!amount || amount <= 0) {
			ajaxHandler.highlightField($('js-invites_shop_form_amount'), '#f6efd2');
			return false;
		}
		return true;
	},
	sendPurchaseForm : function () {
		if (invitesShopHandler.validatePurchaseForm()) {
			$('js-invites_shop_form').submit();
		}
	},
	changeAmount : function (amount_element) {
		var amount = parseInt(amount_element.value, 10);
		if (amount && amount > 0) {
			$('js-invites_shop_form_purchase_summary').innerHTML = utils.getPlural(amount, ['инвайт', 'инвайта', 'инвайтов']) + ' за ' + amount * invitesShopHandler.invite_price + ' рублей.';
		}
	}
};
registerHandler = {
	errors: {
		login: {
			valid: false,
			field: 'loginField'
		},
		password: {
			valid: false,
			field: 'passwordField'
		},
		confirmPassword: {
			valid: false,
			field: 'passwordConfirmField'
		},
		email: {
			valid: false,
			field: 'emailField'
		},
		name: {
			valid: false,
			field: 'nameField'
		},
		last_name: {
			valid: false,
			field: 'lastNameField'
		},
		city_name: {
			valid: false,
			field: 'cityNameField'
		},
		gender: {
			valid: false
		},
		agreement: {
			valid: false
		}
	},
	connectedNetworks: [],
	socialData: null,
	sanitizedSocialData: null,

	init: function() {
		var socialNetworksButtons = $$('.b-social_network_icon');

		this.form = $('js-register_form');
		this.loginField = $('js-register_username');
		this.passwordField = $('js-register_password');
		this.passwordConfirmField = $('js-register_password_confirm');
		this.nameField = $('js-register_name');
		this.lastNameField = $('js-register_last_name');
		this.emailField = $('js-register_email');
		this.cityNameField = $('js-register_city_name');
		this.agreementInput = $('js-register_agreement');
		this.genderDefaultInput = $('js-register_sex_male');
		this.genderInputs = $$('.b-user_gender');

		this.form.addListener('submit', function(event) {
			var e = new Event(event);
			e.preventDefault();
			this.sendRegisterForm();
		}.bind(this));

		this.loginField.addListener('keyup', this.removeFieldError.bind(this, this.loginField));
		this.loginField.addListener('blur', this.validateLogin.bind(this, true, this.loginField.value.trim()));
		this.passwordField.addListener('blur', this.validatePassword.bind(this));
		this.passwordField.addListener('keyup', this.removeFieldError.bind(this, this.passwordConfirmField));
		this.passwordField.addListener('keyup', this.validatePasswordStrength.bind(this));
		this.passwordConfirmField.addListener('blur', this.validatePasswordConfirm.bind(this));
		this.passwordConfirmField.addListener('keyup', function() {
			this.passwordConfirmFieldFocused = true;
			this.removeFieldError(this.passwordConfirmField);
		}.bind(this));
		
		this.nameField.addListener('keyup', this.removeFieldError.bind(this, this.nameField));
		this.nameField.addListener('blur', this.validateName.bind(this, true));
		this.lastNameField.addListener('keyup', this.removeFieldError.bind(this, this.lastNameField));
		this.lastNameField.addListener('blur', this.validateLastName.bind(this, true));
		
		this.cityNameField.addListener('keyup', this.removeFieldError.bind(this, this.cityNameField));
		this.cityNameField.addListener('blur', this.validateCityName.bind(this, true));
		
		if (this.emailField) {
			this.emailField.addListener('keyup', this.removeFieldError.bind(this, this.emailField));
			this.emailField.addListener('blur', this.validateEmail.bind(this, true));
		}
		this.agreementInput.addEvent('change', this.validateAgreement.bind(this));
		this.genderInputs.addEvent('change', this.validateGender.bind(this));

	},

	validateLogin: function(doValidationRequest, login, showError) {
		var container = this.loginField.getParent('.b-form_field'),
			errorText = container.getElement('.b-form_error_content'),
			validSign = container.getElement('.b-input_validation'),
			error,
			validLogin,
			login = login ? login : this.loginField.value.trim();

		if (login.length < 1) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Введите username!'
			});
			this.showError(this.loginField, error);
			this.showValidSign(this.loginField, 'invalid', 'valid');
			this.errors.login.valid = false;
		} else {
			this.errors.login.valid = true;
			if (doValidationRequest) {
				new futuAjax({
					button : this.loginField,
					color_to : '',
					color_from : '',
					url : ajaxUrls.validate_login,
					data : 'username=' + encodeURIComponent(login),
					checkResponseFunction: function(ajaxObj, text, url) {
						return this.checkAjaxResponseFunction(ajaxObj, text, url, showError);
					}.bind(this),
					onLoadFunction : function (response) {
						this.removeError(this.loginField);
						this.showValidSign(this.loginField, 'valid', 'invalid');
						this.errors.login.valid = true;
						this.loginField.value = login;
					}.bind(this)
				});
			}
		}
	},

	removeFieldError: function(input) {
		if (input) {
			this.removeError(input);
			this.hideValidSign(input);
		}
	},

	validatePassword: function() {
		var container = this.passwordField.getParent('.b-form_field'),
			errorText = container.getElement('.b-form_error_content'),
			validSign = container.getElement('.b-input_validation'),
			strengthSign = container.getElement('.b-password_validation'),
			error;
		if (this.passwordField.value.trim().length < 1) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Введите желаемый пароль.'
			});
			this.showError(this.passwordField, error);
			strengthSign.setStyle('display', 'none');
			this.showValidSign(this.passwordField, 'invalid', 'valid');
			this.errors.password.valid = false;
		} else if (this.passwordField.value.trim().length < 8) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Короткий пароль!'
			});
			this.showError(this.passwordField, error);
			strengthSign.setStyle('display', 'none');
			this.showValidSign(this.passwordField, 'invalid', 'valid');
			this.errors.password.valid = false;
		} else {
			this.errors.password.valid = true;
		}
		this.validatePasswordConfirm();
	},

	// Валидация стойкости пароля
	validatePasswordStrength: function() {
		if (this.checkingStrengthTimeout) {
			clearTimeout(this.checkingStrengthTimeout);
		}
		this.checkingStrengthTimeout = setTimeout(function() {
			var container = this.passwordField.getParent('.b-form_field'),
				errorText = container.getElement('.b-form_error_content'),
				validSign = container.getElement('.b-input_validation'),
				className = 'b-password_validation',
				errorTextClassName = 'b-form_error',
				strengthSign = container.getElement('.' + className),
				strengthValidation = typeof zxcvbn === 'function' ? zxcvbn(this.passwordField.value) : false,
				error;
			if (this.passwordField.value.trim().length < 1) {
				this.validatePassword();
			} else if (strengthValidation) {
				error = new Element('div');
				switch (strengthValidation.score) {
					case 0:
					case 1:
						className += ' b-password_validation_invalid';
						error.innerHTML = 'Небезопасный пароль!';
						break;
					case 2:
					case 3:
						className += ' b-password_validation_weak';
						errorTextClassName = 'b-form_error_weak';
						error.innerHTML = 'Слабый пароль.';
						break;
					case 4:
						className += ' b-password_validation_valid';
						errorTextClassName = 'b-form_error_valid';
						error.innerHTML = '';
						break;
				}
				validSign.setStyle('display', 'none');
				strengthSign.setStyle('display', 'block');
				strengthSign.setProperty('class', className);
				error.setProperty('class', errorTextClassName);
				this.showError(this.passwordField, error);
			} else {
				validSign.setStyle('display', 'none');
				strengthSign.setStyle('display', 'none');
				this.removeError(errorText);
			}
		}.bind(this), 50);
	},

	validatePasswordConfirm: function() {
		var container = this.passwordConfirmField.getParent('.b-form_field'),
			errorText = container.getElement('.b-form_error_content'),
			validSign = container.getElement('.b-input_validation'),
			error;

		if (this.passwordConfirmFieldFocused) {
			if (this.passwordField.value != this.passwordConfirmField.value) {
				error = new Element('div', {
					'class': 'b-form_error',
					html: 'Введенные пароли не совпадают!'
				});
				this.showError(this.passwordConfirmField, error);
				this.showValidSign(this.passwordConfirmField, 'invalid', 'valid');
				this.errors.confirmPassword.valid = false;
			} else if (this.passwordConfirmField.value.trim().length > 0 && this.errors.password.valid) {
				this.removeError(errorText);
				this.showValidSign(this.passwordConfirmField, 'valid', 'invalid');
				this.errors.confirmPassword.valid = true;
			} else {
				this.errors.confirmPassword.valid = false;
			}
		}
	},
	validateName: function() {
		var container = this.nameField.getParent('.js-input_container'),
			errorText = container.getElement('.b-form_error_content'),
			error;

		if (this.nameField.value.trim().length == 0) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Введите имя!'
			});
			this.showError(this.nameField, error);
			this.errors["name"].valid = false;
		} else {
			this.errors["name"].valid = true;
			this.removeError(errorText);
		}
	},
	validateLastName: function() {
		var container = this.lastNameField.getParent('.js-input_container'),
			errorText = container.getElement('.b-form_error_content'),
			error;

		if (this.lastNameField.value.trim().length == 0) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Введите фамилию!'
			});
			this.showError(this.lastNameField, error);
			this.errors["last_name"].valid = false;
		} else {
			this.errors["last_name"].valid = true;
			this.removeError(errorText);
		}
	},
	validateCityName: function() {
		var container = this.cityNameField.getParent('.js-input_container'),
			errorText = container.getElement('.b-form_error_content'),
			error;

		if (this.cityNameField.value.trim().length == 0) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Введите, пожалуйста, название своего города.'
			});
			this.showError(this.cityNameField, error);
			this.errors["city_name"].valid = false;
		} else {
			this.errors["city_name"].valid = true;
			this.removeError(errorText);
		}
	},
	validateEmail: function(doValidationRequest, email, showError) {
		if (!this.emailField) {
			this.errors.email.valid = true;
			return true;
		}
		var container = this.emailField.getParent('.b-form_field'),
			errorText = container.getElement('.b-form_error_content'),
			validSign = container.getElement('.b-input_validation'),
			email = email ? email : this.emailField.value.trim(),
			error;

		if (email.length < 1) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Введите правильный email!'
			});
			this.showError(this.emailField, error);
			this.showValidSign(this.emailField, 'invalid', 'valid');
			this.errors.email.valid = false;
		} else {
			this.errors.email.valid = true;
			if (doValidationRequest) {
				new futuAjax({
					button : this.emailField,
					color_to : '',
					color_from : '',
					url : ajaxUrls.validate_email,
					data : 'email=' + encodeURIComponent(email),
					checkResponseFunction: function(ajaxObj, text, url) {
						return this.checkAjaxResponseFunction(ajaxObj, text, url, showError);
					}.bind(this),
					onLoadFunction : function (response) {
						this.removeError(errorText);
						this.showValidSign(this.emailField, 'valid', 'invalid');
						this.errors.email.valid = true;
						this.emailField.value = email;
					}.bind(this)
				});
			}
		}
	},
	validateGender: function() {
		var container = this.genderDefaultInput.getParent('.js-input_container'),
			errorText = container.getElement('.b-form_error_content'),
			genderInput = $$('.b-user_gender:checked'),
			error;

		if (!genderInput.length) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Введите пол!'
			});
			this.showError(this.genderDefaultInput, error);
			this.errors.gender.valid = false;
		} else {
			this.errors.gender.valid = true;
			this.removeError(errorText);
		}
	},
	validateAgreement: function() {
		var container = this.agreementInput.getParent('.b-agreement'),
			errorText = container.getElement('.b-form_error_content'),
			error;

		if (!this.agreementInput || !this.agreementInput.get('checked')) {
			error = new Element('div', {
				'class': 'b-form_error',
				html: 'Мы не можем позволить вам зарегистрироваться, если вы не поставили галочку рядом с тем местом, где мы вас попросили прочитать и согласиться с нашим пользовательским соглашением.'
			});
			this.showError(this.agreementInput, error);
			this.errors.agreement.valid = false;
		} else {
			this.removeError(errorText);
			this.errors.agreement.valid = true;
		}
	},
	// Отображение и анимация ошибки
	showError: function(field, error) {
		var container = field.getParent('.js-input_container'),
			errorContainer = container.getElement('.b-form_error_content');

		// Очищаем элемент-контейнет ошибки
		this.removeError(field);

		if (error) {
			var opacityAnimation = function() {
				new Fx.Morph(error, {
					duration: 222
				}).start({
					opacity: 1
				});
			};
			// Вставляем элемент с ошибкой в контейнер
			errorContainer.adopt(error);

			// Если контейнер не содержал ранее в себе каких-либо ошибок,
			// происходит анимация высоты контейнера
			if (!errorContainer.hasClass('opened')) {
				error.setStyle('opacity', 0);
				errorContainer.addClass('opened');
				opacityAnimation();
			}
		}
	},
	removeError: function(input) {
		var container = input.getParent('.js-input_container'),
			errorContainer = container.getElement('.b-form_error_content');

		errorContainer.empty();
	},
	showValidSign: function(input, addClass, removeClass) {
		var container = input.getParent('.b-form_field'),
			validSign = container.getElement('.b-input_validation');

		validSign
			.setStyle('display', 'block')
			.addClass('b-input_' + addClass)
			.removeClass('b-input_' + removeClass);
	},
	hideValidSign: function(input) {
		var container = input.getParent('.js-input_container'),
			validSign = container.getElement('.b-input_validation');

		validSign.setStyle('display', 'none');
	},
	validateRegisterForm : function () {
		this.passwordConfirmFieldFocused = true;
		this.validateLogin();
		this.validatePassword();
		this.validatePasswordConfirm();
		this.validateEmail();
		this.validateName();
		this.validateLastName();
		this.validateCityName();
		this.validateGender();
		this.validateAgreement();
		for (var i in this.errors) {
			if (this.errors.hasOwnProperty(i)) {
				if (!this.errors[i].valid) {
					if (this.errors[i].field) {
						this[this.errors[i].field].focus();
					}
					return false;
				}
			}
		}
		return true;
	},
	sendRegisterForm : function () {
		if (registerHandler.validateRegisterForm()) {
			var data = $('js-register_form').toQueryString();

			new futuAjax({
				button : $('js-register_submit'),
				color_to : '0.5',
				color_from : '1',
				attribute : 'opacity',
				url : ajaxUrls.register,
				data : data,
				checkResponseFunction: function(ajaxObj, text, url) {
					return this.checkAjaxResponseFunction(ajaxObj, text, url);
				}.bind(this),
				onLoadFunction : function (response) {
					//_gaq.push(['_trackEvent', 'users', 'register']);
					ga('send', 'event', 'users', 'register', {'page': '/register'});
					window.location.href= '/';
				},
				onCustomErrorFunction: function() {
					for (var i in this.errors) {
						if (this.errors.hasOwnProperty(i)) {
							if (!this.errors[i].valid) {
								if (this.errors[i].field) {
									this[this.errors[i].field].focus();
								}
								return false;
							}
						}
					}
				}.bind(this)
			});
		}
	},
	checkAjaxResponseFunction: function(ajaxObj, text, url, showError) {
		var showError = typeof showError !== 'undefined' ? showError : true;
		var message = '';
		if (text) {
			var response = JSON.decode(ajaxObj);
		} else {
			var response = JSON.decode(ajaxObj.responseText);
		}

		if (response.status == 'ERR') {
			for (var i = 0; i < response.errors.length; i++) {
				if (this.validationErrors[response.errors[i].code] && showError) {
					this.validationErrors[response.errors[i].code].call(this, response.errors[i], url);
				} else {
					message += localMessages.getErrorMessageByError(response.errors[i], url);
					if (response.errors.length > 1 && i < response.errors.length - 1) {
						message += '<br>';
					}
					ajaxHandler.alertError(message);
				}
			}
			return false;
		}

		return response;
	},
	validationErrors: {
		username_in_use: function(error, url) {
			var loginsLength = error.alternative_logins.length,
				i = Math.floor(Math.random() * (loginsLength - 1)),
				text = 'Имя &ldquo;' + this.loginField.value.trim() + '&rdquo; уже занято, давайте <a href="#" class="js-valid_login">' + error.alternative_logins[i] + '</a>?',
				error = this.createErrorElement(text),
				validLogin = error.getElement('.js-valid_login');

			// Навешивание обработчика клика.
			// Замена введенного имени пользователя на предложенное имя
			validLogin.addListener('mousedown', function(event) {
				this.loginField.value = validLogin.innerHTML.trim();
				this.validateLogin(true, validLogin.innerHTML.trim());
				this.errors.login.valid = true;
			}.bind(this));
			validLogin.addListener('click', function(event) {
				event.preventDefault();
			}.bind(this));

			this.errors.login.valid = false;

			this.showError(this.loginField, error);
			this.showValidSign(this.loginField, 'invalid', 'valid');
		},
		invalid_username: function(error, url) {
			var text = localMessages.getErrorMessageByError(error, url),
				error = this.createErrorElement(text);

			this.errors.login.valid = false;
			this.showError(this.loginField, error);
			this.showValidSign(this.loginField, 'invalid', 'valid');
		},
		invalid_email: function(error, url) {
			var text = localMessages.getErrorMessageByError(error, url),
				error = this.createErrorElement(text);

			this.errors.email.valid = false;
			this.showError(this.emailField, error);
			this.showValidSign(this.emailField, 'invalid', 'valid');
		},
		email_in_use: function(error, url) {
			var text = localMessages.getErrorMessageByError(error, url),
				error = this.createErrorElement(text);

			this.errors.email.valid = false;
			this.showError(this.emailField, error);
			this.showValidSign(this.emailField, 'invalid', 'valid');
		},
		invalid_gender: function(error, url) {
			var text = localMessages.getErrorMessageByError(error, url),
				error = this.createErrorElement(text);

			this.errors.gender.valid = false;
			this.showError(this.genderDefaultInput, error);
		}
	},
	createErrorElement: function(text) {
		var error = new Element('div', {
			'class': 'b-form_error',
			html: text
		});
		return error;
	}
};

licenseHandler = {
	validateAgreement : function () {
		if (!$('js-user_agreement_brain').checked || !$('js-user_agreement_heart').checked) {
			new futuAlert('Вы должны согласиться и с пользовательским соглашением, и с принципами функционирования бизнеса.')
			return false;
		}
		return true;
	}
};

usersHandler = {
	search_timeout : null,
	onQueryKeyPress : function () {
		window.clearTimeout(usersHandler.search_timeout);
		usersHandler.search_timeout = window.setTimeout(usersHandler.searchByQuery, 300);
	},
	searchByQuery : function () {
		if ($('js-users_search_query').getAttribute('data-current_query') != $('js-users_search_query').value) {
			usersHandler.searchSubmit();
		}
	},
	onSetSorting : function (button) {
		if (!button.getParent('li').hasClass('active')) {
			button.getParent('ul').getElements('.active').removeClass('active');
		}
		button.getParent('li').toggleClass('active');
		usersHandler.searchSubmit();
	},
	clearSearchResults : function () {
		$('js-users_search_result').innerHTML = '';
	},
	searchSubmit : function (page) {
		window.clearTimeout(usersHandler.search_timeout);
		
		$('js-users_search_query').setAttribute('data-current_query', $('js-users_search_query').value);
		var page = page || 1;
		var data = {
			query : $('js-users_search_query').value.trim(),
			page : page
		};
		var url = router.generate('users_search');

		if ($('js-users_search_user_notes').checked) {
			url = router.generate('user_notes_search');
			$('js-users_search_users_filters').addClass('hidden');
			$('js-users_search_users_sorting').addClass('hidden');
			$('js-users_search_user_notes_flags').removeClass('hidden');

			if ($('js-users_search_my_notes').checked) {
				data.only_mine = '1';
			}
		} else {
			$('js-users_search_users_filters').removeClass('hidden');
			$('js-users_search_users_sorting').removeClass('hidden');
			$('js-users_search_user_notes_flags').addClass('hidden');

			if ($('js-users_search_sorting').getElement('.active')) {
				data.sort_by = $('js-users_search_sorting').getElement('.active').getAttribute('data-sorting');
			} else {
				data.sort_by = 'default';
			}
			if ($('js-users_search_gender').value) {
				data.gender = $('js-users_search_gender').value;
			}
			if ($('js-users_search_is_latvian').value.length) {
				data.is_latvian = $('js-users_search_is_latvian').value;
			}
			if ($('js-users_search_was_president').checked) {
				data.was_president = '1';
			}
			if ($('js-users_search_was_minister').checked) {
				data.was_minister = '1';
			}
			if ($('js-users_search_was_press_secretary').checked) {
				data.was_press_secretary = '1';
			}
		}
		

		if (page > 1) {
			$$('.b-load_more_posts_button').addClass('js-more_loading_animation');
		}
		new futuAjaxNew({
			type : 'GET',
			button : (new Element('div')),
			url : url,
			data : Object.toQueryString(data),
			onLoadFunction : function (response) {
				$$('.b-load_more_posts_button').removeClass('js-more_loading_animation');
				env.render('users_list.html', response, function (err, docs_html) {
					if (page > 1) {
						$$('.b-load_more_posts_button').destroy();
					} else {
						$('js-users_search_result').innerHTML = '';
					}
					$('js-users_search_result').appendHTML(docs_html);
				});
			}
		});
	},
	toggleUserInfo: function(event, section, user_login) {
		if (event.target.tagName.toLowerCase() == 'a' || event.target.tagName.toLowerCase() == 'img') {
			return;
		}
		if (section.hasClass('b-list_item_user_description__empty')) {
			var url = ajaxUrls.getProfileData('info', user_login);
			new futuAjaxNew({
				button : (new Element('div')),
				attribute : 'opacity',
				color_to : 1,
				color_from : 1,
				url : url,
				data : '',
				type : 'GET',
				onLoadFunction : function (response) {
					env.render('users_list_info.html', response, function (err, docs_html) {
						(new Element('div', {
							'html': docs_html,
							'class': 'b-list_item_user_description_info'
						})).inject(section);
						section.removeClass('b-list_item_user_description__empty');
						iconsHandler.update();
						datesHandler.setDates();
						postsCutHandler.resizeImages(section);
						commentsHandler.setMaxImagesWidth();
						futuMediaPlayer.initPopupMedia(section);
					});
				}
			});
		} else {
			section.toggleClass('b-list_item_user_description__folded');
		}
	}
};

electionsHandler = {
	vote: function () {
		var form = $('js-vote_form'),
			data = form.toQueryString(),
			candidateContainer = $('js-current_candidate'),
			candidateEl = $('js-candidate_login');
		if(electionsHandler.validateForm()) {
			new futuAjax({
				button: $('js-vote_submit_button'),
				attribute: 'opacity',
				color_to: 0.5,
				color_from: 1,
				url: ajaxUrls.elections_vote,
				data: data,
				onLoadFunction : function (response) {
					electionsHandler.updateVotingTable();

					candidateEl.innerHTML = '';
					if (candidateContainer.hasClass('hidden')) {
						candidateContainer.removeClass('hidden');
						candidateContainer.setStyles({
							maxHeight: 0,
							opacity: 0
						});
						new Fx.Morph(candidateContainer, {
							duration: 222,
							onComplete: function () {
								new Fx.Morph(candidateContainer, {
									duration: 222,
									onComplete: function () {
										candidateContainer.erase('style');
									}.bind(this)
								}).start({
									opacity: 1
								});
							}.bind(this)
						}).start({
							maxHeight: 500
						});
					} else {
						new Fx.Morph(candidateEl, {
							duration: 222,
							onComplete: function () {
								candidateEl.erase('style');
							}.bind(this)
						}).start({
							opacity: [0, 1]
						});
					}
					candidateEl.innerHTML = '<a href="/users/{login}">{login}</a>'.substitute({
						login: response.candidate.user.login
					});

					form.reset();
					Recaptcha.reload('t');
				},
				onCustomErrorFunction: function () {
					Recaptcha.reload();
				}
			});
		}
	},
	cancelVote: function () {
		var button = $('js-unvote_button'),
			candidateContainer = $('js-current_candidate');

		new futuAjax({
			button: button,
			attribute: 'opacity',
			color_to: 0.5,
			color_from: 1,
			url: ajaxUrls.elections_unvote,
			data: '',
			onLoadFunction : function (response) {
				electionsHandler.updateVotingTable();

				new Fx.Morph(candidateContainer, {
					duration: 222,
					onComplete: function () {
						new Fx.Morph(candidateContainer, {
							duration: 222,
							onComplete: function () {
								candidateContainer.addClass('hidden');
								candidateContainer.erase('style');
							}.bind(this)
						}).start({
								height: [candidateContainer.getCoordinates().height, 0]
							});
					}.bind(this)
				}).start({
					opacity: 0
				});
			}
		});
	},
	validateForm: function () {
		var form = $('js-vote_form'),
			candidateField = form.getElement('input[name="candidate"]'),
			captchaField = $('recaptcha_response_field');

		candidateField.value = candidateField.value.trim();

		
		if (!candidateField || candidateField.value.trim() == '') {
			new futuAlert('Вы забыли ввести имя героя!');
			ajaxHandler.highlightField(candidateField, '#E9DFC3', '#FF0000');
			candidateField.focus();
			return false;
		}
		return true;
	},
	renderCandidatesIndex: function () {
		var table = $('js-elections_process'),
			cells,
			num,
			icon,
			className;

		if (table) {
			cells = table.getElements('.b-arrows_cell');
			cells.each(function (cell, i) {
				icon = cell.getElement('.b-arrow-ico');
				num = Math.round(Math.random()*2);
				className = 'b-arrow-ico';

				switch(num) {
					case 1:
						className += ' b-arrow-ico__down';
						break;
					case 2:
						className += ' b-arrow-ico__up';
						break;
					default:
						className += ' b-arrow-ico__none';
				}
				icon.set('class', className);
			});
		}
	},

	updateVotingTable: function () {
		var container = $('js-elections_process_container'),
			table = $('js-elections_process'),
			tableBody = table.getElement('tbody'),
			titleStat = table.getElement('.b-elections_title_description'),
			content,
			tr;

		if (table) {

			new futuAjax({
				button: $('js-vote_submit_button'),
				attribute: 'opacity',
				color_to: 0.5,
				color_from: 1,
				url: ajaxUrls.elections_candidates,
				data: '',
				onLoadFunction : function (response) {
					if (container.hasClass('hidden')) {
						container.removeClass('hidden');
					}

					if (response.top_candidates && response.top_candidates.length > 0) {
						content = new Element('table');
						for (var i = 0, l = response.top_candidates.length; i < l; i++) {
							tr = new Element('tr',{
								html: '<td class="b-arrows_cell"><i class="b-arrow-ico b-arrow-ico__none"></i></td><td class="b-num_cell">{num}</td><td class="b-main_cell {className}"><a href="/users/{login}">{login}</a></td><td>{votes_count}</td>'.substitute({
									login: response.top_candidates[i].user.login,
									num: i + 1,
									votes_count: parseInt(response.top_candidates[i].votes_count, 10),
									className: i == 0 ? 'b-leader' : ''
								})
							});
							tr.inject(content);
						}
						tableBody.innerHTML = content.innerHTML;
						electionsHandler.renderCandidatesIndex();
					} else {
						container.addClass('hidden');
					}
					if (response.votes_count) {
						var text = utils.getPlural(response.votes_count, ['Проголосовал', 'Проголосовало', 'Проголосовало']);
						titleStat.innerHTML = text + ' ' + response.votes_count + ' ' + utils.getPlural(response.votes_count, ['человек', 'человека', 'человек']) + '.';
					}
				}
			});
		}
	},
	expelVote: function(button, president_id) {
		var popup = $('js-impeachment_popup'),
			body = popup.getParent('body');

		if (!president_id) {
			popup.inject(body).removeClass('hidden');
		}
		else {
			new futuAjax({
				button : button,
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.elections_expel_vote,
				data : 'president_id=' + president_id,
				onLoadFunction : function (response) {
					popup.addClass('hidden');
					if (response.president_expelled) {
						new futuAlert('Президент уволен!');

						setTimeout(function(){
							location.reload();
						}, 1000);
					} 
					else {
						$('js-impeachment_voted').pick('#js-impeachment_vote');
						$('js-impeachment_votes').pick('#js-impeachment_no_votes');

						electionsHandler.expelUpdate(response);
					}
				},
				onCustomErrorFunction : function () {
					popup.addClass('hidden');
				}
			});
		}
	},
	expelVoteCancel: function(button, president_id) {
		new futuAjax({
			button : button,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.elections_cancel_expel_vote,
			data : 'president_id=' + president_id,
			onLoadFunction : function (response) {
				$('js-impeachment_vote').pick('#js-impeachment_voted');
				
				if (response.expelling_votes_count == 0) {
					$('js-impeachment_no_votes').pick('#js-impeachment_votes');
				}

				electionsHandler.expelUpdate(response);
			}
		});
	},
	expelUpdate: function(response) {
		$('js-impeachment_votes').getElement('i[data-name="count"]').set('text', response.expelling_votes_count);
		$('js-impeachment_votes').getElement('i[data-name="want"]').set('text', utils.getPlural(response.expelling_votes_count, ['хочет', 'хотят', 'хотят']));
		$('js-impeachment_votes').getElement('i[data-name="people"]').set('text', utils.getPlural(response.expelling_votes_count, ['человек', 'человека', 'человек']));
		$('js-impeachment_votes_left').set('text', response.voters_count_for_election - response.expelling_votes_count);
	}
};

/* Charley */

Charley = {
	holder : '',
	bg : '',
	charlies : '',
	charley : '',
	make_holder : function () {
		Charley.holder = new Element('div', {'id':'charley_holder'});
		Charley.bg = new Element('div', {'class':'black'});
		Charley.charlies = new Element('div', {'class':'charlies'});
		Charley.bg.inject(Charley.holder);
		Charley.charlies.inject(Charley.holder);
		Charley.holder.inject(document.body);
	},
	make_new : function (params) {
		Charley.holder.addClass('active_charley');
		Charley.charley = new Element('div', {'class':'charley'});
		var inner = new Element('div', {'class':'charley_inner'});
		var close = new Element('a', {'class':'close', 'events':{'click':Charley.close}});
		var text = new Element('div', {'class':'text', 'html':params.text});
		text.inject(inner);
		if (params.password) {
			var password_holder = new Element('div', {'class':'password_holder', 'html':'окошко для пароля '});
			var password = new Element('input', {'type':'password', 'class':'password i-form_text_input','name':'password', 'value':''});
			
			password.inject(password_holder);
			password_holder.inject(text);
			password.addEvent('keyup', function(e) {
				e = new Event(e);
				if (e.key == 'enter') {
					Charley.send(params, password);
				}
			});
		}
		if (params.yes) {
			var yes = new Element('a', {'class':'yes', 'html':params.yes, 'events':{'click':((function () {
					if (params.password) {
						Charley.send(params, password);
					} else {
						Charley.send(params);
					}
				})||$empty)}});
			yes.inject(inner);
		}
		if (params.no) {
			var no = new Element('a', {'class':'no', 'html':params.no, 'events':{'click':(params.onNo||Charley.close)}});
			no.inject(inner);
		}
		var clear = new Element('div', {'class':'clear'});
		clear.inject(inner);
		inner.inject(Charley.charley);
		close.inject(Charley.charley);
		Charley.bg.style.display = 'block';
		if (Browser.Engine.trident) {
			Charley.bg.style.height = document.getSize().y + 100 + 'px';
		}
		Charley.charley.inject(Charley.charlies);
		Charley.charley.set('morph', {duration: 999, transition:Fx.Transitions.Bounce.easeOut, onComplete : function () {
			if (params.password) {
				password.focus();
			}
		}});
		Charley.charley.morph({'margin-top': '200'});
	},
	ask : function (params) {
		if ($('charley_holder')) {
			if (!Charley.holder.hasClass('active_charley')) {
				Charley.make_new(params);
			}
		} else {
			Charley.make_holder();
			Charley.ask(params);
		}
	},
	close : function (event, time) {
		var duration = 666,
			delay = 700;

		if (time != undefined) {
			duration = time;
			delay = time;
		}

		new Fx.Morph(Charley.charley, {
			duration: duration,
			onComplete: function () {
				Charley.bg.style.display = 'none';
				Charley.charley.destroy();
				Charley.holder.removeClass('active_charley');
			}
		}).start({
			'margin-top': '-200'
		});
	},
	send : function (params, password) {
		if (params.password) {
			if (password.value.length > 0) {
				if (params.onYes) {
					params.onYes(encodeURIComponent(password.value));
				}
				/*if (params.form) {
					password.inject(params.form);
					params.form.submit();
				}*/
			} else {
				password.set('morph', {duration: 222});
				password.style.backgroundColor = '#FF0000';
				password.morph({'background-color':'#F6EFD2'})
			}
		} else {
			if (params.onYes) {
				params.onYes();
			}
			if (params.form) {
				params.form.submit();
			}
		}
	}
};

fraudHandler = {
	mskTime: null,
	toggleContainer: function (container, callback) {
		if (!container.hasClass('process_animation')) {
			var content = container.getElement('.b-hidden_content'),
				initialHeight = container.getCoordinates().height,
				height = container.hasClass('opened') ? 0 : content.getCoordinates().height;

			container.addClass('process_animation');

			new Fx.Morph(container, {
				duration: 222,
				onComplete: function () {
					if (container.hasClass('opened')) {
						container.removeClass('opened');
					} else {
						container
							.addClass('opened')
							.setStyle('height', 'auto');
						if (typeof callback == 'function') {
							callback();
						}
					}
					container.removeClass('process_animation');
				}.bind(this)
			})
			.start({
				height: [initialHeight, height]
			});
		}
	},
	setFocus: function () {
		$('js-pro_acc_prolongation_friend_input').focus();
	},
	changeUsername: function (sum) {
		var username = $('js-new_username'),
			price = sum / 100;
		var submitUsername = function (password) {
			var data = 'newusername=' + username.value.trim() + '&password=' + password;

			new futuAjax({
				button : $('js-new_username_submit_button'),
				color_to : '0.5',
				color_from : '1',
				attribute : 'opacity',
				url: ajaxUrls.fraud_username,
				data: data,
				onLoadFunction : function (response) {
					new futuAlert('Сейчас вас разлогинит и вы сможейте снова зайти, пользуясь никнеймом &laquo;' + username.value + '&raquo; и старым паролем.');
					(function () {
						window.location.href = '/';
					}).delay(2000);
				},
				onCustomErrorFunction: function (response) {
					var closeCharleyWindow = true;
					for (var i = 0, l = response.errors.length; i < l; i++) {
						if (response.errors[i].code == 'wrong_password') {
							closeCharleyWindow = false;
						}
					}
					if (closeCharleyWindow) {
						Charley.close(null, 0);
					}
				}
			});
		};
		if (username.value.trim().length == 0) {
			ajaxHandler.highlightField(username, '#E9DFC3', '#FF0000');
		} else {
			Charley.ask({
				text: 'Вы меняете себе имя пользователя за ' + price + '&nbsp;ЛВ.',
				yes: '- Да, пожалуйста!',
				no: 'Вы знаете, я передумал',
				password: true,
				onYes: submitUsername
			});
		}
	},
	validateGreeting : function () {
		if ($('b-date').value.trim().length < 10) {
			new futuAlert('Укажите, пожалуйста, дату, когда приветствие начнет показываться.');
			ajaxHandler.highlightField($('b-date'));
			$('b-date').focus();
			return false;
		}
		if ($('b-user_login').value.trim().length == 0) {
			new futuAlert('Кому вы собираетесь показывать приветствие?');
			ajaxHandler.highlightField($('b-user_login'));
			$('b-user_login').focus();
			return false;
		}
		if ($('b-user_greeting').value.trim().length == 0) {
			new futuAlert('Не забудьте про само приветствие, оно у вас сейчас пустое.');
			ajaxHandler.highlightField($('b-user_greeting'));
			$('b-user_greeting').focus();
			return false;
		}
		return true;
	},
	purchaseGreetings: function (sum) {
		if (fraudHandler.validateGreeting()) {
			var price = sum / 100,
				form = $('js-fraud_greetings_from'),
				greetingsTitle = $('js-greetings_title');

			var submitGreeting = function (password) {
				var data = form.toQueryString();
				data += '&password=' + password;

				new futuAjax({
					button : $('js-greeting_submit_button'),
					color_to : '0.5',
					color_from : '1',
					attribute : 'opacity',
					url: ajaxUrls.fraud_greetings,
					data: data,
					onLoadFunction : function (response) {
						form.reset();
						Charley.close();
						if (greetingsTitle) {
							fraudHandler.renderGreeting(response);
							if (greetingsTitle.hasClass('hidden')) {
								greetingsTitle.removeClass('hidden');
							}
						} else {
							new futuAlert('Вы купили приветствие ' + response.greeting_body + ' для ' + response.target_user_login);
							fraudShowcaseHandler.toggleGreetingsContainer();
						}
					},
					onCustomErrorFunction: function (response) {
						var closeCharleyWindow = true;
						for (var i = 0, l = response.errors.length; i < l; i++) {
							if (response.errors[i].code == 'wrong_password') {
								closeCharleyWindow = false;
							}
						}
						if (closeCharleyWindow) {
							Charley.close(null, 0);
						}
					}
				});
			};
			Charley.ask({
				text: 'Вы покупаете приветствие за ' + price + '&nbsp;ЛВ.',
				yes: '- Да, пожалуйста!',
				no: 'Вы знаете, я передумал',
				password: true,
				onYes: submitGreeting
			});
		}
	},
	renderGreeting: function (greeting) {
		var list = $('js-greetings_list');
		var date = new Date();
		var html = '{body}<div class="b-greetings_caption">Приветствие для <a href="/users/{login}" class="c_user">{login}</a> на \
						<span class="js-date js-date-regular-date" data-string_date="{date}"></span>\
					</div>'.substitute({
						body: greeting.greeting_body,
						login: greeting.target_user_login,
						date: greeting.date
					});
		var liEl = new Element('li', {
			html: html
		});
		liEl.inject(list, 'bottom');

		datesHandler.setDates();
	},
	datePickerInit: function () {
		if ($$('.i-input_date[name="start_date"]')[0]) {
			$$('.i-input_date[name="start_date"]')[0].value = this.mskTime.format('dd/mm/yyyy');
		}
		if ($$('.i-form_text_input[name="start_time"]')[0]) {
			$$('.i-form_text_input[name="start_time"]')[0].value = this.mskTime.format('HH:MM');
		}
		new Picker.Date($$('.i-input_date'), {
			positionOffset: {x: 0, y: 0},
			pickerClass: 'datepicker_dashboard',
			format: 'dd/mm/yyyy',
			blockKeydown: false,
			days_title: function(date) {
				return date.format('d mmmm yyyy');
			}
		});
	},
	showProAccountLink: function () {
		Charley.ask({
			text: '<a href="/fraud/refuel/">Пополните счет</a>, чтобы исправить это.'
		});
	},
	purchaseProAccount: function (sum, button, forFriend) {
		var price = sum / 100,
			forFriend = forFriend || false,
			dudeInput = $('js-pro_acc_prolongation_friend_input'),
			form,
			dude,
			text;

		if (forFriend) {
			form = $('js-friend_pro_acc_form');
			dude = dudeInput.value.trim();
		}
		var submitForm = function (password) {
			var data = 'password=' + password;

			if (dude) {
				data += '&dude=' + dude;
			}

			new futuAjax({
				button : button,
				color_to : '0.5',
				color_from : '1',
				attribute : 'opacity',
				url: ajaxUrls.fraud_professional,
				data: data,
				onLoadFunction : function (response) {
					if (dude) {
						form.reset();
						new futuAlert('Вы купили гражданство пользователю <a href="/users/' + response.target_user_login + '">' + response.target_user_login + '</a>.');
					} else {
						window.location.reload();
					}
					Charley.close();
				},
				onCustomErrorFunction: function (response) {
					var closeCharleyWindow = true;
					for (var i = 0, l = response.errors.length; i < l; i++) {
						if (response.errors[i].code == 'wrong_password') {
							closeCharleyWindow = false;
						}
					}
					if (closeCharleyWindow) {
						Charley.close(null, 0);
					}
				}
			});
		};
		if (forFriend && !dude) {
			ajaxHandler.highlightField(dudeInput, '#E9DFC3', '#FF0000');
		} else {
			if (dude) {
				text = 'Значит, вы продлеваете или покупаете лепро-гражданство пользователю ' + dude + '?';
			} else {
				text = 'Значит, вы продлеваете своё лепро-гражданство?';
			}
			text += ' Когда вы согласитесь, с вашего счета будет снято ' + price + ' ЛВ.';
			Charley.ask({
				text: text,
				yes: '- Да, пожалуйста!',
				no: 'Вы знаете, я передумал',
				password: true,
				onYes: submitForm
			});
		}
	},
	sendMoneyForRepatriation: function(form, receiver, price_for_year) {
		var input = form.getElement('input');

		var submitForm = function (password) {
			var data = 'password=' + password + '&receiver=' + receiver + '&amount=' + input.value * 100;

			new futuAjax({
				button : input,
				color_to : '0.5',
				color_from : '1',
				attribute : 'opacity',
				url: ajaxUrls.fraud_africa,
				data: data,
				onLoadFunction : function (response) {
					new futuAlert('Вы перевели ' + response.amount/100 + ' ЛВ пользователю ' + response.target_user_login);

					var progress = $('js-repatriation_progress').get('data-progress'),
						collected = parseInt($('js-repatriation_collected').get('data-collected')),
						left = $('js-repatriation_left') ? $('js-repatriation_left').get('data-left') : 0;

					collected += response.amount/100;
					left -= response.amount/100;
					progress = collected*100/price_for_year;

					$('js-repatriation_progress').set('data-progress', progress).setStyle('width', progress + '%');
					$('js-repatriation_collected').set({
						'data-collected': collected,
						'text': 'Собрано ' + collected + ' ЛВ'
					});
					$('js-repatriation_left') && $('js-repatriation_left').set({
						'data-left': left,
						'text': 'Осталось ' + left + ' ЛВ'
					});

					if (collected >= price_for_year) {
						location.reload()
					}
					else {
						Charley.close();
					}
				}
			});
		};

		Charley.ask({
			text: 'Значит, вы хотите перевести пользователю ' + receiver + ' ' + input.value + ' ЛВ?',
			yes: '- Да, пожалуйста!',
			no: 'Вы знаете, я передумал',
			password: true,
			onYes: submitForm
		});
	},
	repatriationProAccount: function(button, login) {
		new futuAjaxNew({
			button : button,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : '/api/users/' + login + '/repatriate/',
			data : '',
			onLoadFunction : function (response) {
				location.reload();
			}
		});
	},
	repatriationShowForm: function(button, login, price) {
		form = $('js-repatriation_form');
		form.removeClass('hidden');
		form.getElement('input').focus();
		button.set('onclick', 'fraudHandler.sendMoneyForRepatriation($("js-repatriation_form"),"' + login + '",' + price + ' ); return false;')

	},
	validatePreviewFreeTime : function () {
		if ($('b-start_date').value.trim().length < 10 || $('b-end_date').value.trim().length < 10) {
			new futuAlert('Даты начала и окончания блокировки (в&nbsp;формате&nbsp;&laquo;11/09/2001&raquo;) обязательны для заполнения.');
			return false;
		}
		if ($('js-fraud_freetime_form').getElement('input[name="start_time"]').value.trim().length < 5 || $('js-fraud_freetime_form').getElement('input[name="finish_time"]').value.trim().length < 5) {
			new futuAlert('Время начала и окончания блокировки (в&nbsp;формате&nbsp;&laquo;08:46&raquo;) обязательны для заполнения.');
			return false;
		}
		return true;
	},
	previewFreeTime : function () {
		if (fraudHandler.validatePreviewFreeTime()) {
			var data = $('js-fraud_freetime_form').toQueryString();
			new futuAjax({
				button : $('js-fraud_freetime_form').getElement('.b-freetime_submit'),
				color_to : '0.5',
				color_from : '1',
				attribute : 'opacity',
				url: ajaxUrls.fraud_freetime_preview,
				data: data,
				onLoadFunction : function (response) {
					$('js-fraud_freetime_form').addClass('hidden');
					$('js-freetime_preview').getElement('.b-freetime_duration').innerHTML = 'Итак, Вы собираетесь заблокировать себе доступ в Лепрозорий c {freetime_start} по {freetime_finish}. Этот поступок будет стоить Вам {freetime_price} ЛВ.'.substitute({
						freetime_price : response.price/100,
						freetime_start : (datesHandler.getUTCDate(response.start_at*1000 + datesHandler.mskTimeZone * datesHandler.msInHour)).format('d mmmm yyyy, HH:MM'),
						freetime_finish : (datesHandler.getUTCDate(response.finish_at*1000 + datesHandler.mskTimeZone * datesHandler.msInHour)).format('d mmmm yyyy, HH:MM')
					});
					$('js-freetime_preview').removeClass('hidden');
					$('js-freetime_price').value = response.price/100;
				}
			});
		}
	},
	resetFreeTime : function () {
		$('js-fraud_freetime_form').removeClass('hidden');
		$('js-freetime_preview').addClass('hidden');
		$('js-freetime_preview').getElement('.b-freetime_duration').innerHTML = '';
	},
	submitFreeTime : function () {
		var submitForm = function (password) {
			var data = $('js-fraud_freetime_form').toQueryString() + '&password=' + password;
			new futuAjax({
				button : $('js-freetime_preview') || $('js-fraud_freetime_form'),
				color_to : '1',
				color_from : '1',
				attribute : 'opacity',
				url: ajaxUrls.fraud_freetime_submit,
				data: data,
				onLoadFunction : function (response) {
					window.location.reload();
				},
				onCustomErrorFunction: function (response) {
					var closeCharleyWindow = true;
					for (var i = 0, l = response.errors.length; i < l; i++) {
						if (response.errors[i].code == 'wrong_password') {
							closeCharleyWindow = false;
						}
					}
					if (closeCharleyWindow) {
						Charley.close(null, 0);
					}
				}
			});
		};
		var text = 'Вы блокируете себе доступ за ' + $('js-freetime_price').value + ' ЛВ.';
		Charley.ask({
			text: text,
			yes: '- Да, пожалуйста!',
			no: 'Вы знаете, я передумал',
			password: true,
			onYes: submitForm
		});
	},
	validateSendMoneyToUser : function () {
		var form = $('js-friend_transfer_form'),
			receiverField = $('js-transfer_receiver'),
			amountField = $('js-transfer_amount'),
			passwordField = $('js-password'),
			commentsField = $('js-transfer_comments'),
			anonymousInput = $('js-anonymous_transfer'),
			data;

		if (receiverField.value.trim() == '') {
			ajaxHandler.highlightField(receiverField, '#F6EFD2');
			return false;
		} else if (amountField.value.trim() == '') {
			ajaxHandler.highlightField(amountField, '#F6EFD2');
			return false;
		}
		return true;
	},
	sendMoneyToUser: function () {
		var form = $('js-friend_transfer_form'),
			receiverField = $('js-transfer_receiver'),
			amountField = $('js-transfer_amount'),
			passwordField = $('js-password'),
			commentsField = $('js-transfer_comments'),
			anonymousInput = $('js-anonymous_transfer'),
			data;
			
		if (!fraudHandler.validateSendMoneyToUser()) {
			return false;
		}

		data = 'receiver=' + encodeURIComponent(receiverField.value) + '&amount=' + (amountField.value * 100) + '&password=' + encodeURIComponent(passwordField.value) + '&comments=' + encodeURIComponent(commentsField.value);
		if (anonymousInput.checked) {
			data += '&anonymous=1';
		}

		new futuAjax({
			button : $('js-money_transfer_submit'),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url: ajaxUrls.fraud_africa,
			data: data,
			onLoadFunction : function (response) {
				var anonymous = response.anonymous ? 'анонимный' : '',
					message = 'Пользователю  <a href="/users/' + response.target_user_login + '">' + response.target_user_login + '</a> отправлен ' +
								anonymous + ' перевод на сумму ' + (response.amount / 100) + '&nbsp;ЛВ.';
				new futuAlert(message);
				form.reset();
			}
		});
	},
	// Вывод московского и токийского времени
	setWorldTime: function (datetime) {
		var dateAndTime = datetime.split(' '),
			dateList = dateAndTime[0].split('/'),
			timeList = dateAndTime[1].split(':'),
			mskTime,
			tokioTime;

		this.mskTime = new Date(dateList[2], parseInt(dateList[1], 10) - 1, dateList[0], timeList[0], timeList[1], 0);

		mskTime = this.mskTime.format('d mmmm yyyy, HH:MM');
		tokioTime = new Date(this.mskTime.getTime() + datesHandler.msInHour * 5).format('d mmmm yyyy, HH:MM');
		$('js-world_time').innerHTML = 'И дата и время&nbsp;&mdash; московские, а прямо сейчас в Москве ' + mskTime + '. В Токио, тем временем&nbsp;&mdash; ' + tokioTime + '.'
	},
	// fraudHandler.refuelFunds
	refuelFunds : function (payment_system, min_amount, payment_type) {
		if ($('js-fraud_refuel_amount_input').value && $('js-fraud_refuel_amount_input').value < min_amount) {
			new futuAlert('Минимальная сумма пополнения лепро-счёта&nbsp;&mdash; ' + min_amount + ' рублей.');
			return false;
		}

		var fz54_contact = $('js-fraud_refuel_fz54_contact_input').value;
		if (!fz54ContactsHandler.isValid(fz54_contact)) {
			return false;
		}

		if ($('js-fraud_refuel_amount_input').value == '') {
			$('js-fraud_refuel_amount_input').value = '1000';
		}
		if (payment_system) {
			$('js-fraud_refuel_system').value = payment_system;
			$('js-fraud_funds_payment_type').value = payment_type ? payment_type : '';
			$('js-fraud_refuel_form').submit();
		}
	},
	refuelFundsByYandex : function () {
		var url = ajaxUrls.fraud_refuel;
		var data = 'payment_system=yandex&amount=' + $('js-fraud_refuel_amount_input').value;
		new futuAjax({
			button : $('js-fraud_refuel_yandex'),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url: url,
			data: data,
			onLoadFunction : function (response) {
				var form_yandex_element = new Element('form', {
					'action' : response.shop_params.shop_url,
					'method' : 'post',
					'html' : '<input name="shopId" value="{shop_id}" type="hidden">\
							<input name="scid" value="{sc_id}" type="hidden">\
							<input name="sum" value="{sum}" type="hidden">\
							<input name="customerNumber" value="{user_id}" type="hidden">\
							<input name="orderNumber" value="{order_id}" type="hidden">'.substitute({
								'shop_id' : response.shop_params.shopId,
								'sc_id' : response.shop_params.scid,
								'sum' : response.purchase.price,
								'user_id' : response.user.id,
								'order_id' : response.purchase.id
							})
				});
				
				form_yandex_element.inject($('js-fraud_funds_refuel'));
			}
		});
	}
};

/* ranks */
ranksHandler = {
	validateRank : function (start_price) {
		if ($('js-ranks_new_rank').value.trim().length == 0) {
			ajaxHandler.highlightField($('js-ranks_new_rank'));
			new futuAlert('Звание нужно придумать и написать в моргнувшее красным поле для ввода.');
			$('js-ranks_new_rank').focus();
			return false;
		}
		if ($('js-ranks_new_rank').value.trim().length > 25) {
			ajaxHandler.highlightField($('js-ranks_new_rank'));
			new futuAlert('Звание по правилам не может быть длиннее 25 символов.');
			$('js-ranks_new_rank').focus();
			return false;
		}
		if ($('js-ranks_target_user_login').value.trim().length == 0) {
			ajaxHandler.highlightField($('js-ranks_target_user_login'));
			new futuAlert('Звание можно попробовать купить себе или другому пользователю. Напишите, пожалуйста, имя в соответствующее поле.');
			$('js-ranks_target_user_login').focus();
			return false;
		}
		if (!parseInt($('js-ranks_price').value) || parseInt($('js-ranks_price').value) < start_price) {
			ajaxHandler.highlightField($('js-ranks_price'));
			new futuAlert('Стартовая цена любого звания&nbsp;&mdash; ' + start_price + '&nbsp;ЛВ.');
			$('js-ranks_price').focus();
			return false;
		}
		return true;
	},
	previewRank : function (start_price) {
		if (ranksHandler.validateRank(start_price)) {
			var rank_form_element = $('js-ranks_add_form');
			var target_login = $('js-ranks_target_user_login').value.trim();
			var my_login = globals.user.login;
			
			var data = rank_form_element.toQueryString();
		
			new futuAjax({
				button : rank_form_element.getElement('.b-ranks_input_yarrr'),
				color_to : '0.5',
				color_from : '1',
				attribute : 'opacity',
				url: ajaxUrls.fraud_ranks_preview,
				data: data,
				onLoadFunction : function (response) {
					if (response.current_rank_owner) {
						
						var rank_action_caption = '';
						
						if (response.current_rank_owner == my_login) {
							if (target_login == my_login) {
								rank_action_caption = 'повысить её стоимость';
							} else {
								rank_action_caption = 'перевести её ' + target_login;
							}
						} else {
							if (target_login == my_login) {
								rank_action_caption = 'перекупить её';
							} else {
								if (response.current_rank_owner == target_login) {
									rank_action_caption = 'повысить её стоимость';
								} else {
									rank_action_caption = 'перекупить её ' + target_login;
								}
							}
						}
						
						var iHTML = 'Должность &laquo;{rank}&raquo; '.substitute({
							rank : response.parced_rank
						});
						
						if (response.current_rank_owner == my_login) {
							iHTML += 'принадлежит вам, но можно ';
						} else {
							iHTML += 'уже занята пользователем <a href="/users/{current_owner_login}">{current_owner_login}</a>, но можно '.substitute({
								current_owner_login : response.current_rank_owner
							});;
						}
						
						iHTML += '<span class="js-ranks_new_price_holder"><a href="#" onclick="ranksHandler.rebuyRank(this, \'{rank}\', \'{price}\', \'{target_user_login}\', \'{current_owner_login}\'); return false;">{rank_action_caption}</a> за {price}&nbsp;ЛВ</span>.'.substitute({
							rank : response.parced_rank,
							current_owner_login : response.current_rank_owner,
							target_user_login : target_login,
							price : response.current_price/100,
							rank_action_caption : rank_action_caption
						});
												
						$('js-ranks_rebuy_message').removeClass('hidden');
						$('js-ranks_rebuy_message').innerHTML = iHTML;
					} else {
						ranksHandler.buyRank(response.parced_rank, response.current_price/100, target_login);
					}
				}
			});
		}
	},
	buyRank : function (rank, price, username) {
		var my_username = globals.user.login;
		var confirmation_caption = '';
		if (my_username == username) {
			confirmation_caption = 'Вы хотите приобрести себе звание &laquo;'+ rank +'&raquo; за ' + price + '&nbsp;ЛВ?'
		} else {
			confirmation_caption = 'Вы хотите приобрести пользователю ' + username + ' звание &laquo;'+ rank +'&raquo; за ' + price + '&nbsp;ЛВ?'
		}
		Charley.ask({
			text:confirmation_caption,
			yes:'- Да, пожалуйста!',
			no:'Вы знаете, я передумал',
			password:true,
			onYes:function () {
				ranksHandler.sendBuyRank(rank, price, username);
			}
		});
	},
	sendBuyRank : function (rank, price, username) {
		var rank_form_element = $('js-ranks_add_form');
		var data = 'rank={rank}&user={username}&price={price}&password={password}'.substitute({
			rank : encodeURIComponent(rank),
			price : encodeURIComponent(price),
			username : encodeURIComponent(username),
			password : encodeURIComponent($('charley_holder').getElement('.password').value)
		});
		
		var my_login = globals.user.login;
		
		new futuAjax({
			button : rank_form_element.getElement('.b-ranks_input_yarrr'),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url: ajaxUrls.fraud_ranks_set,
			data: data,
			onLoadFunction : function (response) {
				Charley.close(null, 0);
				
				ranksHandler.renderRankRow(response.rank, true);
				
				if (my_login == response.rank.user_login) {
					$('js-ranks_current').innerHTML = 'Ваша нынешняя должность&nbsp;&#8212; <strong class="b-rank_current_name">' + response.rank.rank + '&nbsp;<a href="/users/' + my_login + '/">' + my_login + '</a></strong>, <a href="#" class="b-ranks_go_away" onclick="ranksHandler.fire(\'' + response.rank.rank + '\'); return false;">уволиться</a>?';
				}
				
				$('js-ranks_rebuy_message').addClass('hidden');
				$('js-ranks_rebuy_message').innerHTML = '';
			},
			onCustomErrorFunction: function (response) {
				var closeCharleyWindow = true;
				for (var i = 0, l = response.errors.length; i < l; i++) {
					if (response.errors[i].code == 'wrong_password') {
						closeCharleyWindow = false;
					}
				}
				if (closeCharleyWindow) {
					Charley.close(null, 0);
				}
			}
		});
	},
	rebuyRank : function (button, rank, start_price, target_login, current_owner_login) {
		
		var my_login = globals.user.login;
		
		var new_price_holder = $(button).getParent('.js-ranks_new_price_holder');
		if (new_price_holder.hasClass('js-ranks_new_price_holder_table')) {
			new_price_holder.innerHTML = '<input class="i-form_text_input" type="text" value="' + start_price + '">&nbsp;ЛВ';
		} else {
			new_price_holder.innerHTML = button.innerHTML + ' за <input class="i-form_text_input" type="text" value="' + start_price + '">&nbsp;ЛВ';
		}
		
		var price_input = new_price_holder.getElement('input');
		price_input.addEvent('keydown', function (e) {
			e = new Event(e);
			if (e.key == 'enter') {
				if (!parseInt(price_input.value.trim()) || parseInt(price_input.value.trim()) < parseInt(start_price)) {
					ajaxHandler.highlightField(price_input);
					new futuAlert('Стартовая цена этого звания&nbsp;&mdash; ' + start_price + '&nbsp;ЛВ.');
					price_input.focus();
					return false;
				} else {
					var confirmation_caption = 'Вы хотите ';
				
					if (current_owner_login == my_login) {
						if (target_login == my_login) {
							confirmation_caption += 'повысить стоимость своего звания ';
						} else {
							confirmation_caption += 'перевести звание ';
						}
					} else {
						if (current_owner_login == target_login) {
							confirmation_caption += 'повысить стоимость звания ';
						} else {
							confirmation_caption += 'перекупить звание ';
						}
					}
				
					confirmation_caption += '&laquo;'+ rank +'&raquo; ';
					
					if (current_owner_login == my_login) {
						if (target_login != my_login) {
							confirmation_caption += target_login + ' ';
						}
					} else {
						if (current_owner_login != target_login) {
							confirmation_caption += 'у ' + current_owner_login + ' ';
						}
						if (target_login != my_login) {
							confirmation_caption += 'для ' + target_login + ' ';
						}
					}
					
					confirmation_caption += 'за ' + parseInt(price_input.value.trim()) + '&nbsp;ЛВ?'
				
					Charley.ask({
						text:confirmation_caption,
						yes:'- Да, пожалуйста!',
						no:'Вы знаете, я передумал',
						password:true,
						onYes:function () {
							ranksHandler.sendBuyRank(rank, price_input.value.trim(), target_login);
						}
					});
				}
			}
		});
		price_input.focus();
	},
	pageCounter : 0,
	loadMore : function () {
		var data = 'offset=' + $('js-ranks_table_stats').getElements('.b-ranks_table_stat').length;
		
		$('js-ranks_table_more').innerHTML = 'Загружаем';
		
		new futuAjax({
			button : $('js-ranks_table_more'),
			color_to : '#CCC',
			color_from : '#dadce0',
			url: ajaxUrls.fraud_ranks_more,
			data: data,
			onLoadFunction : function (response) {
				$('js-ranks_table_more').innerHTML = 'Ещё';
				
				if (response.balance) {
					globals.user.balance = response.balance;
				}
				
				if (!response.offset || response.ranks.length == 0) {
					$('js-ranks_table_more').destroy();
				}
				
				$A(response.ranks).each(function(rank) {
					ranksHandler.renderRankRow(rank);
				});
			}
		});
	},
	fire : function (rank) {
		Charley.ask({
			text:'Вы хотите отказаться от звания &laquo;'+ rank +'&raquo;? Это бесплатно.',
			yes:'- Да, пожалуйста!',
			no:'Вы знаете, я передумал',
			password:true,
			onYes:function () {
				ranksHandler.sendfireAjax(rank);
			}
		});
	},
	sendfireAjax : function (rank) {
		new futuAjax({
			button : $('js-ranks_current').getElement('.b-ranks_go_away'),
			color_to : '#CCC',
			color_from : '#000',
			attribute : 'color',
			url: ajaxUrls.fraud_ranks_reset,
			data: 'password=' + encodeURIComponent($('charley_holder').getElement('.password').value),
			onLoadFunction : function (response) {
				
				Charley.close(null, 0);
				
				$('js-ranks_current').innerHTML = 'В данный момент у вас нет никакой должности.';
				
				if ($$('.js-ranks_table_user_' + globals.user.id)) {
					$$('.js-ranks_table_user_' + globals.user.id).destroy();
				}
			},
			onCustomErrorFunction: function (response) {
				var closeCharleyWindow = true;
				for (var i = 0, l = response.errors.length; i < l; i++) {
					if (response.errors[i].code == 'wrong_password') {
						closeCharleyWindow = false;
					}
				}
				if (closeCharleyWindow) {
					Charley.close(null, 0);
				}
			}
		});
	},
	renderRankRow : function (rank, new_rank, balance) {
		var my_username = globals.user.login;
		if ($('js-temp_stat_table')) {
			if ($('js-ranks_table_stat_' + rank.id)) {
				$('js-ranks_table_stat_' + rank.id).destroy();
			}
			if ($$('.js-ranks_table_user_' + rank.user_id)) {
				$$('.js-ranks_table_user_' + rank.user_id).destroy();
			}

			var iHTML = '<table><tbody><tr class="b-ranks_table_stat js-ranks_table_user_' + rank.user_id + '">';
			iHTML += 		'<td class="b-ranks_table_rank">' + rank.rank + '</td>';
			iHTML += 		'<td class="b-ranks_table_username"><a href="/users/' + rank.user_login + '/">' + rank.user_login + '</a></td>';

			if (rank.deals_count <= 2) {
				iHTML += '<td class="b-ranks_table_history">с&nbsp;' + (new Date(rank.created_at*1000)).format('d mmmm yyyy') + '</td>';
			} else {
				iHTML += '<td class="b-ranks_table_history">с&nbsp;' + (new Date(rank.created_at*1000)).format('d mmmm yyyy') + '&nbsp;перекупалась ' + (rank.deals_count - 1) + '&nbsp;' + utils.getPlural(rank.deals_count - 1, ['раз', 'раза', 'раз']) + '</td>';
			}
			if (globals.user.balance >= rank.price) {
				iHTML += 		'<td class="b-ranks_table_price"><span class="js-ranks_new_price_holder js-ranks_new_price_holder_table"><a href="#" onclick="ranksHandler.rebuyRank(this, \'' + rank.rank + '\', \'' + rank.price/100 + '\', \'' + my_username + '\', \'' + rank.user_login + '\'); return false;">' + rank.price/100 + '&nbsp;ЛВ</a></span></td>';
			} else {
				iHTML += 		'<td class="b-ranks_table_price"><span class="js-ranks_new_price_holder js-ranks_new_price_holder_table">' + rank.price/100 + '&nbsp;ЛВ</span></td>';
			}
		
			iHTML += '</tr></tbody></table>';

			$('js-temp_stat_table').innerHTML = iHTML;
		
			var new_tr = $('js-temp_stat_table').getElement('tr');
			new_tr.id = 'js-ranks_table_stat_' + rank.id;
		
			if (new_rank) {
				new_tr.addClass('b-ranks_table_stat_my');
				new_tr.inject($('js-ranks_table_stats').getElement('tr'), 'after');
			} else {
				new_tr.inject($('js-ranks_table_stats'));
			}
		} else {
			new futuAlert('Вы приобрели звание ' + rank.rank + ' для ' + rank.user_login + '.');
			fraudShowcaseHandler.toggleNewRankContainer();
			$('js-ranks_new_rank').value = '';
		}
	},
	blockExternal : function (button) {
		var button = $(button);
		var data = 'block_external_ranks=' + (button.checked ? 1 : 0);

		new futuAjax({
			button : button,
			color_to : 1,
			color_from : 0.5,
			attribute : 'opacity',
			url: ajaxUrls.fraud_settings,
			data: data,
			onLoadFunction : function (response) {
				button.removeClass('js-loading');
			}
		});
	}
};


quickFraudHandler = {
	toggleRefuelContainer : function () {
		if ($('js-fraud_quick_funds_refuel').hasClass('opened')) {
			$('js-fraud_quick_funds_open_block').removeClass('hidden');
			$$('.b-fraud_quick_funds')[0].style.marginBottom = '40px';
		}
		fraudHandler.toggleContainer($('js-fraud_quick_funds_refuel'), function () {
			if ($('js-fraud_quick_funds_refuel').hasClass('opened')) {
				$('js-fraud_quick_funds_amount_input').focus();
			}
		});
	},
	// quickFraudHandler.refuelFunds
	refuelFunds : function (payment_system, min_amount, payment_type) {
		if ($('js-fraud_quick_funds_refuel').hasClass('opened')) {
			if ($('js-fraud_quick_funds_amount_input').value && $('js-fraud_quick_funds_amount_input').value < min_amount) {
				new futuAlert('Минимальная сумма пополнения лепро-счёта&nbsp;&mdash; ' + min_amount + ' рублей.');
				return false;
			}

			var fz54_contact = $('js-fraud_quick_funds_fz54_contact_input').value;
			if (!fz54ContactsHandler.isValid(fz54_contact)) {
				return false;
			}

			if ($('js-fraud_quick_funds_amount_input').value == '') {
				$('js-fraud_quick_funds_amount_input').value = '1000';
			}
			//if (payment_system == 'yandex') {
			//	quickFraudHandler.refuelFundsByYandex();
			//} else {
				if (payment_system) {
					$('js-fraud_quick_funds_system').value = payment_system;
					$('js-fraud_quick_funds_payment_type').value = payment_type ? payment_type : '';
					$('js-fraud_quick_funds_refuel').submit();
				}
			//}
			
		} else {
			$('js-fraud_quick_funds_open_block').addClass('hidden');
			$$('.b-fraud_quick_funds')[0].style.marginBottom = '73px';
			quickFraudHandler.toggleRefuelContainer();
		}
	},
	refuelFundsByYandex : function () {
		var url = ajaxUrls.fraud_refuel;
		var data = 'payment_system=yandex&amount=' + $('js-fraud_refuel_amount_input').value;
		new futuAjax({
			button : $('js-fraud_refuel_yandex'),
			color_to : '0.5',
			color_from : '1',
			attribute : 'opacity',
			url: url,
			data: data,
			onLoadFunction : function (response) {
				var form_yandex_element = new Element('form', {
					'action' : response.shop_params.shop_url,
					'method' : 'post',
					'html' : '<input name="shopId" value="{shop_id}" type="hidden">\
							<input name="scid" value="{sc_id}" type="hidden">\
							<input name="sum" value="{sum}" type="hidden">\
							<input name="customerNumber" value="{user_id}" type="hidden">\
							<input name="orderNumber" value="{order_id}" type="hidden">'.substitute({
								'shop_id' : response.shop_params.shopId,
								'sc_id' : response.shop_params.scid,
								'sum' : response.purchase.price,
								'user_id' : response.user.id,
								'order_id' : response.purchase.id
							})
				});

				form_yandex_element.inject($('js-fraud_quick_funds_refuel'));
			}
		});
	},
		
	toggleTransferContainer : function () {
		fraudHandler.toggleContainer($('js-friend_transfer_form'), function () {
			if ($('js-friend_transfer_form').hasClass('opened')) {
				$('js-transfer_receiver').focus();
			}
		});
	},
	askPasswordBeforeTransfer : function () {
		if (fraudHandler.validateSendMoneyToUser()) {
			var confirmation_caption = 'Вы хотите перевести пользователю ' + $('js-transfer_receiver').value + ' ' +  $('js-transfer_amount').value + '&nbsp;ЛВ?';
			Charley.ask({
				text:confirmation_caption,
				yes:'- Да, пожалуйста!',
				no:'Вы знаете, я передумал',
				password:true,
				onYes:function (password) {
					$('js-password').value = decodeURIComponent(password);
					fraudHandler.sendMoneyToUser();
					Charley.close();
				}
			});
		}
	}
};

fraudShowcaseHandler = {
	toggleNewSubdomainContainer : function () {
		fraudHandler.toggleContainer($('js-fraud_showcase_pro_new_sublepro_form'), function () {
			if ($('js-fraud_showcase_pro_new_sublepro_form').hasClass('opened')) {
				$('js-new_domain_prefix').focus();
			}
		});
		fraudHandler.toggleContainer($('js-fraud_showcase_pro_new_sublepro'));
	},
	animatePriceBubble : function (price_elements) {
		price_elements = price_elements.length && price_elements.length > 0 ? price_elements : price_elements;
		$A(price_elements).each(function (price_element) {
		
			window.setInterval(function () {
				var random_color = $HSB($random(50,80), 91, 83);
				price_element.style.backgroundColor = random_color.hex;
				if (price_element.offsetWidth < 100) {
					price_element.style.boxShadow = '1px 1px 2px rgba(204,204,204,1), 0 -1px 2px ' + random_color.hex + ', inset 1px 1px 2px 1px rgba(255,255,255,0.3)';
				} else {
					price_element.style.boxShadow = '2px 2px 3px rgba(204,204,204,1), -1px -2px 2px ' + random_color.hex + ', inset 2px 2px 3px 2px rgba(255,255,255,0.3)';
				}
			}, 800);
		});
		
	},
	toggleNewRankContainer : function (friend) {
		if (!$('js-fraud_showcase_ranks_form').hasClass('opened')) {
			if (friend) {
				$('js-ranks_target_user_login').value = '';
				$('js-ranks_target_user_login').removeClass('hidden');
			} else {
				$('js-ranks_target_user_login').value = globals.user.login;
				$('js-ranks_target_user_login').addClass('hidden');
			}
		}
		fraudHandler.toggleContainer($('js-fraud_showcase_ranks_form'), function () {
			if ($('js-fraud_showcase_ranks_form').hasClass('opened')) {
				$('js-ranks_new_rank').focus();
			}
		});
	},
	toggleGreetingsContainer : function () {
		fraudHandler.toggleContainer($('js-fraud_showcase_greetings_form'), function () {
			if ($('js-fraud_showcase_greetings_form').hasClass('opened')) {
				$('b-user_login').focus();
			}
		});
	},
	toggleUsernameContainer : function () {
		fraudHandler.toggleContainer($('js-fraud_showcase_username_form'), function () {
			if ($('js-fraud_showcase_username_form').hasClass('opened')) {
				$('js-new_username').focus();
			}
		});
	},
	toggleFreetimeContainer : function () {
		fraudHandler.toggleContainer($('js-fraud_showcase_freetime_form'), function () {
			if ($('js-fraud_showcase_freetime_form').hasClass('opened')) {
				$('js-fraud_showcase_freetime_form_duration').focus();
			}
		});
	},
	validateFreetime : function () {
		if (!parseInt($('js-fraud_showcase_freetime_form_duration').value.trim())) {
			ajaxHandler.highlightField($('js-fraud_showcase_freetime_form_duration'));
			return false;
		}
		return true;
	},
	submitFreeTime : function () {
		if (fraudShowcaseHandler.validateFreetime()) {
			var freetime_duration_hours = parseInt($('js-fraud_showcase_freetime_form_duration').value.trim());

			var submitForm = function (password) {
				var current_time = new Date();
				var freetime_duration_ms = freetime_duration_hours * 60 * 60 * 1000;
				var freetime_end_time = new Date(current_time.getTime() + freetime_duration_ms);

				var data = 'password=' + password;
				data += '&start_date=' + current_time.format('dd/mm/yyyy');
				data += '&start_time=' + current_time.format('HH:MM');
				data += '&finish_date=' + freetime_end_time.format('dd/mm/yyyy');
				data += '&finish_time=' + freetime_end_time.format('HH:MM');

				new futuAjax({
					button : $('js-freetime_preview') || $('js-fraud_freetime_form'),
					color_to : '1',
					color_from : '1',
					attribute : 'opacity',
					url: ajaxUrls.fraud_freetime_submit,
					data: data,
					onLoadFunction : function (response) {
						window.location.reload();
					},
					onCustomErrorFunction: function (response) {
						var closeCharleyWindow = true;
						for (var i = 0, l = response.errors.length; i < l; i++) {
							if (response.errors[i].code == 'wrong_password') {
								closeCharleyWindow = false;
							}
						}
						if (closeCharleyWindow) {
							Charley.close(null, 0);
						}
					}
				});
			};
			var text = 'Вы блокируете себе доступ на ' + freetime_duration_hours + ' ' + utils.getPlural(freetime_duration_hours, ['час', 'часа', 'часов']) + '?';
			Charley.ask({
				text: text,
				yes: '- Да, пожалуйста!',
				no: 'Вы знаете, я передумал',
				password: true,
				onYes: submitForm
			});
		}
	}
};

/* email forwarding */

mailForwardingHandler = {
	setCheckedForwarding : function () {
		$('js-pro_acc_mail_forwarding_enabled').checked = true;
	},
	removeCheckedForwarding : function () {
		$('js-pro_acc_mail_forwarding_enabled').checked = false;
	},
	validateForwarding : function () {
		if ($('js-pro_acc_mail_forwarding_mail').value.trim().length == 0) {
			ajaxHandler.highlightField($('js-pro_acc_mail_forwarding_mail'));
			mailForwardingHandler.removeCheckedForwarding();
			return false;
		}
		return true;
	},
	toggleForwarding : function () {
		var url = ajaxUrls.profile_email_forwarding;
		var forwarding_checkbox_element = $('js-pro_acc_mail_forwarding_enabled');
		var data = '';
		if (forwarding_checkbox_element.checked) {
			data += 'email_username=' + encodeURIComponent($('js-pro_acc_mail_forwarding_mail').value.trim());
			data += '&enabled=1';
		} else {
			data += 'enabled=0';
		}

		if (!forwarding_checkbox_element.checked || forwarding_checkbox_element.checked && mailForwardingHandler.validateForwarding()) {
			new futuAjax({
				button : forwarding_checkbox_element,
				color_to : 1,
				color_from : 0.5,
				attribute : 'opacity',
				url: url,
				data: data,
				onLoadFunction : function (response) {
					if (response.enabled) {
						new futuAlert('Есть шанс, что пересылка с вашего нового лепро-ящика ' + response.email_username + '@leprosorium.ru заработает в течение получаса.', true);
					} else {
						new futuAlert('Пересылка выключена.');
					}
				},
				onErrorFunction : mailForwardingHandler.removeCheckedForwarding,
				onCustomErrorFunction : mailForwardingHandler.removeCheckedForwarding
			});
		}
	}
};

fraudMarketHandler = {
	putOneProductIntoBasket : function (product_id) {
		var product_element = $('js-fraud_market_product_' + product_id);
		var product_names = product_element.getAttribute('data-product_name').split(',');
		var product_quantity_element = product_element.getElement('.b-fraud_market_product_basket_quantity');
		var product_quantity = parseInt(product_quantity_element.value, 10);
		var product_quantity_caption_element = product_element.getElement('.b-fraud_market_product_basket_form_caption');
		product_quantity++;
		product_quantity_element.value = product_quantity;
		product_quantity_caption_element.innerHTML = utils.getPlural(product_quantity, product_names);
	},
	updateProductBasket : function (product_id, quantity) {
		
	}
};

/* grendizer */
grendizerHandler = {
	initPosts : function (container) {
		container.getElements('.b-pic_post:not(.js-inited)').each(function (pic_post_element) {
			var picture_element = pic_post_element.getElement('.b-pic_post_body_image_html img');
			var link_element = pic_post_element.getElement('.b-pic_post_image');
			if (picture_element) {
				link_element.style.backgroundImage = 'url(' + picture_element.src + ')';
			}
			pic_post_element.addClass('js-inited');
		});
	},
	initCommentsPost : function () {
		$('js-grendizer_picture').getElements('.b-pic_post_body_image_html br').destroy();
		var picture_element = $('js-grendizer_picture').getElement('.b-pic_post_body_image_html img');
		var picture_layer_element = $('js-grendizer_picture').getElement('.b-grendizer_picture_layer');
		
		if (picture_element) {
			picture_layer_element.style.backgroundImage = 'url(' + picture_element.src + ')';
		}
	},
	grendizer_folded_left_curtain_element : null,
	grendizer_folded_right_curtain_element : null,
	togglePicture : function () {
		$('js-grendizer_picture').toggleClass('js-flipped');
	},
	purchaseGrendizerPicture : function (button, post_id, price) {
		var submitForm = function (password) {
			var data = 'post_id=' + post_id + '&password=' + password;
			new futuAjax({
				button : $(button),
				color_to : 0.5,
				color_from : 1,
				attribute : 'opacity',
				url: ajaxUrls.grendizer_buy,
				data: data,
				onLoadFunction : function (response) {
					$('js-grendizer_picture').getElement('.b-grendizer_picture_author').innerHTML = ' \
						<div class="b-i-grendizer_picture_author">\
							<span class="b-grendizer_picture_author_logo"></span><br>\
							<a href="{user_profile_url}" class="b-grendizer_picture_author_name">{user_login}</a>\
						</div>'.substitute({
						user_login : response.login,
						user_profile_url : globals.base_domain ? globals.base_domain.url + '/users/' + response.login : '/users/' + response.login
					});
					Charley.close();
				}
			});
		};
		
		var text = 'Вы хотите узнать, кто запостил эту фотографию за ' + price + ' ЛВ?';
		Charley.ask({
			text: text,
			yes: '- Да, пожалуйста!',
			no: 'Вы знаете, я передумал',
			password: true,
			onYes: submitForm
		});
	
	}
};

marketGiftHandler = {
	payForGift : function (payment_system) {
		if (!$('js-adm_leprogame_form_terms').checked) {
			new futuAlert('Необходимо согласиться с условиями.');
			return false;
		}
		new FuturicoHttpRequest({
			method : 'POST',
			url : router.generate('market_gift_order', { payment_system: payment_system }),
			data : {
				products : [
					{
						name : 'bookadm',
						count : 1
					}
				],
				comment : $('js-adm_leprogame_form_comment').value.trim()
			},
			success : function (response) {
				if (payment_system == 'yandex_money' || payment_system == 'yandex_money_cards') {
					var form = new Element('form', {
						'method': 'POST',
						'action': response.shop_params.shop_url
					});
					var user_id = globals.user ? globals.user.id : 0;
					new Element('input', {'name': 'shopId', 'value': response.shop_params.shopId}).inject(form);
					new Element('input', {'name': 'scid', 'value': response.shop_params.scid}).inject(form);
					new Element('input', {'name': 'sum', 'value': response.purchase_price}).inject(form);
					new Element('input', {'name': 'customerNumber', 'value': user_id}).inject(form);
					new Element('input', {'name': 'orderNumber', 'value': response.purchase_id}).inject(form);
					new Element('input', {'name': 'paymentType', 'value': response.payment_type}).inject(form);
					new Element('input', {'type': 'submit'}).inject(form);
					form.addClass('pos_hidden');
					form.inject(document.body);
					form.submit();
				}
				else {
					location.href = response.redirect_to;
				}
			}
		});
	},
	togglePayForGiftForm : function () {
		$('js-adm_leprogame_form').toggleClass('b-adm_leprogame_form__opened')
	},
	toggleTerms : function () {
		$('js-adm_leprogame_form_terms_body').toggleClass('b-adm_leprogame_form_terms_body__opened');
	},
	toggleAddressForm : function () {
		$('js-login_market_app').toggleClass('hidden');
		if ($('js-login_market_app').hasClass('hidden')) {
			document.body.set('styles', {
				'overflow': 'auto'
			});
		} else {
			document.body.set('styles', {
				'overflow': 'hidden'
			});
		}
	}
};

replaceHandler = {
	validateReplacement: function (old_text, new_text) {
		if (old_text.length < 5) {
			new futuAlert('Минимальная длина заменяемой фразы&nbsp;&mdash; 5 символов, а у вас&nbsp;&mdash; ' + old_text.length);
			return false;
		}
		if (old_text.length > 255) {
			new futuAlert('Максимальная длина заменяемой фразы&nbsp;&mdash; 255 символов, а у вас&nbsp;&mdash; ' + old_text.length);
			return false;
		}
		if (new_text.length < 5) {
			new futuAlert('Минимальная длина результирующей фразы&nbsp;&mdash; 5 символов, а у вас&nbsp;&mdash; ' + new_text.length);
			return false;
		}
		if (new_text.length > 255) {
			new futuAlert('Максимальная длина результирующей фразы&nbsp;&mdash; 255 символов, а у вас&nbsp;&mdash; ' + new_text.length);
			return false;
		}
		if (new_text.length > old_text.length * 2) {
			new futuAlert('Максимальная длина результирующей фразы&nbsp;&mdash; сейчас ' + new_text.length + '&nbsp;символов&nbsp;&mdash; не должна быть вдвое больше заменяемой&nbsp;&mdash; ' + old_text.length + '&nbsp;символов.');
			return false;
		}
		return true;
	},
	submitReplacement: function (button, price) {
		var old_text = $('js-fraud_replace_form_input_old').value.trim();
		var new_text = $('js-fraud_replace_form_input_new').value.trim();
		if (!replaceHandler.validateReplacement(old_text, new_text)) {
			return false;
		}
		var submitForm = function (password) {
			var data = {
				'password': decodeURIComponent(password),
				'old': old_text,
				'new': new_text,
				'price': price
			};
			new FuturicoHttpRequest({
				url : router.generate('fraud_replacement_buy'),
				data : data,
				method : 'POST',
				success : function (response) {
					replaceHandler.getReplacements();
					$$('.b-fraud_replace_form')[0].reset();
					Charley.close();
				}
			});
		};
		
		var text = 'Следующие сутки заменяем &laquo;' + old_text + '&raquo; на &laquo;' + new_text + '&raquo; за ' + price + '&nbsp;ЛВ?';
		Charley.ask({
			text: text,
			yes: '- Да, пожалуйста!',
			no: 'Вы знаете, я передумал',
			password: true,
			onYes: submitForm
		});
	},
	getReplacements: function () {
		new futuAjaxNew({
			button : (new Element('div')),
			url : router.generate('fraud_replacements'),
			type : 'GET',
			headerContentType: 'application/json',
			data : '',
			onLoadFunction : function (response) {
				response.replacements.each(function (replacement) {
					if (replacement.is_active) {
						response.show_active = true;
					} else {
						response.show_not_active = true;
					}
				});
				response = Object.merge(response, {
					user: globals.user
				});
				env.render('fraud/replacements_list.html', response, function (err, docs_html) {
					$('js-fraud_replace_replacements').innerHTML = docs_html;
					datesHandler.setDates($('js-fraud_replace_replacements'));
					replaceHandler.setCountdown();
				});
			}
		});
	},
	vote: function (replacement_id, vote) {
		var replacement_holder = $('js-fraud_replacement_' + replacement_id);
		var vote_button = replacement_holder.getElement(vote > 0 ? '.vote_button_plus' : '.vote_button_minus');

		if (vote_button.hasClass('vote_voted')) {
			return;
		}

		new futuAjaxNew({
			button : (new Element('div')),
			url : router.generate('fraud_replacement_vote', {
				replacement_id: replacement_id
			}),
			headerContentType: 'application/json',
			data : JSON.stringify({
				vote: vote
			}),
			onLoadFunction : function (response) {
				replacement_holder.getElements('.vote_button').removeClass('vote_voted');
				replacement_holder.getElement('.vote_result').innerHTML = response.rating;
				vote_button.addClass('vote_voted');
			}
		});
	},
	'delete': function (replacement_id) {
		new futuDialogPopup({
			type: 'confirm',
			text: 'Точно удаляем замену?',
			callback: function () {
				new futuAjaxNew({
					button : (new Element('div')),
					type: 'DELETE',
					url : router.generate('fraud_replacement', {
						replacement_id: replacement_id
					}),
					headerContentType: 'application/json',
					data : '',
					onLoadFunction : function (response) {
						replaceHandler.getReplacements();
						new futuAlert('Замена удалена.');
					}
				});
			}
		});
	},
	forbid: function (user_id) {
		new futuDialogPopup({
			type: 'confirm',
			text: 'Навсегда запрещаем пользователю создавать замены?',
			callback: function () {
				new futuAjaxNew({
					button : (new Element('div')),
					url : router.generate('fraud_replacements_forbid', {
						user_id: user_id
					}),
					headerContentType: 'application/json',
					data : '',
					onLoadFunction : function (response) {
						replaceHandler.getReplacements();
						new futuAlert('Пользователю запрещено делать новые замены.');
					}
				});
			}
		});
	},
	countdown_timeout: null,
	setCountdown: function () {
		window.clearTimeout(replaceHandler.countdown_timeout);
		replaceHandler.countdown_timeout = window.setTimeout(replaceHandler.setCountdown, 1000);
		$$('.b-fraud_replace_list_item_countdown').each(function (el) {
			var ends_at_date = new Date(el.getAttribute('data-ends_at') * 1000);
			var ms_left = ends_at_date.getTime() - (new Date()).getTime();
			if (ms_left > 0) {
				var hours_left = Math.floor(ms_left/1000/60/60);
				var minutes_left = Math.floor(ms_left/1000/60) - hours_left*60;
				if (('' + minutes_left).length == 1) {
					minutes_left = '0' + minutes_left;
				}
				el.innerHTML = hours_left + ':' + minutes_left;
			} else {
				el.getParent('.b-fraud_replace_list_item').destroy();
			}
			
		});
	},
	toggleChecker: function () {
		$('js-fraud_replace_checker').toggleClass('b-fraud_replace_checker__opened');
		if ($('js-fraud_replace_checker').hasClass('b-fraud_replace_checker__opened')) {
			$('js-fraud_replace_checker_form_input').focus();
		}
	},
	checker_timeout: null,
	onCheckerChange: function () {
		window.clearTimeout(replaceHandler.checker_timeout);
		replaceHandler.checker_timeout = window.setTimeout(replaceHandler.submitChecker, 300);
	},
	submitChecker: function () {
		var input = $('js-fraud_replace_checker_form_input').value.trim();
		new futuAjaxNew({
			button : (new Element('div')),
			url : router.generate('fraud_replacement_preview'),
			headerContentType: 'application/json',
			data : JSON.stringify({
				text: input
			}),
			onLoadFunction : function (response) {
				$('js-fraud_replace_checker_form_output').innerHTML = response.preview;
			}
		});
	},
	initSidebarList: function () {
		new futuAjaxNew({
			button : (new Element('div')),
			url : router.generate('fraud_replacements'),
			type : 'GET',
			headerContentType: 'application/json',
			data : '',
			onLoadFunction : function (response) {
				response.replacements = response.replacements.filter(function (replacement) {
					return replacement.is_active;
				});
				env.render('fraud/replacements_sidebar_list.html', response, function (err, docs_html) {
					$('js-aside_replacements_list').innerHTML = docs_html;
					datesHandler.setDates($('js-b-aside_replacements_list'));
				});
			}
		});
	},
	toggleSidebarList: function () {
		$('js-aside_replacements_list').getElement('.b-aside_replacements_list_items').toggleClass('hidden');
	}
};

fz54ContactsHandler = {
	isPhoneNumberValid: function (number) {
		var pattern = /^\+7[0-9]{10}/;
		return pattern.test(number);
	},

	isEmailValid: function (email) {
		var pattern = /^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;
		return pattern.test(email)
	},

	isValid: function (fz54_contact) {
		if (fz54_contact === '') {
			new futuAlert('Не забудьте указать контактные данные для отправки вам электронного чека.');
			return false;
		}

		if (!fz54ContactsHandler.isEmailValid(fz54_contact) &&
			!fz54ContactsHandler.isPhoneNumberValid(fz54_contact)) {
			new futuAlert('Проверьте формат контактных данных для отправки вам электронного чека.');
			return false;
		}

		return true;
	}
};
var floridaHandler = {
	loading : false,
	token: 0,
	users: [],
	data_rows : false,

	init: function () {
		floridaHandler.checkVotes(true);
		setInterval(function () {
			floridaHandler.checkVotes();
		}, 5000);
		setInterval(function () {
			floridaHandler.drawUser();
		}, 333);
	},
	checkVotes: function (first_time) {
		if (!floridaHandler.loading) {
			floridaHandler.loading = true;
			var data = 'last_try_timestamp=' + floridaHandler.token;

			if (floridaHandler.data_rows) {
				floridaHandler.data_rows = false;
				var votesInColumn = 0,
					rowsInBar;

				$$('.b-bar_holder').each(function (bar) {
					rowsInBar = Math.max(Math.floor((bar.getElement('.b-bar_users').getCoordinates().height-45)/18), 1);
					if (votesInColumn < rowsInBar) {
						votesInColumn = rowsInBar;
					}
				});
				data += '&votes_in_column=' + votesInColumn;
			}
			new futuAjax({
				button: $('js-florida_bars'),
				attribute: 'opacity',
				color_to: 1,
				color_from: 1,
				url: ajaxUrls.elections_live_top,
				data: data,
				onLoadFunction : function (response) {
					floridaHandler.loading = false;
					floridaHandler.redrawBars(response);
					if (first_time) {
						floridaHandler.data_rows = true;
					} else {
						floridaHandler.queueUsers(response);
						floridaHandler.token = response.now;
					}
				}
			});
		}
	},
	redrawBars : function (response) {
		var total_votes = 0;
		var first_candidate_votes = 0;
		var candidate_ids = [];
		var first_candidate_id = false;
		response.top_candidates.each(function (top_candidate) {
			candidate_ids.push(top_candidate.user.id);
			total_votes += Number(top_candidate.votes_count);
			if (Number(top_candidate.votes_count) > first_candidate_votes) {
				first_candidate_votes = Number(top_candidate.votes_count);
				first_candidate_id = top_candidate.user.id;
			}
			if ($('js-bar_' + top_candidate.user.id)) {
				$('js-bar_' + top_candidate.user.id).removeClass('hidden');
			} else {
				var iHTML = '<div class="b-bar" style="height:1%;">\
					<div class="b-bar_users">\
						<ul>\
						</ul>\
					</div>\
					<div class="b-bar_caption"><a href="/users/{candidate_name}">{candidate_name}</a></div>\
					<div class="b-bar_value"></div>\
				</div>'.substitute({
					'candidate_name' : top_candidate.user.login
				});
				var new_bar = new Element('div', {
					'class' : 'b-bar_holder b-bar_color_' + Math.floor(Math.random()*4),
					'id' : 'js-bar_' + top_candidate.user.id
				});
				new_bar.innerHTML = iHTML;
				new_bar.inject($('js-florida_bars'));
			}
		});
		if (first_candidate_id) {
			$$('.b-bar_first').removeClass('b-bar_first');
			$('js-bar_' + first_candidate_id).addClass('b-bar_first');
		}
		response.top_candidates.each(function (top_candidate) {
			var new_height = Math.max($('js-bar_' + top_candidate.user.id).getCoordinates().height*0.8*(top_candidate.votes_count/first_candidate_votes), 40);
			$('js-bar_' + top_candidate.user.id).getElement('.b-bar').set('morph', {duration:333, onComplete : function () {
			}});
			$('js-bar_' + top_candidate.user.id).getElement('.b-bar').morph({'height' : new_height});
			$('js-bar_' + top_candidate.user.id).getElement('.b-bar_caption a').innerHTML = top_candidate.user.login;
			$('js-bar_' + top_candidate.user.id).getElement('.b-bar_value').innerHTML = top_candidate.votes_count;
		});

		$('js-florida_bars').getElements('.b-bar_holder').each(function (bar) {
			var name = bar.id.substr(7);
			var hide_bar = true;
			for (var i = 0; i < candidate_ids.length; i++) {
				if (name == candidate_ids[i]) {
					hide_bar = false;
				}
			}
			if (hide_bar) {
				bar.addClass('hidden');
			}
		});
	},
	queueUsers : function (response) {
		response.top_candidates.each(function (candidate) {
			for (var i in candidate.voters_list) {
				if (candidate.voters_list.hasOwnProperty(i)) {
					var vote = {
						candidate_id: candidate.user.id,
						login: candidate.voters_list[i]
					};
					floridaHandler.users.push(vote);
				}
			}
		});
	},
	drawUser : function () {
		if (floridaHandler.users.length > 0) {
			var user = floridaHandler.users.shift();

			if ($('js-bar_' + user.candidate_id) && !$('js-bar_' + user.candidate_id).hasClass('hidden')) {
				var new_user = new Element('a', {
					'style' : 'position:absolute; font-size:11px; display:block; top:1px; left:31px; z-index:2;',
					'href' : '/users/' + user.login,
					'html' : user.login
				});
				new_user.inject($('js-bar_' + user.candidate_id), 'top');
				new_user.set('morph', {duration:555, onComplete : function () {
					var new_list_user = new Element('li');
					new_user.inject(new_list_user);
					new_user.set('style', {});
					new_list_user.inject($('js-bar_' + user.candidate_id).getElement('ul'), 'top');
				}});
				new_user.morph({'top' : $('js-bar_' + user.candidate_id).getCoordinates().height - $('js-bar_' + user.candidate_id).getElement('.b-bar').getCoordinates().height + 35 + 'px'});
			}
		}
	}
};
var presidentControlsHandler = {
	addUsersToList: function (user_list) {
		var listEl = $('js-president_controls_' + user_list),
			form = listEl.getElement('form'),
			userListCallElement = form.getElement('input[name="call"]'),
			url,
			data;

		if (user_list == 'ban') {
			url = ajaxUrls.president_user_ban;
			data = 'users=' + userListCallElement.value.trim();
		} else if (user_list == 'minister') {
			url = ajaxUrls.minister_add;
			data = 'login=' + userListCallElement.value.trim();
		}
		new futuAjax({
			button : form.getElement('.b-icon_button'),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : url,
			data : data,
			onLoadFunction : function (response) {
				var ulEl = listEl.getElement('ul'),
					items,
					users;
				if (user_list == 'ban') {
					users = response.banned_users;
				} else if (user_list == 'minister' && response.minister) {
					users = [response.minister];
				}
				if (users && users.length > 0) {
					for (var i = 0; i < users.length; i++) {
						var user = users[i];
						if (!$('js-user_' + user_list + '_' + user.id)) {
							var user_element = new Element('li', {
								id : 'js-user_' + user_list + '_' + user.id,
								html : '<input type="checkbox" class="i-checkbox" value="{user_id}" data-login="{user_login}" /> <a href="/users/{user_login}" target="_blank">{user_login}</a>'.substitute({
									user_login : user.login,
									user_id : user.id,
									user_list : user_list
								})
							});
							user_element.inject(ulEl);
						}
					}
					items = ulEl.getElements('li');
					if (items.length > 0) {
						listEl.getElement('.b-remove_from_list').removeClass('hidden');
					}
				}
				userListCallElement.value = '';
			}
		});
	},
	expelUsersFromList : function (target, user_list) {
		var container = target.getParent('.b-government_list_wrapper'),
			listEl = container.getElement('ul'),
			checkboxes = listEl.getElements('.i-checkbox:checked'),
			counter = container.getElement('.b-subtitle_small'),
			users = [],
			items,
			data,
			url;

		checkboxes.each(function (item) {
			users.push(item.get('data-login'));
		});

		if (user_list == 'ban') {
			url = ajaxUrls.president_user_ban_delete;
		} else if (user_list == 'minister') {
			url = ajaxUrls.minister_delete;
		}
		data = 'users=' + users.join(',');

		if (users.length > 0) {
			new futuAjax({
				button : target,
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : url,
				data : data,
				onLoadFunction : function (response) {
					checkboxes.each(function (item) {
						item.getParent('li').destroy();
					});
					items = listEl.getElements('li');
					if (items.length == 0) {
						target.addClass('hidden');
					}
				}
			});
		}
	},
	addPressSecretary: function () {
		var form = $('js-add_press_secretary_form'),
			formContainer = $('js-press_secretary_form'),
			loginField = form.getElement('.i-form_text_input'),
			infoEl,
			loginEL;

		if (loginField.value.trim().length == 0) {
			new futuAlert('Кого вы хотите назначить пресс-секретарём?');
			ajaxHandler.highlightField(loginField);
			loginField.focus();
			return false;
		}
		loginField.value = loginField.value.trim();

		new futuAjax({
			button : form.getElement('.b-icon_button'),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.press_secretary_add,
			data : form.toQueryString(),
			onLoadFunction : function (response) {
				form.reset();
				if (response.press_secretary) {
					infoEl = $('js-press_secretary_info');
					loginEL = infoEl.getElement('.js-press_secretary_login');

					infoEl.removeClass('hidden');
					loginEL.innerHTML = '<a href="/users/{login}">{login}</a>'.substitute({
						login: response.press_secretary.login
					});
					presidentControlsHandler.showElement(infoEl, formContainer);
				}
			}
		});
	},
	deletePressSecretary: function (target) {
		new futuAjax({
			button : target,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.press_secretary_delete,
			onLoadFunction : function (response) {
				presidentControlsHandler.showElement($('js-press_secretary_form'), $('js-press_secretary_info'));
			}
		});
	},
	showElement: function (el, visibleEl) {
		var preloadContainer = $('js-preload_container'),
			initialHeight,
			finalHeight;

		if (!visibleEl.hasClass('js-animation')) {
			visibleEl.addClass('js-animation');

			el.inject(preloadContainer);
			el.removeClass('hidden');
			finalHeight = el.getCoordinates().height;
			initialHeight = visibleEl.getCoordinates().height;
			el.setStyles({
				opacity: 0,
				height: initialHeight
			});

			new Fx.Morph(visibleEl, {
				duration: 222,
				onComplete: function () {
					visibleEl.addClass('hidden');
					el.inject(preloadContainer, 'after');
					new Fx.Morph(el, {
						duration: 222,
						onComplete: function () {
							new Fx.Morph(el, {
								duration: 222,
								onComplete: function () {
									el.erase('style');
									visibleEl.removeClass('js-animation');
								}.bind(this)
							}).start({
								opacity: 1
							});
						}.bind(this)
					}).start({
						height: finalHeight
					});
				}.bind(this)
			}).start({
				opacity: 0
			});
		}
	},
	setLatvianAccess: function(checkbox) {
	    var disabled_latvian = checkbox.checked ? 1 : 0;
		var data = 'mode=' + (disabled_latvian ? 'disable' : 'enable');

		new futuAjax({
			button : checkbox.getParent('.b-latvian_access'),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.president_latvian_access,
			data : data,
			onLoadFunction : function (response) {
			    if (disabled_latvian) {
			        new futuAlert('Все подлепрозории закрыты для латышей.');
			    } else {
			        new futuAlert('Все подлепрозории открыты для латышей.');
			    }
			}
		});
	},
	expelSelf: function(button, confirm) {
		var popup = $('js-impeachment_popup'),
			body = popup.getParent('body');

		if (!confirm) {
			popup.inject(body).removeClass('hidden');
		}
		else {
			new futuAjax({
				button : button,
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.president_expel_self,
				data : '',
				onLoadFunction : function (response) {
					popup.addClass('hidden');
					new futuAlert('Вот и всё, вы больше не президент.');
					setTimeout(function(){
						location.reload();
					}, 1000)
				}
			});
		}
	}
};

var admHandler = {
	userRegistered: false,
	year: null,
	formFields: [
		{
			name: 'address_name',
			text: 'имя получателя'
		},
		{
			name: 'phone_number',
			text: 'номер телефона'
		},
		{
			name: 'address_zip_code',
			text: 'индекс'
		},
		{
			name: 'address_country',
			text: 'страну'
		},
		{
			name: 'address_city',
			text: 'город или район'
		},
		{
			name: 'address_street',
			text: 'улицу'
		},
		{
			name: 'address_house',
			text: 'номер дома'
		}
	],
	initialize: function (params) {
		this.userRegistered = params.userRegistered || false;
		this.year = params.year || null;
	},
	sendUserData: function () {
		var form,
			url,
			data,
			formData;

		if (this.userRegistered) {
			url = ajaxUrls.adm_edit_contacts;
		} else {
			url = ajaxUrls.adm_register;
		}

		if (admHandler.validateForm()) {
			form = $('js-adm_form');
			data = form.toQueryString();
			formData = data.parseQueryString();
			data += '&year=' + admHandler.year;

			new futuAjax({
				button: $('js-form_submit'),
				attribute: 'opacity',
				color_to: 0.5,
				color_from: 1,
				url: url,
				data: data,
				onLoadFunction : function (response) {
					admHandler.userRegistered = true;
					for (var i in formData) {
						if (formData.hasOwnProperty(i)) {
							if (i in response) {
								var input = form.getElement('input[name="' + i + '"]');
								formData[i] = response[i];
								if (input) {
									input.value = response[i];
								}
							}
						}
					}
					$('js-user_address').getElement('.b-user_address_content').innerHTML = '<h4><span class="b-subtitle">Моя заявка</span> <span class="b-subtitle b-subtitle_normal b-subtitle_black">{name}</span></h4>\
						<div class="b-user_address">{address_zip_code}, {address_country}, \
						{address_city}, {address_street}, {address_house}{address_block}{address_flat} \
						<br/>{phone_number}<br>{comment}</div>'.substitute({
							name: formData.address_name,
							address_zip_code: formData.address_zip_code,
							address_country: formData.address_country,
							address_city: formData.address_city,
							address_street: formData.address_street,
							address_house: formData.address_house,
							address_block: (formData.address_block.trim() != '' ? '/' : '') + formData.address_block,
							address_flat: (formData.address_flat.trim() != '' ? '-' : '') + formData.address_flat,
							phone_number: formData.phone_number,
							comment: formData.comment
						});
					admHandler.showElement($('js-user_address'), $('js-adm_registration'));
					admHandler.updateStatistics(parseInt(response.registered_users_count, 10));
				}
			});
		}

	},
	validateForm: function () {
		var form = $('js-adm_form'),
			formData = form.toQueryString().parseQueryString(),
			message = '',
			requiredFieldsEmpty = false,
			emptyFields = [];
		if (!$('js-adm_agreement').checked) {
			new futuAlert('Вы должны согласиться с условиями.');
			return false;
		}
		$A(admHandler.formFields).each(function (field) {
			if (!formData[field.name] || formData[field.name].trim().length == 0) {
				requiredFieldsEmpty = true;
				emptyFields.push(field.text);
			}
		});

		if (requiredFieldsEmpty) {
			message = 'Нужно указать ' + utils.getListAsString(emptyFields) + '.';
			new futuAlert(message);
			return false;
		}

		return true;
	},
	removeRegisterData: function () {
		var form = $('js-remove_registration_form'),
			data = form.toQueryString();

		data += '&year=' + admHandler.year;

		new futuAjax({
			button: $('js-remove_registration_form_submit'),
			attribute: 'opacity',
			color_to: 0.5,
			color_from: 1,
			url: ajaxUrls.adm_remove_registration,
			data: data,
			onLoadFunction : function (response) {
				var admForm = $('js-adm_form');
				admHandler.userRegistered = false;
				admForm.getElements('input[type="text').each(function (input) {
					input.value = '';
				});
				$('js-adm_agreement').set('checked', false);
				admHandler.showElement($('js-adm_registration'), $('js-remove_registration'));
				$('js-form_submit').innerHTML = 'записаться';
				$('js-cancel_editing').addClass('hidden');
				admHandler.updateStatistics(parseInt(response.registered_users_count, 10));
			}
		});
	},

	showElement: function (el, visibleEl) {
		var preloadContainer = $('js-adm_preload_container'),
			initialHeight,
			finalHeight;

		if (!visibleEl.hasClass('js-animation')) {
			visibleEl.addClass('js-animation');

			if (el.get('id') == 'js-adm_registration' && visibleEl.get('id') == 'js-user_address') {
				$('js-cancel_editing').removeClass('hidden');
				$('js-form_submit').innerHTML = 'сохранить';
			}
			el.inject(preloadContainer);
			el.removeClass('hidden');
			finalHeight = el.getCoordinates().height;
			initialHeight = visibleEl.getCoordinates().height;
			el.setStyles({
				opacity: 0,
				height: initialHeight
			});

			new Fx.Morph(visibleEl, {
				duration: 222,
				onComplete: function () {
					visibleEl.addClass('hidden');
					el.inject(preloadContainer, 'after');
					new Fx.Morph(el, {
						duration: 222,
						onComplete: function () {
							new Fx.Morph(el, {
								duration: 222,
								onComplete: function () {
									el.erase('style');
									visibleEl.removeClass('js-animation');
								}.bind(this)
							}).start({
								opacity: 1
							});
						}.bind(this)
					}).start({
						height: finalHeight
					});
				}.bind(this)
			}).start({
				opacity: 0
			});
		}
	},

	updateStatus: function (input) {
		var status = input.get('name'),
			data = status + '=' + input.checked + '&year=' + admHandler.year,
			parent = input.getParent('.b-present_status'),
			dateEl = parent.getElement('.js-date'),
			presentsStatEl = $('js-presents_stat'),
			stat = '',
			confirm_text = null; 
		
		var sendStatus = function () {
			new futuAjax({
				button: input,
				attribute: 'opacity',
				color_to: 0.5,
				color_from: 1,
				url: ajaxUrls.adm_update_status,
				data: data,
				onLoadFunction : function (response) {
					var date;
					if (response.present_received) {
						date = response.present_received;
					} else if (response.present_sent) {
						date = response.present_sent;
					}

					if (date) {
						dateEl
							.set('data-epoch_date', date)
							.removeClass('js-date__formatted');
						datesHandler.setDates();
					} else {
						dateEl.innerHTML = '';
						dateEl.set('data-epoch_date', '');
					}
					if (response.presents_sent) {
						stat = response.presents_sent + ' ' + utils.getPlural(response.presents_sent, ['подарок отправлен', 'подарка отправлено', 'подарков отправлено'])
						if (response.presents_received) {
							stat += ',';
						} else {
							stat += '!';
						}
					}
					if (response.presents_received) {
						stat += ' ' + response.presents_received + ' уже ' + utils.getPlural(response.presents_received, ['получен', 'получено', 'получено']) + '!';
					}
					presentsStatEl.innerHTML = stat;
				},
				onCustomErrorFunction: function () {
					input.set('checked', !input.checked);
				}
			});
		};
			
		if (input.checked) {
			confirm_text = status == 'present_sent' ? 'Вы точно отправили подарок?' : 'Вы точно получили подарок?';
			new futuDialogPopup({
				type : 'confirm',
				text : confirm_text,
				callback : function () {
					sendStatus();
				},
				cancel : function () {
					input.set('checked', !input.checked);
				}
			});
		} else {
			sendStatus();
		}
	},
	showAgreement: function (event) {
		var el = $('js-agreement_text'),
			content = el.getElement('.b-agreement_text'),
			initialHeight = el.hasClass('opened') ? content.getCoordinates().height : 0,
			finalHeight = el.hasClass('opened') ? 0 : content.getCoordinates().height;


		if (!el.hasClass('js-animation')) {
			el.addClass('js-animation');
			new Fx.Morph(el, {
				duration: 222,
				onComplete: function () {
					el.toggleClass('opened', !el.hasClass('opened'));
					el.erase('style');
					el.removeClass('js-animation');
				}.bind(this)
			}).start({
				height: [initialHeight, finalHeight]
			});
		}

	},
	updateStatistics: function (qty) {
		var el = $('js-adm_stat');
		if (qty > 0) {
			el.removeClass('hidden');
			el.innerHTML = '<h4><span class="b-subtitle b-subtitle_black">{playing}  уже <span class="b-subtitle_info">{qty} </span></span></h4>'.substitute({
				playing: utils.getPlural(qty, ['играет', 'играют', 'играют']),
				qty: qty + ' ' + utils.getPlural(qty, ['человек', 'человека', 'человек'])

			})
		} else {
			el.addClass('hidden');
		}
	}
};
xaocDonateHandler = {
	donate : function (payment_system, payment_type) {
		if ($('js-xaoc_donate_amount_input').value && $('js-xaoc_donate_amount_input').value < 100) {
			new futuAlert('Минимальная сумма пожертвований в фонд Хаоса&nbsp;&mdash; 100&nbsp;рублей.');
			return false;
		}
		if ($('js-xaoc_donate_amount_input').value == '') {
			$('js-xaoc_donate_amount_input').value = '100';
		}

		if (payment_system) {
			$('js-xaoc_donate_payment_system').value = payment_system;
			$('js-xaoc_donate_payment_type').value = payment_type ? payment_type : '';
		}
		
		$('js-xaoc_form').getElement('form').submit();
	},
	toggleForm : function () {
		$('js-xaoc_form').toggleClass('active');
		if ($('js-xaoc_form').hasClass('active')) {
			$('js-xaoc_donate_amount_input').focus();
		}
	}
};
archiveHandler = {
    buildBottomNavigation : function (selected_timestamp, main) {
        // архив работает по московскому времени, поэтому текущую дату
        // нужно перевести в московское время
        var selected_date_str = this.convertToMoscowTimezone(new Date(selected_timestamp));
        var moscow_current_date_str = this.convertToMoscowTimezone(new Date());

        var bottom_navigation_iHTML = '<a href="/archive/' + new Date(selected_date_str).addDays(-1).asString('yyyymmdd') + '/{main}" class="b-archive_previous_day_bottom">предыдущий день</a>';
        if (selected_date_str !== moscow_current_date_str) {
            bottom_navigation_iHTML += '<a href="/archive/' + new Date(selected_date_str).addDays(1).asString('yyyymmdd') + '/{main}" class="b-archive_next_day_bottom">следующий день</a>';
        }
        $('js-archive_bottom_navigation').innerHTML = bottom_navigation_iHTML.substitute({
            main : main
        });
    },

    convertToMoscowTimezone: function (date_to_convert) {
        // использовать toLocaleString() можно, но осторожно, так как эта функция в
        // старых браузерах (Opera 12) игнорирует параметры
        if (this._isLocaleEnabled()) {
            return date_to_convert.toLocaleDateString(
                'en-US',
                {timeZone: 'Europe/Moscow'}
            );
        }

        var converted_date = new Date(date_to_convert.getTime() +
            (date_to_convert.getTimezoneOffset() + 180)*60*1000);
        return converted_date.getMonth() + 1 + '/' + converted_date.getDate() + '/' + converted_date.getFullYear();
    },

    _isLocaleEnabled: function () {
        // проверяем, поддерживают ли браузер аргументы locales и options
        // в отдельных (устаревших) реализациях браузеров toLocaleDateString игнорирует любые аргументы,
        // а используемая локаль и форма возвращённой строки целиком зависит от реализации
        try {
            // если реализация браузера игнорирует любые аргументы функции toLocaleDateString
            // то совершенно все равно, что передавать в качестве аргумента
            // передаем в качестве аргумента несуществующую языковую метку
            new Date().toLocaleDateString('i');
            // ошибки все равно не возникнет
            return false;
        } catch (e) {
            // реализация браузера поддерживает аргументы функции toLocaleDateString
            // в качестве первого аргумента она будет ждать допустимую языковую метку
            // пример допустимого значения locales: en-US
            // а для недопустимого значения будет выброшена ошибка RangeError
            return true;
        }
    }
};


var myAppsHandler = {
    scope_map: {
        sections: [
            {
                caption: 'Пользователь',
                scopes: [
                    {
                        'name': 'mini_profile',
                        'short_description': 'получать минимальные данные профиля',
                        'full_description': 'Приложение узнает только ваши номер и логин.'
                    },
                    {
                        'name': 'profile',
                        'short_description': 'получать все данные профиля',
                        'full_description': 'Приложение сможет получить все данные вашего профиля, включая адрес электронной почты. Приложение не узнает ваш пароль и не получит доступ к вашим инбоксам, постам, комментариям и избранному.'
                    },
                    {
                        'name': 'background',
                        'short_description': 'менять фон в профиле',
                        'full_description': 'Приложение сможет менять фон на странице вашего профиля.'
                    },
                    {
                        'name': 'password_change',
                        'short_description': 'менять пароль',
                        'full_description': '<span class="b-login_auth_permissions_text_alert">Внимание! Приложение сможет изменить ваш пароль.</span>'
                    },
                    {
                        'name': 'avatar',
                        'short_description': 'менять аватар',
                        'full_description': 'Приложение сможет изменить картинку аватар на странице вашего профиля.'
                    },
                    {
                        'name': 'user_info',
                        'short_description': 'получать ваши посты, комментарии и подлепры',
                        'full_description': 'Приложение сможет читать все ваши посты, комментарии, избранное и получать список ваших подлепр.'
                    },
                    {
                        'name': 'ignore',
                        'short_description': 'игнорировать пользователей',
                        'full_description': 'Приложение сможет добавлять и удалять других пользователей из вашего списка игнорируемых.'
                    }
                ]
            },
            {
                caption: 'Посты и комментарии',
                scopes: [
                    {
                        'name': 'docs_get',
                        'short_description': 'читать посты и комментарии',
                        'full_description': 'Приложение сможет читать все доступные вам посты и комментарии в них.'
                    },
                    {
                        'name': 'feed',
                        'short_description': 'читать ваши ленты постов',
                        'full_description': 'Приложение сможет читать всю вашу ленту постов, включая посты из подлепр с ограниченным доступом. Также приложение сможет читать ленту &laquo;Мои вещи&raquo;.'
                    },
                    {
                        'name': 'get_votes',
                        'short_description': 'получать посты и комментарии, за которые вы голосовали',
                        'full_description': 'Приложение сможет получать список всех постов и комментариев, за которые вы голосовали. Если вы голосовали за посты или комментарии на закрытых подлепрах, приложение сможет их прочесть.'
                    },
                    {
                        'name': 'posts_write',
                        'short_description': 'писать и удалять посты',
                        'full_description': 'Приложение сможет писать посты от вашего имени на главную и на доступные вам подлепры. Приложение сможет удалять и менять посты на главной, если вы министр или президент. Также приложение сможет удалять и менять посты на подлепрах, где вы вы модератор или владелец.'
                    },
                    {
                        'name': 'comments_write',
                        'short_description': 'писать комментарии',
                        'full_description': 'Приложение сможет писать комментарии от вашего имени в постах на главной и на доступных вам подлепрах.'
                    },
                    {
                        'name': 'posts_favourite',
                        'short_description': 'управлять избранным',
                        'full_description': 'Приложение сможет добавлять посты в ваше избранное и удалять их из избранного.'
                    },
                    {
                        'name': 'docs_votes',
                        'short_description': 'голосовать за посты и комментарии',
                        'full_description': 'Приложение сможет голосовать и менять оценку у любых доступных вам постов и комментариев.'
                    }
                ]
            },
            {
                caption: 'Инбоксы',
                scopes: [
                    {
                        'name': 'inbox_write',
                        'short_description': 'писать, редактировать и удалять инбоксы',
                        'full_description': 'Приложение сможет писать инбоксы от вашего имени, редактировать текст ваших инбоксов, писать комментарии в инбоксах и удалять ваши инбоксы и вас из чужих инбоксов. Также приложение сможет добавлять, удалять и банить участников ваших инбоксов.'
                    },
                    {
                        'name': 'inbox_read',
                        'short_description': 'читать инбоксы',
                        'full_description': 'Приложение сможет читать текст и комментарии ваших инбоксов и инбоксов, в которых вы участвуете. Также приложение сможет помечать инбоксы и комментарии в них прочитанными.'
                    }
                ]
            },
            {
                caption: 'Другое',
                scopes: [
                    {
                        'name': 'repatriate',
                        'short_description': 'воскрешать пользователей',
                        'full_description': 'Приложение сможет восстанавливать другим пользователям гражданство, если у них достаточно ЛВ на счету.'
                    },
                    {
                        'name': 'notifications',
                        'short_description': 'управлять уведомлениями',
                        'full_description': 'Приложение сможет читать ваши уведомления, помечать их прочитанными и отписываться от уведомлений.'
                    },
                    {
                        'name': 'domain_subscribe',
                        'short_description': 'подписываться на подлепру',
                        'full_description': 'Приложение сможет подписываться и отписываться от любых доступным вам подлепр.'
                    }
                ]
            }
        ]
    },
    toggleApp: function (app_id) {
        $('js-apps__app_' + app_id).toggleClass('b-apps__new-app_opened');
        app_id == 0 && $('js-apps__app_' + app_id).hasClass('b-apps__new-app_opened') && (function () {$('js-apps__new-app_name_' + app_id).focus()}).delay(200);
    },
    loadUserApps: function () {
        new FuturicoHttpRequest({
            method : 'GET',
            url : router.generate('apps'),
            data : '',
            success : function (response) {
                var model = {
                    apps : response,
                    user : globals.user ? globals.user : null,
                    scheme : (new URI()).parsed.scheme,
                    scope_map : myAppsHandler.scope_map
                };
                env.render('apps/apps_list.html', model, function (err, html) {
                    $('js-apps').innerHTML = html;
                    iconsHandler.update();
                });
            }
        });
    },
    loadAuthorizedApps: function () {
        new FuturicoHttpRequest({
            method : 'GET',
            url : router.generate('authorized_apps'),
            data : '',
            success : function (response) {
                var model = {
                    apps : response,
                    user : globals.user ? globals.user : null,
                    scheme : (new URI()).parsed.scheme,
                    scope_map : myAppsHandler.scope_map
                };
                env.render('apps/authorized_apps_list.html', model, function (err, html) {
                    $('js-apps').innerHTML = html;
                    iconsHandler.update();
                });
            }
        });
    },
    validateApp: function (app_id) {
        if ($('js-apps__new-app_name_' + app_id).value.trim().length == 0) {
            new futuAlert('Название приложения&nbsp;&mdash; обязательная и публичная информация. Придумайте хорошее название.');
            return false;
        }
        if ($('js-apps__new-app_redirect_uri_' + app_id).value.trim().length == 0) {
            new futuAlert('После авторизации пользователя переправит к вашему приложению обратно. Урл, на который нужно будет перейти, обязателен для заполнения.');
            return false;
        }
        return true;
    },
    saveApp: function (app_id) {
        if (myAppsHandler.validateApp(app_id)) {
            var url = app_id ? router.generate('app', { app_id: app_id }) : router.generate('apps');
            var method = app_id ? 'PUT' : 'POST';
            var data = {
                name: $('js-apps__new-app_name_' + app_id).value,
                redirect_uri: $('js-apps__new-app_redirect_uri_' + app_id).value,
                authorization_grant_type: $('js-apps__new-app_authorization_grant_type_' + app_id).value,
                scope: $('js-apps__app_' + app_id).getElements('.b-apps__scope input[type="checkbox"]').filter(function ($checkbox) {
                    return $checkbox.checked
                }).map(function ($checkbox) {
                    return $checkbox.name
                }),
                client_secret: $('js-apps__new-app_client_secret_' + app_id) ? $('js-apps__new-app_client_secret_' + app_id).value : 0
            };
            new FuturicoHttpRequest({
                method : method,
                url : url,
                data : data,
                success : function (response) {
                    !app_id && myAppsHandler.loadUserApps();
                    app_id && (new futuAlert('Приложение сохранено'))
                }
            });
        }
    },
    deleteUserApp: function (app_id) {
        new futuDialogPopup({
            text: 'Это ваше приложение. Вы уверены, что хотите его удалить?',
            type: 'confirm',
            callback: function () {
                new FuturicoHttpRequest({
                    method : 'DELETE',
                    url : router.generate('app', { app_id: app_id }),
                    data : '',
                    success : function (response) {
                        myAppsHandler.loadUserApps();
                        new futuAlert('Приложение удалено');
                    }
                });
            }
        });
    },
    deleteAuthorizedApp: function (app_id) {
        new futuDialogPopup({
            text: 'Запрещаем доступ этому приложению?',
            type: 'confirm',
            callback: function () {
                new FuturicoHttpRequest({
                    method : 'DELETE',
                    url : router.generate('authorized_app', { app_id: app_id }),
                    data : '',
                    success : function (response) {
                        myAppsHandler.loadAuthorizedApps();
                        new futuAlert('Приложение удалено');
                    }
                });
            }
        });
    },
    resetSecretCode: function (app_id) {
        new futuDialogPopup({
            text: 'Генерируем новый секретный код? Старый больше работать не будет.',
            type: 'confirm',
            callback: function () {
                new FuturicoHttpRequest({
                    method : 'POST',
                    url : router.generate('app_reset_secret', { app_id: app_id }),
                    data : '',
                    success : function (response) {
                        $('js-apps__new-app_client_secret_' + app_id).value = response.client_secret;
                        new futuAlert('Новый секретный код для приложения &laquo;' + $('js-apps__new-app_name_' + app_id).value + '&raquo; сгенерирован');
                    }
                });
            }
        });
    }
};

datesHandler = {
	today: null,
	yesterday: null,
	tomorrow: null,
	msInHour: 3600000,
	msInDay: 86400000,
	mskTimeZone: 3,

	fancyDateFormat: function(time_s) {
		if (!this.today) {
			var todayTime;
			this.today = new Date().zeroTime();
			todayTime = this.today.getTime();
			this.yesterday = new Date(todayTime - datesHandler.msInDay);
			this.tomorrow = new Date(todayTime + datesHandler.msInDay);
		}

		var date = new Date(time_s),
			dateZeroTime = new Date(time_s).zeroTime(),
			output = '';

		if (dateZeroTime.getTime() == this.today.getTime()) {
			output = 'сегодня';
		} else if (dateZeroTime.getTime() == this.yesterday.getTime()) {
			output = 'вчера';
		} else if (dateZeroTime.getTime() == this.tomorrow.getTime()) {
			output = 'завтра';
		} else {
			output = date.format('d mmmm yyyy');
		}
		output += ' в&nbsp;' + date.format('HH.MM');

		return output;
	},
	
	getTimeAmount: function(time1_s, time2_s) {
		var timeDiff = Math.abs(time1_s - time2_s),
			daysDiff = Math.floor(timeDiff / (24 * 60 * 60)),
			hoursDiff = Math.floor(timeDiff / (60 * 60)) - daysDiff * 24,
			minutesDiff = Math.floor(timeDiff / (60)) - daysDiff * 24 * 60 - hoursDiff * 60,
			secondsDiff = Math.floor(timeDiff) - daysDiff * 24 * 60 * 60 - hoursDiff * 60 * 60,
			timeAmount = '';

		if (daysDiff > 0) {
			if (daysDiff > 1) {
				timeAmount = daysDiff + ' ' + utils.getPlural(daysDiff, ['день', 'дня', 'дней']) + ' ';
			} else {
				timeAmount = 'день';
			}
		} else if (hoursDiff > 0) {
			if (hoursDiff > 1) {
				timeAmount = hoursDiff + ' ' + utils.getPlural(hoursDiff, ['час', 'часа', 'часов']) + ' ';
			} else {
				timeAmount = 'час';
			}
		} else if (minutesDiff > 0) {
			if (minutesDiff > 1) {
				timeAmount = minutesDiff + ' ' + utils.getPlural(minutesDiff, ['минуту', 'минуты', 'минут']) + ' ';
			} else {
				timeAmount = 'минуту';
			}
		} else if (secondsDiff > 0) {
			if (secondsDiff > 1) {
				timeAmount = secondsDiff + ' ' + utils.getPlural(secondsDiff, ['секунду', 'секунд', 'секунд']) + ' ';
			} else {
				timeAmount = 'секунду';
			}
		}
		return timeAmount;
	},

	setDates : function (scope) {
		(scope || document.body).getElements('.js-date:not(.js-date__formatted)').each(function (date_element) {
			var epoch = date_element.getAttribute('data-epoch_date'),
				dateStr = date_element.getAttribute('data-string_date'),
				time;
			
			if (epoch || epoch === '0') {
				time = epoch * 1000;
			} else if (dateStr && dateStr != '') {
				var dateList = dateStr.split('/'),
					date;
				
				dateList[1] = parseInt(dateList[1], 10) - 1;
				date = new Date(dateList[2], dateList[1], dateList[0], 0, 0, 0);
				time = date.getTime();
			}
			
			if (time || time === 0) {
				if (date_element.hasClass('js-date-regular')) {
					date_element.innerHTML = (new Date(time).format('dd.mm.yyyy'));
				} else if (date_element.hasClass('js-date-regular-time')) {
					date_element.innerHTML = (new Date(epoch * 1000).format('HH:MM'));
				} else if (date_element.hasClass('js-date-regular-date')) {
					date_element.innerHTML = (new Date(time).format('d mmmm yyyy'));
				} else if (date_element.hasClass('js-date-regular-date-time')) {
					date_element.innerHTML = (new Date(time).format('d mmmm yyyy, HH:MM'));
				} else if (date_element.hasClass('js-date-regular-day')) {
					date_element.innerHTML = (new Date(time).format('dd.mm'));
				} else {
					date_element.innerHTML = this.fancyDateFormat(time);
				}
			}

			date_element.addClass('js-date__formatted');
		}.bind(this));
	},
	changeDate: function (el, epoch) {
		el.set('data-epoch_date', epoch).removeClass('js-date__formatted');
	},
	getUTCDate: function (ms) {
		var ms = ms || '',
			date = new Date(ms);
		return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());
	}
};

/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

var dateFormat = function () {
	var	token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
		timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
		timezoneClip = /[^-+\dA-Z]/g,
		pad = function (val, len) {
			val = String(val);
			len = len || 2;
			while (val.length < len) val = "0" + val;
			return val;
		};

	// Regexes and supporting functions are cached through closure
	return function (date, mask, utc) {
		var dF = dateFormat;

		// You can't provide utc if you skip other args (use the "UTC:" mask prefix)
		if (arguments.length == 1 && Object.prototype.toString.call(date) == "[object String]" && !/\d/.test(date)) {
			mask = date;
			date = undefined;
		}

		// Passing date through Date applies Date.parse, if necessary
		date = date ? new Date(date) : new Date;
		if (isNaN(date)) throw SyntaxError("invalid date");

		mask = String(dF.masks[mask] || mask || dF.masks["default"]);

		// Allow setting the utc argument via the mask
		if (mask.slice(0, 4) == "UTC:") {
			mask = mask.slice(4);
			utc = true;
		}

		var	_ = utc ? "getUTC" : "get",
			d = date[_ + "Date"](),
			D = date[_ + "Day"](),
			m = date[_ + "Month"](),
			y = date[_ + "FullYear"](),
			H = date[_ + "Hours"](),
			M = date[_ + "Minutes"](),
			s = date[_ + "Seconds"](),
			L = date[_ + "Milliseconds"](),
			o = utc ? 0 : date.getTimezoneOffset(),
			flags = {
				d:    d,
				dd:   pad(d),
				ddd:  dF.i18n.dayNames[D],
				dddd: dF.i18n.dayNames[D + 7],
				m:    m + 1,
				mm:   pad(m + 1),
				mmm:  dF.i18n.monthNames[m],
				mmmm: dF.i18n.monthNames[m + 12],
				yy:   String(y).slice(2),
				yyyy: y,
				h:    H % 12 || 12,
				hh:   pad(H % 12 || 12),
				H:    H,
				HH:   pad(H),
				M:    M,
				MM:   pad(M),
				s:    s,
				ss:   pad(s),
				l:    pad(L, 3),
				L:    pad(L > 99 ? Math.round(L / 10) : L),
				t:    H < 12 ? "a"  : "p",
				tt:   H < 12 ? "am" : "pm",
				T:    H < 12 ? "A"  : "P",
				TT:   H < 12 ? "AM" : "PM",
				Z:    utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),
				o:    (o > 0 ? "-" : "+") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
				S:    ["th", "st", "nd", "rd"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]
			};

		return mask.replace(token, function ($0) {
			return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);
		});
	};
}();

// Some common format strings
dateFormat.masks = {
	"default":      "ddd mmm dd yyyy HH:MM:ss",
	shortDate:      "m/d/yy",
	mediumDate:     "mmm d, yyyy",
	longDate:       "mmmm d, yyyy",
	fullDate:       "dddd, mmmm d, yyyy",
	shortTime:      "h:MM TT",
	mediumTime:     "h:MM:ss TT",
	longTime:       "h:MM:ss TT Z",
	isoDate:        "yyyy-mm-dd",
	isoTime:        "HH:MM:ss",
	isoDateTime:    "yyyy-mm-dd'T'HH:MM:ss",
	isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
};

// Internationalization strings
dateFormat.i18n = {
	dayNames: [
		"Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб",
		"Воскресенье", "Поенедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"
	],
	monthNames: [
		"Янв", "Фев", "Март", "Апр", "Май", "Июнь", "Июль", "Авг", "Сен", "Окт", "Ноя", "Дек",
		"Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля", "Августа", "Сентября", "Октября", "Ноября", "Декабря"
	]
};

// For convenience...
Date.prototype.format = function (mask, utc) {
	return dateFormat(this, mask, utc);
};

/*
 * Date prototype extensions. Doesn't depend on any
 * other code. Doens't overwrite existing methods.
 *
 * Adds dayNames, abbrDayNames, monthNames and abbrMonthNames static properties and isLeapYear,
 * isWeekend, isWeekDay, getDaysInMonth, getDayName, getMonthName, getDayOfYear, getWeekOfYear,
 * setDayOfYear, addYears, addMonths, addDays, addHours, addMinutes, addSeconds methods
 *
 * Copyright (c) 2006 Jörn Zaefferer and Brandon Aaron (brandon.aaron@gmail.com || http://brandonaaron.net)
 *
 * Additional methods and properties added by Kelvin Luck: firstDayOfWeek, dateFormat, zeroTime, asString, fromString -
 * I've added my name to these methods so you know who to blame if they are broken!
 * 
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 */

/**
 * An Array of day names starting with Sunday.
 * 
 * @example dayNames[0]
 * @result 'Sunday'
 *
 * @name dayNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.dayNames = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];

/**
 * An Array of abbreviated day names starting with Sun.
 * 
 * @example abbrDayNames[0]
 * @result 'Sun'
 *
 * @name abbrDayNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.abbrDayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
Date.classDayNames = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];

/**
 * An Array of month names starting with Janurary.
 * 
 * @example monthNames[0]
 * @result 'January'
 *
 * @name monthNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.monthNames = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'];

/**
 * An Array of abbreviated month names starting with Jan.
 * 
 * @example abbrMonthNames[0]
 * @result 'Jan'
 *
 * @name monthNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.abbrMonthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

/**
 * The first day of the week for this locale.
 *
 * @name firstDayOfWeek
 * @type Number
 * @cat Plugins/Methods/Date
 * @author Kelvin Luck
 */
Date.firstDayOfWeek = 1;

/**
 * The format that string dates should be represented as (e.g. 'dd/mm/yyyy' for UK, 'mm/dd/yyyy' for US, 'yyyy-mm-dd' for Unicode etc).
 *
 * @name format
 * @type String
 * @cat Plugins/Methods/Date
 * @author Kelvin Luck
 */
Date.format = 'dd/mm/yyyy';
//Date.format = 'mm/dd/yyyy';
//Date.format = 'yyyy-mm-dd';
//Date.format = 'dd mmm yy';

/**
 * The first two numbers in the century to be used when decoding a two digit year. Since a two digit year is ambiguous (and date.setYear
 * only works with numbers < 99 and so doesn't allow you to set years after 2000) we need to use this to disambiguate the two digit year codes.
 *
 * @name format
 * @type String
 * @cat Plugins/Methods/Date
 * @author Kelvin Luck
 */
Date.fullYearStart = '20';

(function() {

	/**
	 * Adds a given method under the given name 
	 * to the Date prototype if it doesn't
	 * currently exist.
	 *
	 * @private
	 */
	function add(name, method) {
		if( !Date.prototype[name] ) {
			Date.prototype[name] = method;
		}
	};
	
	/**
	 * Checks if the year is a leap year.
	 *
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.isLeapYear();
	 * @result true
	 *
	 * @name isLeapYear
	 * @type Boolean
	 * @cat Plugins/Methods/Date
	 */
	add("isLeapYear", function() {
		var y = this.getFullYear();
		return (y%4==0 && y%100!=0) || y%400==0;
	});
	
	/**
	 * Checks if the day is a weekend day (Sat or Sun).
	 *
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.isWeekend();
	 * @result false
	 *
	 * @name isWeekend
	 * @type Boolean
	 * @cat Plugins/Methods/Date
	 */
	add("isWeekend", function() {
		return this.getDay()==0 || this.getDay()==6;
	});
	
	/**
	 * Check if the day is a day of the week (Mon-Fri)
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.isWeekDay();
	 * @result false
	 * 
	 * @name isWeekDay
	 * @type Boolean
	 * @cat Plugins/Methods/Date
	 */
	add("isWeekDay", function() {
		return !this.isWeekend();
	});
	
	/**
	 * Gets the number of days in the month.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDaysInMonth();
	 * @result 31
	 * 
	 * @name getDaysInMonth
	 * @type Number
	 * @cat Plugins/Methods/Date
	 */
	add("getDaysInMonth", function() {
		return [31,(this.isLeapYear() ? 29:28),31,30,31,30,31,31,30,31,30,31][this.getMonth()];
	});
	
	/**
	 * Gets the name of the day.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDayName();
	 * @result 'Saturday'
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDayName(true);
	 * @result 'Sat'
	 * 
	 * @param abbreviated Boolean When set to true the name will be abbreviated.
	 * @name getDayName
	 * @type String
	 * @cat Plugins/Methods/Date
	 */
	add("getDayName", function(abbreviated) {
		return abbreviated ? Date.abbrDayNames[this.getDay()] : Date.dayNames[this.getDay()];
	});

	/**
	 * Gets the name of the month.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getMonthName();
	 * @result 'Janurary'
	 *
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getMonthName(true);
	 * @result 'Jan'
	 * 
	 * @param abbreviated Boolean When set to true the name will be abbreviated.
	 * @name getDayName
	 * @type String
	 * @cat Plugins/Methods/Date
	 */
	add("getMonthName", function(abbreviated) {
		return abbreviated ? Date.abbrMonthNames[this.getMonth()] : Date.monthNames[this.getMonth()];
	});

	/**
	 * Get the number of the day of the year.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDayOfYear();
	 * @result 11
	 * 
	 * @name getDayOfYear
	 * @type Number
	 * @cat Plugins/Methods/Date
	 */
	add("getDayOfYear", function() {
		var tmpdtm = new Date("1/1/" + this.getFullYear());
		return Math.floor((this.getTime() - tmpdtm.getTime()) / 86400000);
	});
	
	/**
	 * Get the number of the week of the year.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getWeekOfYear();
	 * @result 2
	 * 
	 * @name getWeekOfYear
	 * @type Number
	 * @cat Plugins/Methods/Date
	 */
	add("getWeekOfYear", function() {
		return Math.ceil(this.getDayOfYear() / 7);
	});

	/**
	 * Set the day of the year.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.setDayOfYear(1);
	 * dtm.toString();
	 * @result 'Tue Jan 01 2008 00:00:00'
	 * 
	 * @name setDayOfYear
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("setDayOfYear", function(day) {
		this.setMonth(0);
		this.setDate(day);
		return this;
	});
	
	/**
	 * Add a number of years to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addYears(1);
	 * dtm.toString();
	 * @result 'Mon Jan 12 2009 00:00:00'
	 * 
	 * @name addYears
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addYears", function(num) {
		this.setFullYear(this.getFullYear() + num);
		return this;
	});
	
	/**
	 * Add a number of months to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addMonths(1);
	 * dtm.toString();
	 * @result 'Tue Feb 12 2008 00:00:00'
	 * 
	 * @name addMonths
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addMonths", function(num) {
		var tmpdtm = this.getDate();
		
		this.setMonth(this.getMonth() + num);
		
		if (tmpdtm > this.getDate())
			this.addDays(-this.getDate());
		
		return this;
	});
	
	/**
	 * Add a number of days to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addDays(1);
	 * dtm.toString();
	 * @result 'Sun Jan 13 2008 00:00:00'
	 * 
	 * @name addDays
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addDays", function(num) {
		//this.setDate(this.getDate() + num);
		this.setTime(this.getTime() + (num*86400000) );
		return this;
	});
	
	/**
	 * Add a number of hours to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addHours(24);
	 * dtm.toString();
	 * @result 'Sun Jan 13 2008 00:00:00'
	 * 
	 * @name addHours
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addHours", function(num) {
		this.setHours(this.getHours() + num);
		return this;
	});

	/**
	 * Add a number of minutes to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addMinutes(60);
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 01:00:00'
	 * 
	 * @name addMinutes
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addMinutes", function(num) {
		this.setMinutes(this.getMinutes() + num);
		return this;
	});
	
	/**
	 * Add a number of seconds to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addSeconds(60);
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 00:01:00'
	 * 
	 * @name addSeconds
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addSeconds", function(num) {
		this.setSeconds(this.getSeconds() + num);
		return this;
	});
	
	/**
	 * Sets the time component of this Date to zero for cleaner, easier comparison of dates where time is not relevant.
	 * 
	 * @example var dtm = new Date();
	 * dtm.zeroTime();
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 00:01:00'
	 * 
	 * @name zeroTime
	 * @type Date
	 * @cat Plugins/Methods/Date
	 * @author Kelvin Luck
	 */
	add("zeroTime", function() {
		this.setMilliseconds(0);
		this.setSeconds(0);
		this.setMinutes(0);
		this.setHours(0);
		return this;
	});
	
	/**
	 * Returns a string representation of the date object according to Date.format.
	 * (Date.toString may be used in other places so I purposefully didn't overwrite it)
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.asString();
	 * @result '12/01/2008' // (where Date.format == 'dd/mm/yyyy'
	 * 
	 * @name asString
	 * @type Date
	 * @cat Plugins/Methods/Date
	 * @author Kelvin Luck
	 */
	add("asString", function(format) {
		var r = format || Date.format;
		return r
			.split('yyyy').join(this.getFullYear())
			.split('yy').join((this.getFullYear() + '').substring(2))
			.split('mmmm').join(this.getMonthName(false))
			.split('mmm').join(this.getMonthName(true))
			.split('mm').join(_zeroPad(this.getMonth()+1))
			.split('dd').join(_zeroPad(this.getDate()))
			.split('hh').join(_zeroPad(this.getHours()))
			.split('min').join(_zeroPad(this.getMinutes()))
			.split('ss').join(_zeroPad(this.getSeconds()));
	});
	
	/**
	 * Returns a new date object created from the passed String according to Date.format or false if the attempt to do this results in an invalid date object
	 * (We can't simple use Date.parse as it's not aware of locale and I chose not to overwrite it incase it's functionality is being relied on elsewhere)
	 *
	 * @example var dtm = Date.fromString("12/01/2008");
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 00:00:00' // (where Date.format == 'dd/mm/yyyy'
	 * 
	 * @name fromString
	 * @type Date
	 * @cat Plugins/Methods/Date
	 * @author Kelvin Luck
	 */
	Date.fromString = function(s, format)
	{
		var f = format || Date.format;
		var d = new Date('01/01/1977');
		
		var mLength = 0;

		var iM = f.indexOf('mmmm');
		if (iM > -1) {
			for (var i=0; i<Date.monthNames.length; i++) {
				var mStr = s.substr(iM, Date.monthNames[i].length);
				if (Date.monthNames[i] == mStr) {
					mLength = Date.monthNames[i].length - 4;
					break;
				}
			}
			d.setMonth(i);
		} else {
			iM = f.indexOf('mmm');
			if (iM > -1) {
				var mStr = s.substr(iM, 3);
				for (var i=0; i<Date.abbrMonthNames.length; i++) {
					if (Date.abbrMonthNames[i] == mStr) break;
				}
				d.setMonth(i);
			} else {
				d.setMonth(Number(s.substr(f.indexOf('mm'), 2)) - 1);
			}
		}
		
		var iY = f.indexOf('yyyy');

		if (iY > -1) {
			if (iM < iY)
			{
				iY += mLength;
			}
			d.setFullYear(Number(s.substr(iY, 4)));
		} else {
			if (iM < iY)
			{
				iY += mLength;
			}
			// TODO - this doesn't work very well - are there any rules for what is meant by a two digit year?
			d.setFullYear(Number(Date.fullYearStart + s.substr(f.indexOf('yy'), 2)));
		}
		var iD = f.indexOf('dd');
		if (iM < iD)
		{
			iD += mLength;
		}
		d.setDate(Number(s.substr(iD, 2)));
		if (isNaN(d.getTime())) {
			return false;
		}
		return d;
	};
	
	// utility method
	var _zeroPad = function(num) {
		var s = '0'+num;
		return s.substring(s.length-2)
		//return ('0'+num).substring(-2); // doesn't work on IE :(
	};
	
})();

/**
 * ReplaceAll by Fagner Brack (MIT Licensed)
 * Replaces all occurrences of a substring in a string
 */
String.prototype.replaceAll = function( token, newToken, ignoreCase ) {
    var _token;
    var str = this + "";
    var i = -1;

    if ( typeof token === "string" ) {

        if ( ignoreCase ) {

            _token = token.toLowerCase();

            while( (
                i = str.toLowerCase().indexOf(
                    token, i >= 0 ? i + newToken.length : 0
                ) ) !== -1
            ) {
                str = str.substring( 0, i ) +
                    newToken +
                    str.substring( i + token.length );
            }

        } else {
            return this.split( token ).join( newToken );
        }

    }
return str;
};


postsCutHandler = {
	cut_length : 300,
	cut : function (posts_holder) {
		posts_holder = posts_holder || document;
		var posts = $(posts_holder).getElements('.post');
		if (!globals.user || (globals.user && !globals.user.post_collapsing_disabled)) {
			for (var i = 0, l = posts.length; i < l; i++) {
				var post = posts[i];
				if (!post.hasClass('js-post_opened')) {
					postsCutHandler.cutPost(post);
				}
			}
		} else {
			for (var i = 0, l = posts.length; i < l; i++) {
				var post = posts[i];
				post.removeClass('pos_hidden');
			}
		}
	},
	getText : function (html) {
		var testing_element = new Element('div', {
			'html' : html
		});
		return testing_element.textContent || testing_element.innerText;
	},
	getNearestDistanceToText : function (html, query, position, limit) {
		position = position || 0;
		query = query || ' ';
		
		var html_before = html.substr(0, position);
		var html_after = html.substr(position);
		
		var text_before = postsCutHandler.getText(html_before);
		var text_after = postsCutHandler.getText(html_after);
		
		var text_distance_before = text_before.lastIndexOf(query) >= 0 ? text_before.length - text_before.lastIndexOf(query) : -1;
		var text_distance_after = text_after.indexOf(query) >= 0 ? text_after.indexOf(query) : -1;
		
		var html_distance_before = html_before.length - html_before.lastIndexOf(query);
		
		var html_distance_after = html_after.indexOf(query);
		
		if ((html_before.lastIndexOf(query) >= 0 && text_distance_before >= 0 && text_distance_before < limit) || (html_after.lastIndexOf(query) >= 0 && text_distance_after >= 0 && text_distance_after < limit)) {
			if (text_distance_after < 0 || (text_distance_before >= 0 && text_distance_before < text_distance_after)) {
				if (html_before.lastIndexOf(query) >= 0) {
					position = -html_distance_before;
				}
			} else {
				if (html_after.lastIndexOf(query) >= 0) {
					position = html_distance_after;
				}
			}
			return position;
		} else {
			return null;
		}
	},
	getFirstPunctuationMarkPosition : function (html) {
		var position = 0;
		var punctuation_mark_position = html.search(/[!\.;:,\s-\#$%\^&\*}=\-_`~)]/);
		if (html.indexOf('<') < 0 || (punctuation_mark_position < html.indexOf('<'))) {
			if (punctuation_mark_position >= 0) {
				position = punctuation_mark_position;
			} else {
				position = html.length;
			}
		} else if (html.indexOf('<') >= 0){
			position = html.indexOf('>') + 1;
		}
		return position;
	},
	getCutSegmentInfo : function (post_body_html, cut_length) {
		// переменные для дополнительного html до и после разреза
		var cut_html_before = '';
		var cut_html_after = '';
		
		var post_body_html_before_cut = post_body_html.substr(0, cut_length);
		var post_body_html_after_cut = post_body_html.substr(cut_length);

		// новые части
		post_body_html_after_cut = post_body_html.substr(cut_length);
		post_body_html_before_cut = post_body_html.substr(0, cut_length);
		// если после обреза сначала закрывается тег, значит мы внутри <>, обрез увеличивается	
		if (post_body_html_after_cut.indexOf('>') < post_body_html_after_cut.indexOf('<')) {
			cut_length += post_body_html_after_cut.indexOf('>') + 1;
			// новые части
			post_body_html_after_cut = post_body_html.substr(cut_length);
			post_body_html_before_cut = post_body_html.substr(0, cut_length);
		}
		
		// ищем ближайший перенос и двойной перенос и смещаем обрез к ним
		//var nearest_double_break_distance = postsCutHandler.getNearestDistanceToText(post_body_html, '\n\n', cut_length, cut_length/1.5);
		var nearest_double_break_distance = null;
		var nearest_break_distance = postsCutHandler.getNearestDistanceToText(post_body_html, '\n', cut_length, cut_length/1.5);
		if (nearest_double_break_distance !== null) {
			cut_length += nearest_double_break_distance;
		} else if (nearest_break_distance !== null) {
			cut_length += nearest_break_distance;
		} else {
			if (post_body_html_before_cut[post_body_html_before_cut.length - 1] != '>') {
				cut_length += postsCutHandler.getFirstPunctuationMarkPosition(post_body_html_after_cut);
			}
		}
		
		// новые части
		post_body_html_after_cut = post_body_html.substr(cut_length);
		post_body_html_before_cut = post_body_html.substr(0, cut_length);

		// ставим картинку в предполагаемое место обреза
		post_body_html = post_body_html_before_cut + '<img class="js-testing_cut_image hidden" alt="">' + post_body_html_after_cut;
		
		// элемент для тестирования обреза
		var testing_cut_element = new Element('div', {
			html : post_body_html
		});
		var testing_cut_image_element = testing_cut_element.getElement('.js-testing_cut_image');
		
		// если картинка - первый элемент, переносим ее перед родительским
		if (!testing_cut_image_element.previousSibling && testing_cut_image_element.getParents().length > 1) {
			testing_cut_image_element.inject(testing_cut_image_element.getParents()[0], 'before');
		}
		
		// если у картинки есть родители
		var testing_cut_image_element_parents = testing_cut_image_element.getParents();
		if (testing_cut_image_element_parents.length > 1) {
			for (var i = 0; i < testing_cut_image_element_parents.length - 1; i++) {
				// клонируем их для точного соответствия всех атрибутов
				var iterated_parent_element = testing_cut_image_element_parents[i];
				var cloned_iterated_parent_holder_element = new Element('div');
				iterated_parent_element.cloneNode(false).inject(cloned_iterated_parent_holder_element);
				
				// вырезаем открывающие и закрывающие теги
				var parent_html_starting_tag = cloned_iterated_parent_holder_element.innerHTML.substr(0, cloned_iterated_parent_holder_element.innerHTML.indexOf('>') + 1);
				var parent_html_closing_tag = cloned_iterated_parent_holder_element.innerHTML.substr(cloned_iterated_parent_holder_element.innerHTML.lastIndexOf('<'));
				
				// и собираем их для места возле обреза
				cut_html_after = parent_html_starting_tag + cut_html_after;
				cut_html_before += parent_html_closing_tag;
			}
			
		}
		
		// определяем место разреща по положению картинки
		post_body_html =  testing_cut_element.innerHTML;
		cut_length = post_body_html.toUpperCase().indexOf('<img class="js-testing_cut_image hidden" alt="">'.toUpperCase());

		var cut_info = {
			cut_length : cut_length,
			cut_html_before : cut_html_before,
			cut_html_after : cut_html_after
		};
		
		return cut_info;
	},
	cutPost : function (post_element, dont_hide_post) {
		// не обрезаем на странице с комментариями
		if (post_element.getParent('.post_comments_page')) {
			return false;
		}
		
		// если тела поста нет, обрезать нечего
		var post_body_element = post_element.getElement('.dti');
		if (!post_body_element) {
			post_element.removeClass('pos_hidden');
			return false;
		}
		
		// работаем с клоном тела поста
		var post_body_element_clone = post_element.getElement('.dti').cloneNode(true);
		
		// удаляем ненужные переносы строк
		var post_body_element_html = post_body_element_clone.innerHTML.replaceAll('\n', '');
		
		// заменяем br на переносы для упрощения
		post_body_element_html = post_body_element_html.replaceAll('<br>', '\n');
		
		// возвращаем html в элемент
		post_body_element_clone.innerHTML = post_body_element_html.trim();
		
		// удаляем пробелы и переносы в начале и в конце всех вложенных тегов с возможным текстом внутри
		var trimmable_tags = ['a', 'i', 'b', 'u', 'span', 'sup', 'sub', 'p'];
		for (var i = 0; i < trimmable_tags.length; i++) {
			$A(post_body_element_clone.getElements(trimmable_tags[i])).each(function (post_body_inner_element) {
				post_body_inner_element.innerHTML = post_body_inner_element.innerHTML.trim();
				// удаляем пустые теги
				if (post_body_inner_element.innerHTML.length == 0) {
					post_body_inner_element.destroy();
				}
			});
		}
		
		// возвращаем html в пеменную
		post_body_element_html = post_body_element_clone.innerHTML;
		
		// проверяем длину текста, и, если она меньше, чем cut_length, возвращаем br на место и показываем пост
		if (!postsCutHandler.getText(post_body_element_html) || postsCutHandler.getText(post_body_element_html).length <= postsCutHandler.cut_length) {
			post_body_element.innerHTML = post_body_element_html.replaceAll('\n', '<br>');
			post_element.removeClass('pos_hidden');
			return false;
		}
		
		// информация о месте обреза
		var cut_info = postsCutHandler.getCutSegmentInfo(post_body_element_html, postsCutHandler.cut_length);
		
		// информация о месте обреза
		var cut_info = postsCutHandler.getCutSegmentInfo(post_body_element_html, postsCutHandler.cut_length);

		// если обрез равен длине тела, показываем пост
		if (post_body_element_html.length == cut_info.cut_length) {
			post_body_element.innerHTML = post_body_element_html.replaceAll('\n', '<br>');
			post_element.removeClass('pos_hidden');
			return false;
		}

		// если скрывается меньше половины видимого, показываем весь пост
		if (postsCutHandler.getText(cut_info.cut_html_before + post_body_element_html.substr(cut_info.cut_length)).length < postsCutHandler.cut_length/2) {
			post_body_element.innerHTML = post_body_element_html.replaceAll('\n', '<br>');
			post_element.removeClass('pos_hidden');
			return false;
		}

		// новый html для тела поста с врезанным катом
		var new_post_body_html = '';
		new_post_body_html = post_body_element_html.substr(0, cut_info.cut_length);
		new_post_body_html += cut_info.cut_html_before;
		new_post_body_html += '<span class="b-post_cut_segment hidden">';
		new_post_body_html += cut_info.cut_html_after;
		new_post_body_html += post_body_element_html.substr(cut_info.cut_length);
		new_post_body_html += '</span>';
		new_post_body_html += '<span class="b-cut_link" onclick="return false;"><i></i><span>развернуть</span><span class="b-cut_again">свернуть</span></span>';
		
		// удаляем пробелы и переносы и возвращаем br на место
		new_post_body_html = new_post_body_html.trim();
		new_post_body_html = new_post_body_html.replaceAll('\n', '<br>');
		
		// ставим новый html тела поста на страницу
		post_body_element.innerHTML = new_post_body_html;
		
		// если нам не нужно скрыть пост прямо сейчас , раскрываем его
		if (dont_hide_post) {
			post_element.addClass('js-post_opened');
			post_body_element.getElement('.b-post_cut_segment').removeClass('hidden');
		}
		
		// показываем новый пост
		post_element.removeClass('pos_hidden');

		// обработчик для кнопки развернуть/свернуть
		post_body_element.getElement('.b-cut_link').addEvent('click', function (event) {
			event = new Event(event);
			event.preventDefault();
			var post_element = $(this).getParent('.post');
			postsCutHandler.togglePost(post_element);
		});
	},
	togglePost : function (post_element) {
		if (post_element.hasClass('js-post_opened')) {
			postsCutHandler.hidePost(post_element);
		} else {
			postsCutHandler.showPost(post_element);
		}
	},
	hidePost : function (post_element) {
		post_element.removeClass('js-post_opened');
		
		var post_holder_element = post_element.getElement('.dt');
		var post_holder_element_height_before_shrink = post_holder_element.offsetHeight - parseInt(post_holder_element.getStyle('padding-top')) - parseInt(post_holder_element.getStyle('padding-bottom'));
		
		post_holder_element.set('styles', {
			'height' : post_holder_element_height_before_shrink + 'px',
			'overflow' : 'hidden'
		});
	
		var post_holder_element_height_after_shrink = post_holder_element_height_before_shrink 
												- post_element.getElement('.b-post_cut_segment').offsetHeight
												+ 16;
												
		var shrink_animation_duration = post_holder_element_height_before_shrink - post_holder_element_height_after_shrink;
		if (shrink_animation_duration > 1000) {
			shrink_animation_duration = 1000;
		}
	
		if ($(document.body).hasClass('l-touch_capable')) {
			post_element.set('styles', {
				'height' : 'auto'
			});
			shrink_animation_duration = 0;
		}
	
		post_holder_element.get('morph').removeEvents('complete');
		post_holder_element.set('morph', {
			duration : shrink_animation_duration,
			onComplete : function () {
				if (post_element.getElement('.b-post_cut_segment')) {
					post_element.getElement('.b-post_cut_segment').addClass('hidden');
				}
				post_holder_element.set('styles', {
					'height' : 'auto',
					'overflow' : 'visible'
				});
				(function () {
				if (post_element.getNext('.post')) {
					if (post_element.getNext('.post').getPosition().y < window.getScroll().y) {
						var scroll_window_to_post_fx = new Fx.Scroll(window, {
							duration : 1000
						});
						scroll_window_to_post_fx.start(window.getScroll().x, post_element.getNext('.post').getPosition().y);
					}
				}
				}).delay(100);
			}
		});
		post_holder_element.morph({
			'height' : post_holder_element_height_after_shrink + 'px'
		});
	},
	showPost : function (post_element, onComplete) {
		onComplete = onComplete || $empty;
		post_element.addClass('js-post_opened');
		
		var post_holder_element = post_element.getElement('.dt');
		var post_body_element = post_element.getElement('.dti');

		if (post_element.getElement('.b-post_cut_segment')) {
			var post_holder_element_height_before_expand = post_body_element.offsetHeight;
		
			post_holder_element.set('styles', {
				'height' : post_holder_element_height_before_expand + 'px',
				'overflow' : 'hidden'
			});
		
			post_element.getElements('.b-post_cut_segment').removeClass('hidden');
		
			// force reflow для safari
			post_element.getElement('.b-post_cut_segment').style.width = post_holder_element.offsetWidth + 'px';

			var post_holder_element_height_after_expand = post_body_element.offsetHeight;
		
			var expand_animation_duration = post_holder_element_height_after_expand - post_holder_element_height_before_expand;
			if (expand_animation_duration > 1000) {
				expand_animation_duration = 1000;
			}

			if ($(document.body).hasClass('l-touch_capable')) {
				post_element.set('styles', {
					'height' : post_holder_element_height_after_expand + post_element.getElement('.dd').offsetHeight,
					'margin-bottom' : 6
				});
				post_element.getElement('.dd').set('styles', {
					'position' : 'absolute',
					'bottom' : 0,
					'left' : 0,
					'width' : post_element.getCoordinates().width - 63,
					'margin-left' : 43,
					'margin-top' : 6,
					'margin-right' : 20,
					'margin-bottom' : 14
				});
				post_holder_element.set('styles', {
					'position' : 'absolute',
					'top' : 0,
					'left' : 0,
					'width' : post_element.getCoordinates().width - 63,
					'margin-left' : 43,
					'margin-top' : 6,
					'margin-right' : 20
				});
			}

			post_holder_element.get('morph').removeEvents('complete');
			post_holder_element.set('morph', {
				duration : expand_animation_duration,
				onComplete : function () {
					post_holder_element.set('styles', {
						'height' : 'auto',
						'overflow' : 'visible'
					});
					if ($(document.body).hasClass('l-touch_capable')) {
						post_element.set('styles', {
							'height' : 'auto',
							'margin-bottom' : 0
						});
						post_element.getElement('.dd').set('styles', {
							'position' : 'relative',
							'bottom' : 'auto',
							'left' : 'auto',
							'margin-left' : 0,
							'margin-top' : 0,
							'margin-right' : 0,
							'margin-bottom' : 0
						});
						post_holder_element.set('styles', {
							'position' : 'relative',
							'top' : 'auto',
							'left' : 'auto',
							'margin-left' : 0,
							'margin-top' : 0,
							'margin-right' : 0
						});
					}
					onComplete();
				}
			});

			post_holder_element.morph({
				'height' : post_holder_element_height_after_expand + 'px'
			});
		} else {
			onComplete();
		}
	},
	resizeImages : function (scope, max_width) {
		var max_width = max_width || 500;

		scope.getElements('img[width][height]').each(function(element) {
			element.get('width') > max_width && element.setStyles({
				width: max_width,
				height: Math.round(element.get('height') * max_width / element.get('width'))
			});
		});
	},
	groupImages : function (body) {
		var images = body.getElements('img');
		var group_element = new Element('div', {
			'class': 'b-group_images',
			'data-count': 0
		});
		var index_offset = 0;
		if (images.length) {
			images.each(function(image, index) {
				var image_check = new Element('img');
				var image_src = image.get('src');
				var image_index = index + 1 - index_offset;
				image_check.onload = function() {
					
					
					var image_wrap_element = new Element('a', {
						class: 'b-group_image_wrap b-group_image_wrap_' + image_index,
						href: image_src
					});
					var image_element = new Element('div', {
						class: 'b-group_image',
						styles: {
							'background-image': 'url(' + image_src + ')'
						}
					});
					var image_empty_hor_element = new Element('div', {
						class: 'b-group_image_empty__hor'
					});
					var image_empty_vert_element = new Element('div', {
						class: 'b-group_image_empty__vert'
					});

					image.destroy();
					image_element.inject(image_wrap_element);
					image_empty_hor_element.inject(image_wrap_element);
					image_empty_vert_element.inject(image_wrap_element);
					image_wrap_element.inject(group_element);

					var count = group_element.get('data-count');
					group_element.removeClass('b-group_images_' + count);
					count++;
					group_element.set('data-count', count);
					group_element.addClass('b-group_images_' + count);
					futuPics.initExpandingPics(group_element);
				}
				image_check.onerror = function() {
					image.destroy();
					index_offset++;
					if (group_element.get('data-count') == 0 && index == images.length - 1) {
						group_element.addClass('b-group_images_0');
					}
				}
				image_check.src = image_src;
			});
			group_element.inject(body, 'before');
		}
	}
};

blogsSettingsHandler = {
	isOneLineRuleSupported: null,
	bgPosition: null,
	blog_colors_styles : {
		'left_column_divider_color' : {
			'borderBottomColor': [
				'html .l-content .b-aside_item',
				'html .b-domain_description'
			]
		},
		'sublepro_name_hover_bg_color': {
			'backgroundColor': [
				'html .l-content .b-subsite_header a:hover'
			]
		},
		'inputs_bg_color' : {
			'backgroundColor' : [
				'html .l-content .i-form_text_input',
				'html .l-content .i-form_textarea',
				'html .l-content .b-comments_reply_block .b-comments_add_textarea .i-form_text_input',
				'html .l-content select',
				'html .l-content .b-posts_threshold select',
				'html .l-content .b-search_form .b-fui_icon_button_search',
				'html .l-content .b-header_search .b-fui_icon_button_search',
				'html .react .b-input__input',
				'html .react .b-textarea__textarea',
				'html .b-quick_search_container',
				'html .b-quick_search_section_opened li.b-quick_search_section_header'
			]
		},
		'inputs_text_color' : {
			'color' : [
				'html .l-content .i-form_text_input',
				'html .l-content .i-form_textarea',
				'html .l-content select',
				'html .react .b-input__input',
				'html .react .b-textarea__textarea'
			]
		},
		'inputs_border_color' : {
			'borderColor' : [
				'html .l-content .i-form_text_input',
				'html .l-content .i-form_textarea',
				'html .l-content select',
				'html .react .b-input__input',
				'html .react .b-textarea__textarea',
				'html .b-quick_search_container',
				'html .b-quick_search_section li.b-quick_search_section_header',
				'html .b-quick_search_section_opened .b-quick_search_section_header_back'
			]
		},
		'inputs_border_top_color' : {
			'borderTopColor' : [
				'html .l-content .i-form_text_input',
				'html .l-content .i-form_textarea'
			]
		},
		'paginator_active_page_color': {
			'color': [
				'html .l-content .paginator span strong em'
			]
		},
		'paginator_active_page_bg_color': {
			'backgroundColor': [
				'html .paginator span strong em'
			]
		},
		'paginator_line_color': {
			'backgroundColor': [
				'html .paginator .scroll_trough'
			]
		},
		'paginator_active_line_color': {
			'backgroundColor': [
				'html .paginator .scroll_thumb',
				'html .paginator .current_page_mark'
			]
		},
		'paginator_total_pages_color': {
			'color': [
				'html .paginator_pages'
			]
		},
		'more_posts_background_color': {
			'backgroundColor': [
				'html .l-content .b-load_more_posts_button'
			]
		},
		'more_posts_background_hover_color': {
			'backgroundColor': [
				'html .l-content .b-load_more_posts_button:hover'
			]
		},
		'more_posts_text_color': {
			'color': [
				'html .l-content .b-load_more_posts_button',
				'html .l-content .b-load_more_posts_button:hover'
			]
		},
		'hide_box_border_color': {
			'borderColor': [
				'html .b-futu_controls ul'
			],
			'borderBottomColor': [
				'html .b-futu_controls_item span'
			]
		},
		'hide_box_border_shadow_color': {
			'borderTopColor': [
				'html .b-futu_controls_item span'
			]
		},
		'hide_box_background_color': {
			'backgroundColor': [
				'html .b-futu_controls ul'
			]
		},
		'hide_box_text_color': {
			'color': [
				'html .b-futu_controls .b-futu_controls_item a',
				'html .b-futu_controls_close'
			]
		},
		'new_comments_1_color': {
			'backgroundColor': [
				'html .l-content .highlight1 .new .c_i'
			]
		},
		'new_comments_2_color': {
			'backgroundColor': [
				'html .l-content .highlight2 .new .c_i'
			]
		},
		'new_comments_3_color': {
			'backgroundColor': [
				'html .l-content .highlight3 .new .c_i'
			]
		},
		'new_comments_4_color': {
			'borderColor': [
				'html .highlight4 .new .c_i:before'
			]
		},
		'text_color' : {
			'color' : [
				'html .l-content',
				'html .l-content .comments_add_block_bottom a.comments_add_block_bottom_link',
				'html .l-content .b-form_field .b-form_radio_label',
				'html .l-content .b-comments_reply_block_delete_file',
				'html .l-content .b-header_nav a.b-fui_icon_button u',
				'html .l-content .b-header_counters a u',
				'html .l-content .b-elections_candidate_info_program',
				'html .react .p-democracy',
				'html .b-aside_president p',
				'html .b-aside_imperial_blogs .b-stats'
			]
		},
		'sublepro_name_color' : {
			'color' : [
				'html .l-content .b-blog_nav_sort a.b-blog_nav_sort_link',
				'html .l-content .b-subsite_header a',
				'html .l-content .threshold_select_button'
			],
			'backgroundColor' : [
				'html .l-content .b-blog_nav_sort strong.b-blog_nav_sort_link',
				'html .l-content .b-elections_header'
			]
		},
		'links_color' : {
			'color' : [
				'html .l-content a',
				'html .l-content .post h3',
				'html .l-content .post h3 a',
				'html .l-content .b-post_edit_controls .b-post_edit_submit i',
				'html .l-content .post .post_body .b-cut_link',
				'html .l-content .b-elections_candidate_info_name',
				'html .l-content .b-elections_candidate_info a',
				'html .b-moderators_inbox span',
				'html .react .b-file-uploader',
				'html .react .b-action',
				'html .b-index_view_about',
				'html .b-quick_search a',
				'html .b-quick_search .b-quick_search_section_header_caption',
				'html .b-quick_search .b-quick_search_section_header_caption:visited'
			],
			'borderBottomColor': [
				'html .b-comments_controls_new_comment'
			],
			'borderColor': [
				'html .b-moderators_inbox'
			],
			'outlineColor' : [
				'html .l-content .i-form_text_input:focus',
				'html .l-content .i-form_textarea:focus'
			],
			'backgroundColor' : [
				'html .l-content .post .dt .b-popup_video_toggle.active',
				'html .l-content .c_body .b-popup_video_toggle.active'
			],
			'fill' : [
				'html .b-comments_controls .b-svg-icon svg *'
			]
		},
		'links_hover_color': {
			'color': [
				'html .l-content a:hover',
				'html .l-content .post .ddi a:hover',
				'html .c_footer .ddi a:hover',
				'html .b-moderators_inbox:hover span',
				'html .react .b-action:hover',
				'html .b-quick_search a:hover'
			],
			'borderBottomColor': [
				'html .b-comments_controls_new_comment:hover'
			],
			'borderColor': [
				'html .b-moderators_inbox:hover'
			],
			'backgroundColor' : [
				'html .l-content .post .dt .b-popup_video_toggle.active:hover',
				'html .l-content .c_body .b-popup_video_toggle.active:hover'
			],
			'fill' : [
				'html .c_footer .b-svg-icon:hover svg *'
			]
		},
		'links_visited_color' : {
			'color' : [
				'html .l-content .post .dt a:visited',
				'html .l-content .c_body a:visited',
				'html .b-quick_search a:visited'
			],
			'backgroundColor' : [
				'html .l-content .post .dt .b-popup_video_toggle.active:visited',
				'html .l-content .c_body .b-popup_video_toggle.active:visited'
			]
		},
		'links_system_color' : {
			'color' : [
				'html .b-aside_item a',
				//'html .b-aside_item',
				'html .b-comments_controls a.locked',
				'html .b-comments_controls a.active',
				'html .b-comments_controls a.focused',
				'html .b-post_tags .b-post_tag',
				'html .b-post_edit_controls a',
				'html .b-comments_controls_threshold_count',
				'html .b-post_tags a',
				'html .b-quick_search .b-quick_search_name',
				'html .b-quick_search .b-quick_search_karma'
			],
			'borderColor' : [
				'html .l-content a.c_show_user:hover'
			],
			'backgroundColor' : [
				'html .l-content .paginator a:hover em'
			]
		},
		'dd_color': {
			'color': [
				'html .c_footer .ddi',
				'html .c_footer .ddi a',
				'html .post .ddi',
				'html .post .ddi a'
			],
			'fill': [
				'html .b-mark_as_read_control .b-svg-icon svg *',
				'html .b-svg-icon.b-svg-icon__pinned svg *',
				'html .c_footer .b-svg-icon svg *'
			]
		},
		'irony_color' : {
			'color' : [
				'html .l-content .irony'
			]
		},
		'moderator_color' : {
			'color' : [
				'html .l-content .moderator'
			]
		},
		'h2_color': {
			'color': [
				'html .l-content_main h2'
			]
		},
		'gray_text_color': {
			'color': [
				'html .l-content .b-sys_text',
				'html .l-content .b-file_uploader_button',
				'html .l-content .b-file_uploader',
				'html .l-content .b-file_uploader a',
				'html .l-content .b-icon_button_add',
				'html .b-inner_col_panel',
				'html .b-owner_box',
				'html .b-blog_controls_bg_pic_position',
				'html .b-form_field_description',
				'html .b-controls_subtitle'
			]
		},
		'gray_bg_color': {
			'backgroundColor': [
				'html .b-comments_controls_threshold_count',
				'html .b-blog_controls_bg_pic_position',
				'html .b-inner_col_panel',
				'html .b-owner_box',
				'html .b-form_submit',
				'html .b-latvian_access_checkbox i'
			],
			'borderColor': [
				'html .b-menu__buttons .b-menu_list_link.b-menu_list_link_active',
				'html .b-vertical_line',
				'html .b-tabs_content_section',
				'html .l-content .b-comments_controls',
				'html .b-controls_column__frame .b-column_inner'
			]
		},
		'background_color' : {
			'backgroundColor' : [
				'html .l-content',
				'.b-slider_scale_icon:hover .b-index_view_about'
			],
			'color' : [
				'html .l-content .b-file_uploader_drag_hover',
				'html .l-content .b-blog_nav_sort strong.b-blog_nav_sort_link',
				'html .l-content .paginator span',
				'html .l-content .paginator a:hover em',
				'html .l-content a.b-calendar_day:hover',
				'html .l-content .b-elections_status',
				'html .l-content .b-elections_timer',
				'html .l-content .post .dt .b-popup_video_toggle.active',
				'html .l-content .c_body .b-popup_video_toggle.active',
				'html .b-aside_item.b-aside_elections a',
				'html .b-aside_item.b-aside_elections a:hover'
			],
			'borderRightColor' : [
				'html .l-content .b-i-elections_candidate_info_arrow'
			]
		},
		'tagline_border_color' : {
			'borderColor' : [
				'html .l-content .b-header_tagline',
				'html .l-content .b-blog_controls_pic',
				'html .l-content .b-i-blog_info',
				'html .l-content .b-blog_controls_toggle_adult_field',
				'html .l-content .b-footer_nav_section_user',
				'html .l-content .b-blog_controls_post_preview',
				'html .l-content .b-tags',
				'html .l-content .b-elections_candidate_info'
			],
			'borderRightColor' : [
				'html .l-content .b-header_tagline_arrow',
				'html .l-content .b-elections_candidate_info_arrow'
			],
			'borderLeftColor' : [
				'html .l-content .b-footer_nav_section_info',
				'html .l-content .b-blog_info_government'
			]
		},
		'tagline_text_color' : {
			'color' : [
				'html .l-content .b-i-header_tagline',
				'html .l-content .b-header_tagline_logout .b-fui_icon_button_logout i',
				'html .l-content .b-i-blog_info',
				'html .l-content .b-form_field .b-blog_controls_toggle_adult_field .b-form_radio_label',
				'html .l-content .b-footer_nav .b-footer_nav_section_user a',
				'html .l-content .b-blog_controls_toggle_adult_field .b-form_radio_label'
			]
		},
		'tagline_links_color' : {
			'color' : [
				'html .l-content .b-i-header_tagline a',
				'html .l-content .b-i-blog_info a',
				'html .l-content .b-footer_nav_section_user a span',
				'html .l-content .b-cloud a',
				'html .l-content .b-cloud a:visited'
			]
		},
		'information_bg_color' : {
			'backgroundColor' : [
				'html .l-content .b-i-blog_info',
				'html .l-content .b-blog_controls_toggle_adult_field',
				'html .l-content .b-i-header_tagline',
				'html .l-content .b-footer_nav_section_user',
				'html .l-content .b-tags'
			],
			'borderRightColor' : [
				'html .l-content .b-i-header_tagline_arrow'
			]
		},
		'rating_bg_color' : {
			'backgroundColor' : [
				'html .b-menu_link',
				'html .vote_button',
				'html .over a.vote_voted',
				'html .l-touch_capable .c_vote .vote_voted',
				'html .l-touch_capable .dd .vote_voted',
				'html .paginator .scroll_trough'
			]
		},
		'info_table_divider_color' : {
			'borderColor' : [
				'html .b_users_table-cell:first-child'
			]
		},
		'rating_shadow_color' : {
			'borderTopColor' : [
				'html .b-menu_link_text'
			]
		},
		'rating_plus_color' : {
			'color' : [
				'html .vote_button'
			]
		},
		'rating_plus_active_color' : {
			'color' : [
				'html .vote_button:hover',
				'html .over a.vote_voted',
				'html .b-votes_popup .over a.vote_voted',
				'html .l-touch_capable .c_vote .vote_voted',
				'html .l-touch_capable .dd .vote_voted',
				'html .b-menu_link'
			]
		},
		'comments_voting_bg_color': {
			'backgroundColor': [
				'html .mine .c_vote .vote_result',
				'html .c_vote:hover .vote_result'
			]
		},
		'comments_voting_color': {
			'color': [
				'html .vote_result'
			]
		},
		'info_bg_color' : {
			'backgroundColor' : [
				'html .b-form_submit',
				'html .b-post_render_types',
				'html .b-comments_header_new_selector em',
				'html .b-votes_popup',
				'html .b-header_nav_user_menu',
				'html a.threshold_select_option',
				'html .b-post_tags .tag',
				'html .b-calendar_controls',
				'html .b-archive_navigation',
				'html .b-calendar_month_header',
				'html a.b-calendar_day:hover',
				'html .b-notification',
				'html .b-popup_settings_form',
				'html .b-blog_controls_elections_settings',
				'html .b-elections_nomination',
				'html .b-elections_candidates',
				'html .b-domain_popup'
			],
			'borderColor' : [
				'html .b-calendar_controls',
				'html .b-archive_navigation',
				'html .b-calendar_month_header',
				'html .b-calendar_month_days'
			]
		},
		'info_arrows_bg_color': {
			'backgroundColor': [
				'html .b-arrow'
			]
		},
		'info_text_color' : {
			'color' : [
				'html .b_users_table-subtitle',
				'html .b-votes_popup',
				'html .b_users_table-list',
				'html a.threshold_select_option',
				'html .b-header_nav_user_menu a.b-fui_icon_button_logout i',
				'html .b-comments_header_new_selector em',
				'html .b-votes_popup .vote .vote_voted',
				'html .b-archive_navigation i',
				'html .b-calendar_month_header',
				'html .b-notification',
				'html .b-notification-title',
				'html .b-blog_controls_elections_settings',
				'html .b-blog_controls_elections_settings .threshold_select_button',
				'html .b-blog_controls_elections_settings .b-blog_controls_elections_settings_block_caption a',
				'html .b-elections_nomination',
				'html .b-elections_candidates',
				'html .b-elections_candidate_votes_counter',
				'html .b-domain_popup'
			]
		},
		'info_links_color' : {
			'color' : [
				'html .b-votes_popup a',
				'html .b-header_nav_user_menu a',
				'html a.threshold_select_option_selected',
				'html .b-header_nav_user_menu a.b-fui_icon_button_logout:hover i',
				'html .b-header_nav_user_menu a.b-fui_icon_button_logout:active i',
				'html .b-archive_navigation a',
				'html .b-notification a',
				'html .b-blog_controls_elections_settings a',
				'html .b-blog_controls_elections_settings input:checked + label',
				'html .b-elections a',
				'html .b-domain_popup a'
			]
		},
		'info_links_hover_color': {
			'color': [
				'html .b-votes_popup a:hover',
				'html .b-domain_popup a:hover'
			]
		},
		'tags_color': {
			'color': [
				'html .b-cloud a.s1',
				'html .b-cloud a.s2',
				'html .b-cloud a.s3',
				'html .b-cloud a.s4',
				'html .b-cloud a.s5',
				'html .b-cloud a.s6',
				'html .b-cloud a.s7',
				'html .b-cloud a.s8'
			]
		},
		'tags_hover_bg_color': {
			'backgroundColor': [
				'html .b-cloud a:hover'
			]
		}
	},
	initColors : function () {
		window.addEvent('domready', function() {
			var domain_colors = [];
			$A($(document.body).getElements('.b-blog_controls_color')).each(function (color_element) {
				domain_colors.push(color_element.id.substr(9));
			});
			window.myMooRainbows = [];
			window.currentMooColor = false;
			window.currentMooInput = false;
			var startColor = new Color('000000');
			var globalMooRainbow = new MooRainbow('js-default_moo_rainbow', {
				id: 'default_moo_rainbow',
				imgPath: '/static/i/moorainbow/',
				wheel: true,
				startColor : startColor.rgb,
				onChange: function(color) {
					var color_id = $(window.currentMooColor).id.substr(9);
					var color_hex = color.hex.substr(1);
					var color_rgb = color.rgb;
					blogsSettingsHandler.setColor(color_id, color_hex, color_rgb);
				},
				onComplete : function (color) {
					var color_id = $(window.currentMooColor).id.substr(9);
					var color_hex = color.hex.substr(1);
					blogsSettingsHandler.saveColor(color_id, color_hex);
				}
			});
			$A(domain_colors).each(function (domain_color) {
				$('js-color_' + domain_color).addEvent('click', function(e) {
					if (globalMooRainbow.visible) {
						var color_id = $(window.currentMooColor).id.substr(9);
						var color_hex = globalMooRainbow.hexInput.value.substr(1);
						blogsSettingsHandler.saveColor(color_id, color_hex);
					}
					e = new Event(e);
					e.stopPropagation();
					globalMooRainbow.toggle({
						color : $('js-color_' + domain_color).getElement('input').value,
						domain_color : domain_color
					});
				});
				//$('color_' + domain_color).set('styles', {'background-color' : '#' + $('input_' + domain_color).value});
			});
		});
	},
	setColor : function (color_id, color_hex, color_rgb, is_new_rule) {
		Colors[color_id] = '#' + color_hex;
		var color_hex_css = '#' + color_hex;

		if (this.isOneLineRuleSupported === null) {
			this.isOneLineRuleSupported = !(Browser.name == 'ie' && Browser.version < 9);
		}

		var color_attributes = blogsSettingsHandler.blog_colors_styles[color_id];
		if (color_attributes) {
			for (var attribute in color_attributes) {
				if (color_attributes.hasOwnProperty(attribute)) {
					var rules = color_attributes[attribute];
					if (this.isOneLineRuleSupported) {
						blogsSettingsHandler.setCSSProperty(rules.join(', '), attribute, color_hex_css, is_new_rule);
					} else {
						for (var i = 0; i < rules.length; i++) {
							var rule = rules[i];
							blogsSettingsHandler.setCSSProperty(rule, attribute, color_hex_css, is_new_rule);
						}
					}
				}
			}
		}

		var current_color_container = $('js-color_' + color_id);
		if (current_color_container) {
			if (current_color_container.hasClass('js-color_text')) {
				 current_color_container.set('styles', {'color' : color_hex_css});
			}
			current_color_container.getElement('.b-blog_controls_color_box').set('styles', {'background-color' : color_hex_css});
			current_color_container.getElement('input').value = color_hex_css;
		}
		var browser_gradient_styles = [
			'-moz-linear-gradient',
			'-webkit-linear-gradient',
			'-o-linear-gradient',
			'-ms-linear-gradient',
			'linear-gradient'
		];
		if (color_id == 'top_gradient_color') {
			for (var i = 0; i < browser_gradient_styles.length; i++) {
				/*blogsSettingsHandler.setCSSProperty('html .l-content', 'background', '{style}(top,  rgba({color_0}, {color_1}, {color_2}, 0.15) 0, rgba({color_0}, {color_1}, {color_2}, 0) 50px)'.substitute({
					style : browser_gradient_styles[i],
					color_0 : color_rgb[0],
					color_1 : color_rgb[1],
					color_2 : color_rgb[2]
				}), is_new_rule);*/
				blogsSettingsHandler.setCSSProperty('html .b-content_top_shadow', 'background', '{style}(top,  rgba({color_0}, {color_1}, {color_2}, 0.2) 0, rgba({color_0}, {color_1}, {color_2}, 0) 100%)'.substitute({
					style : browser_gradient_styles[i],
					color_0 : color_rgb[0],
					color_1 : color_rgb[1],
					color_2 : color_rgb[2]
				}), is_new_rule);
			}
		}

		if (color_id == 'rating_shadow_color') {
			blogsSettingsHandler.setCSSProperty('html .vote_button, html .over a.vote_voted, html .l-touch_capable .c_vote .vote_voted', 'boxShadow', 'inset 0px 3px 1px -2px {color}'.substitute({
				color : color_hex_css
			}), is_new_rule);
		}

		if (color_id == 'new_comments_bg_color') {
			blogsSettingsHandler.setCSSProperty('html .highlight4 .new .c_i', 'border', 'none', is_new_rule);
		}



	},
	setAllStyles : function () {
		for (var color_id in Colors) {
			if (Colors.hasOwnProperty(color_id)) {
				var color_hex = Colors[color_id];
				var color_rgb = new Color(color_hex);
				blogsSettingsHandler.setColor(color_id, color_hex.substr(1), color_rgb, true);
			}
		}
		// Подписываемся на событие изменения лейаута,
		// чтобы спозиционировать фон со смещением для устройств с маленьким разрешением
		utils.addListener(document, 'update_layout', this.setAdaptiveBodyBackground.bind(this));
	},
	saveColor : function (color_id, color_hex) {
		var data = color_id + '=' + color_hex;
		new futuAjax({
			button : $('js-color_' + color_id).getElement('.b-blog_controls_color_box'),
			attribute : 'borderColor',
			color_to : '#FFFFFF',
			color_from : '#000000',
			remove_element_color : false,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {

			}
		});
	},
	setCSSProperty : function (rule, attribute, value, is_new_rule) {
		if (is_new_rule) {
			try {
				utils.addCSSRule(rule, utils.camelToDash(attribute), value);
			} catch(err) {
			}
		} else {
			var cssRule = utils.getCSSRule(rule);
			if (cssRule.style && cssRule.style[attribute]) {
				cssRule.style[attribute] = value;
			} else {
				try {
					utils.addCSSRule(rule, utils.camelToDash(attribute), value);
				} catch(err) {
				}
			}
		}
	},
	resetColor : function (event, color_id, color_hex) {
		event.stopPropagation();
		var data = color_id + '=' + color_hex;
		var color_rgb = new Color(color_hex);
		new futuAjax({
			button : $('js-color_' + color_id).getElement('.b-blog_controls_color_box'),
			attribute : 'borderColor',
			color_to : '#FFFFFF',
			color_from : '#000000',
			remove_element_color : false,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				blogsSettingsHandler.setColor(color_id, color_hex, color_rgb);
			}
		});
	},
	resetPic : function (pic_id, pic_url) {
		var data = pic_id + '=';
		new futuAjax({
			button : $('js-file_uploader_button_' + pic_id),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			remove_element_color : false,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				blogsSettingsHandler.setPic(pic_id, pic_url);
			}
		});
	},
	setTransparentElement: function (el) {
		var elName = el.get('name'),
			data = elName + '=' + (el.checked ? 1 : 0);

		if (elName == 'remove_separator') {
			$$('.b-aside_item').setStyle('border-bottom-width', (el.checked ? '0' : '1px'));
		}
		new futuAjax({
			button : el,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {

			},
			onCustomErrorFunction: function (response) {
				el.set('checked', !el.get('checked'));
			}
		});
	},
	initUploaders: function () {
		var uploaderContainers = $$('.js-blog_controls_file');
		uploaderContainers.each(function (item) {
			blogsSettingsHandler.initFileUploader(item.get('data-name'));
		})
	},
	initFileUploader : function (pic_id) {
		if (!utils.isFileUploadSupported()) {
			$('js-file_uploader_' + pic_id).addClass('hidden');
			return;
		}
		var dragContainer = $('js-file_uploader_drag_' + pic_id);

		new futuFileUploader({
			container: 'js-file_uploader_' + pic_id,
			browseButton: 'js-file_uploader_button_' + pic_id,
			dropElement: 'js-file_uploader_drag_' + pic_id,
			dropElementNode: $('js-file_uploader_drag_' + pic_id),
			uploadProgress: function(up, file) {
				dragContainer.innerHTML = file.name + '&nbsp;(' + file.percent + '%)';
			}.bind(this),
			uploadComplete: function(up, file, response) {
				ajaxHandler.highlightField($('js-file_uploader_' + pic_id), Colors.background_color, Colors.links_color);
			}.bind(this),
			fileUploaded: function(up, file, response) {
				var response = JSON.decode(response.response);
				if (response.media_id) {
					var data = pic_id + '=' + response.media_id;
					new futuAjax({
						button : $('js-file_uploader_button_' + pic_id),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						remove_element_color : false,
						url : ajaxUrls.controls_edit,
						data : data,
						onLoadFunction : function (response) {
							if (response[pic_id]) {
								blogsSettingsHandler.setPic(pic_id, response[pic_id]);
							}
						}
					});
				} else {
					if (response.status == 'ERR') {
						for (var i = 0; i < response.errors.length; i++) {
							ajaxHandler.alertError(localMessages.getErrorMessageByError(response.errors[i]));
						}
						return false;
					}
				}
			}
		});
	},
	setPic : function (pic_id, pic_url) {
		var imageWrapper = $('js-file_pic_' + pic_id);
		if (imageWrapper) {
			if (pic_url) {
				imageWrapper.removeClass('hidden');
				if (imageWrapper.getElement('img')) {
					imageWrapper.getElement('img').src = pic_url;
				} else {
					imageWrapper.innerHTML = '<img src="' + pic_url + '">';
				}
			} else {
				imageWrapper.innerHTML = '';
				imageWrapper.addClass('hidden');
			}
		}

		if (pic_id == 'bg') {
			var bg_pic_position_y = $(document).getElement('input[name="bg_pic_position_y"]:checked').value;
			var bg_pic_repeat = $(document).getElement('input[name="bg_pic_repeat"]:checked');
			if (pic_url.length > 0) {
				blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundImage', 'url(' + pic_url + ')');
			} else {
				blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundImage', 'none');
			}
			if (bg_pic_repeat) {
				blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundRepeat', bg_pic_repeat.value);
			}
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundPosition', $(document).getElement('input[name="bg_pic_position_x"]:checked').value + ' ' + bg_pic_position_y);
		}

		if (pic_id == 'logo') {
			$('js-subsite_logo').style.backgroundImage = 'url(' + pic_url + ')';
		} else if (pic_id == 'president_pic') {
			$('js-aside_president').style.backgroundImage = 'url(' + pic_url + ')';
		} else if (pic_id == 'gertruda_bg_pic') {
			$('js-content_aside_subsite').style.backgroundImage = 'url(' + pic_url + ')';
		} else if (pic_id == 'empire_blogs_pic') {
			$('js-aside_imperial_blogs').style.backgroundImage = 'url(' + pic_url + ')';
		} else if (pic_id == 'info_pic') {
			$('js-subdomain_settings_button').style.backgroundImage = 'url(' + pic_url + ')';
		}
	},
	setBodyBackground : function (button) {
		var wrapper = $$('.l-content');
		var bg_pic_position_x = $(document).getElement('input[name="bg_pic_position_x"]:checked').value;
		var bg_pic_position_y = $(document).getElement('input[name="bg_pic_position_y"]:checked').value;

		var bg_pic_repeat = $(document).getElement('input[name="bg_pic_repeat"]:checked').value;

		if (button) {
			var data = 'bg_pic_position_x=' + bg_pic_position_x + '&bg_pic_position_y=' + bg_pic_position_y + '&bg_pic_repeat=' + bg_pic_repeat;
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				remove_element_color : false,
				url : ajaxUrls.controls_edit,
				data : data,
				onLoadFunction : function (response) {

				}
			});
		}
		if (bg_pic_position_y == 'center' && bg_pic_position_x == 'center') {
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundAttachement', 'fixed');
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundSize', 'cover');
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundPosition', '0 0');
		} else {
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundAttachement', 'scroll');
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundSize', 'auto');
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundRepeat', bg_pic_repeat);
			blogsSettingsHandler.setCSSProperty('html .l-content', 'backgroundPosition', bg_pic_position_x + ' ' + bg_pic_position_y);
		}
		if (utils.getBackgroundPosition(wrapper)) {
			blogsSettingsHandler.bgPosition = utils.getBackgroundPosition(wrapper).split(' ');
		}
		this.setAdaptiveBodyBackground();
	},
	// Смещение фона слева для маленьких разрешений на ширину скрытой левой колонки с гертрудой
	setAdaptiveBodyBackground:function() {
		var body = $(document.body),
			wrapper = $$('.l-content'),
			position;

		if (utils.getBackgroundPosition(wrapper)) {
			if (this.bgPosition === null) {
				this.bgPosition = utils.getBackgroundPosition(wrapper).split(' ');
			}
			if (body.hasClass('l-800') && parseInt(this.bgPosition[0], 10) === 0) {
				position = '-165px ' + this.bgPosition[1];
			} else {
				position = this.bgPosition[0] + ' ' + this.bgPosition[1];
			}
			this.setCSSProperty('html .l-content', 'backgroundPosition', position);
		}
	},
	gertrudasHandler : {
		initNewFileUploader : function (pic_id) {
			if (!utils.isFileUploadSupported()) {
				$('js-file_uploader_gertruda').addClass('hidden');
				return;
			}
			var dragContainer = $('js-file_uploader_drag_' + pic_id);

			new futuFileUploader({
				container: 'js-file_uploader_' + pic_id,
				browseButton: 'js-file_uploader_button_' + pic_id,
				dropElement: 'js-file_uploader_drag_' + pic_id,
				dropElementNode: dragContainer,
				uploadProgress: function(up, file) {
					dragContainer.innerHTML = file.name + '&nbsp;(' + file.percent + '%)';
				}.bind(this),
				uploadComplete: function(up, file, response) {
					ajaxHandler.highlightField($('js-file_uploader_' + pic_id), Colors.background_color, Colors.links_color);
				}.bind(this),
				fileUploaded: function(up, file, response) {
					var response = JSON.decode(response.response);
					if (response.media_id) {
						var data = 'type=1&media=' + response.media_id;
						new futuAjax({
							button : $('js-file_uploader_button_' + pic_id),
							attribute : 'opacity',
							color_to : 0.5,
							color_from : 1,
							remove_element_color : false,
							url : ajaxUrls.media_set_add,
							data : data,
							onLoadFunction : function (response) {
								var gerturda_img = $('js-gertruda');
								var new_gertruda_element = new Element('li', {
									'id' : 'js-gertruda_' + response.set_element.id,
									'html' : '<div class="b-gertruda_inner"><a href="#" title="Удалить гертруду" class="b-blog_controls_delete_gertruda b-icon_button_close" onclick="blogsSettingsHandler.gertrudasHandler.deleteGertruda(\'{gertruda_id}\'); return false;">&times;</a><img src="{gertruda_location}" alt=""></div>'.substitute({
										'gertruda_id' : response.set_element.id,
										'gertruda_location' : response.set_element.location
									})
								});
								new_gertruda_element.inject($('js-blog_controls_gertrudas'), 'top');

								if (gerturda_img.src == gerturda_img.get('data-default_src')) {
									gerturda_img.src = response.set_element.location;
								}
							}
						});
					} else {
						if (response.status == 'ERR') {
							for (var i = 0; i < response.errors.length; i++) {
								ajaxHandler.alertError(localMessages.getErrorMessageByError(response.errors[i]));
							}
							return false;
						}
					}
				}
			});
		},
		deleteGertruda : function (gertruda_id) {
			var data = 'id=' + gertruda_id;
			var gertruda_element = $('js-gertruda_' + gertruda_id);
			if (!gertruda_element.hasClass('gertruda_element')) {
				gertruda_element.addClass('in_progress');
				new futuAjax({
					button : gertruda_element,
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					remove_element_color : false,
					url : ajaxUrls.media_set_remove,
					data : data,
					onCompleteFunction: function (response) {
						var gerturda_img = $('js-gertruda');
						var gertruda_to_remove = gertruda_element.getElement('img');

						if (gertruda_to_remove.src == gerturda_img.src) {
							gerturda_img.src = gerturda_img.get('data-default_src');
						}

						gertruda_element.set('morph', {duration:222, onComplete : function () {
							gertruda_element.addClass('hidden');
							gertruda_element.destroy();
						}});
						gertruda_element.morph({'height':0, 'min-height':0, 'max-height':0, 'margin-bottom':0});
					}
				});
			}
		}
	},
	toggleAdult : function (checkbox) {
		var data = 'adult=';
		if (checkbox.checked) {
			data += '1';
		} else {
			data += '0';
		}
		new futuAjax({
			button : $(checkbox),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
			}
		});
	},
	saveTextControls : function () {
		var data = $('js-blog_settings_text_form').toQueryString();

		new futuAjax({
			button : $('js-blog_settings_text_form_submit'),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				document.title = (response.title.length > 0) ? response.title + ' — Настройки текста' : 'Лепрозорий / Убежище — Настройки текста';
				$(document).getElement('.b-subsite_header a').innerHTML = (response.name.length > 0) ? response.name : document.location.hostname;
				$(document).getElement('.b-domain_popup_description').innerHTML = (response.description.length > 0) ? response.description : '';
				$(document).getElement('.b-aside_president p').innerHTML = (response.domain_owner_title.length > 0) ? response.domain_owner_title : '';
				new futuAlert('Текстовые настройки сохранены.');
			}
		});
	},
	saveDiscriminationControls : function () {
		var form = $('js-blog_settings_discrimination_form'),
			inputs = form.getElements('input'),
			selects = form.getElements('select'),
			data = {};

		inputs.each(function (input) {
			if (input.type == 'text') {
				data[input.name] = input.value;
			} else if (input.type == 'radio') {
				if (input.get('checked')) {
					data[input.name] = input.value;
				}
			} else if (input.type == 'checkbox') {
				if (input.get('checked')) {
					data[input.name] = 'True';
				} else {
					data[input.name] = 'False';
				}
			}
		});
		selects.each(function (select) {
			data[select.name] = select.value;
		});
		data = Object.toQueryString(data);

		new futuAjax({
			button : $('js-blog_settings_discrimination_form_submit'),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_discrimination,
			data : data,
			onLoadFunction : function (response) {
				new futuAlert('Настройки дискриминации сохранены.');
			}
		});
	},
	saveSettingsControls: function () {
		var data = $('js-blog_settings_form').toQueryString();
		// TODO: отправка данных формы на сервер
		new futuAjax({
			button : $('js-blog_settings_form_submit'),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				new futuAlert('Настройки сохранены.');
			}
		});
	},
	toggleGreetings : function (event) {
		var greeting_checkbox = event.target;
		var data = 'domain_greetings=';
		if (greeting_checkbox.checked) {
			data += '1';
		} else {
			data += '0';
		}
		new futuAjax({
			button : greeting_checkbox,
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				if (response.domain_greetings == 1) {
					new futuAlert('Собственные приветствия включены.');
				} else {
					new futuAlert('Вы выключили режим собственных приветствий.');
				}
			}
		});
	},
	validateGreeting : function (greeting_element) {
		if (greeting_element.value.trim().length < 1) {
			ajaxHandler.highlightField(greeting_element);
			return false;
		}
		return true;
	},
	saveGreeting : function (e, greeting_element, greeting_id) {
		if (!e || (e && e.keyCode == 13)) {
			if (blogsSettingsHandler.validateGreeting(greeting_element)) {
				var url = ajaxUrls.greetings_add;
				var data = 'body=' + encodeURIComponent(greeting_element.value);
				if (greeting_id) {
					url = ajaxUrls.greetings_edit;
					data += '&id=' + greeting_id;
				}
				new futuAjax({
					button : greeting_element,
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					url : url,
					data : data,
					onLoadFunction : function (response) {
						greeting_element.value = '';
						if (greeting_id) {
							var greeting_list_element = $('js-greeting_' + greeting_id);
							greeting_list_element.getElement('.b-blog_controls_greeting_body').innerHTML = response.greeting.body;
							greeting_list_element.removeClass('b-blog_controls_edit_greeting');
						} else {
							var new_greeting_element = new Element('li', {
								html : '<a class="b-blog_controls_greeting_delete" onclick="var e = new Event(event); e.preventDefault(); blogsSettingsHandler.deleteGreeting(\'{greeting_id}\');" href="#" class="b-fui_icon_button b-fui_icon_button_delete"><span></span></a>\
								<input class="i-form_text_input" type="text" name="name" value="" onkeyup="var e = new Event(event); blogsSettingsHandler.saveGreeting(e, this, \'{greeting_id}\');">\
								<span class="b-blog_controls_greeting_body">{greting_body}</span>'.substitute({
									greeting_id : response.greeting.id,
									greting_body : response.greeting.body
								}),
								id : 'js-greeting_' + response.greeting.id,
								events : {
									'click' : function (e) {
										e = new Event(e);
										e.stopPropagation();
										blogsSettingsHandler.editGreeting(response.greeting.id);
									}
								}
							});
							new_greeting_element.inject($('js-blog_controls_greetings_list'), 'top');
						}
					}
				});
			}
		} else if (e && e.keyCode == 27) {
			if (greeting_id) {
				var greeting_list_element = $('js-greeting_' + greeting_id);
				greeting_list_element.removeClass('b-blog_controls_edit_greeting');
			}
		}
		if (greeting_element.value.trim().length > 0) {
			$$('.b-header_tagline')[0].innerHTML = greeting_element.value;
		} else {
			$$('.b-header_tagline')[0].innerHTML = '&nbsp;';
		}
	},
	saveAllActiveGreetings : function () {
		$(document.body).removeEvent('click', blogsSettingsHandler.saveAllActiveGreetings);
		var active_greeting_elements = $A($('js-blog_controls_greetings_list').getElements('.b-blog_controls_edit_greeting'));
		active_greeting_elements.each(function (active_greeting_element) {
			blogsSettingsHandler.saveGreeting(false, active_greeting_element.getElement('.i-form_text_input'), active_greeting_element.id.substr(12));
		});
	},
	editGreeting : function (greeting_id) {
		var greeting_list_element = $('js-greeting_' + greeting_id);
		if (!greeting_list_element.hasClass('b-blog_controls_edit_greeting')) {
			blogsSettingsHandler.saveAllActiveGreetings();

			var greeting_input_element = greeting_list_element.getElement('.i-form_text_input');
			var greeting_body = greeting_list_element.getElement('.b-blog_controls_greeting_body').innerHTML;

			greeting_input_element.value = greeting_body;
			greeting_list_element.addClass('b-blog_controls_edit_greeting');

			greeting_input_element.focus();
			greeting_input_element.select();

			$$('.b-header_tagline')[0].innerHTML = greeting_body;

			(function () {$(document.body).addEvent('click', blogsSettingsHandler.saveAllActiveGreetings);}).delay(200);
		}
	},
	deleteGreeting : function (greeting_id) {
		var greeting_list_element = $('js-greeting_' + greeting_id);
		var data = 'id=' + greeting_id;
		new futuAjax({
			button : greeting_list_element,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.greetings_delete,
			data : data,
			onCompleteFunction : function (response) {
				greeting_list_element.set('morph', {
					duration:222,
					onComplete : function () {
						greeting_list_element.destroy();
					}
				});
				greeting_list_element.morph({
					height : 0,
					marginBottom : 0,
					opacity: 0
				});
			}
		});
	},
	togglePlaceholders : function (event) {
		var placeholder_checkbox = event.target;
		var data = 'domain_post_placeholders=';
		if (placeholder_checkbox.checked) {
			data += '1';
		} else {
			data += '0';
		}
		new futuAjax({
			button : placeholder_checkbox,
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				if (response.domain_post_placeholders == 1) {
					new futuAlert('Собственные подсказки включены.');
				} else {
					new futuAlert('Вы выключили режим собственных подсказок.');
				}
			}
		});
	},
	validatePlaceholder : function (placeholder_element) {
		if (placeholder_element.value.trim().length < 1) {
			ajaxHandler.highlightField(placeholder_element);
			return false;
		}
		return true;
	},
	savePlaceholder : function (e, placeholder_element, placeholder_id) {
		if (!e || (e && e.keyCode == 13)) {
			if (blogsSettingsHandler.validatePlaceholder(placeholder_element)) {
				var url = ajaxUrls.placeholders_add;
				var data = 'body=' + encodeURIComponent(placeholder_element.value);
				if (placeholder_id) {
					url = ajaxUrls.placeholders_edit;
					data += '&id=' + placeholder_id;
				}
				new futuAjax({
					button : placeholder_element,
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					url : url,
					data : data,
					onLoadFunction : function (response) {
						placeholder_element.value = '';
						if (placeholder_id) {
							var placeholder_list_element = $('js-placeholder_' + placeholder_id);
							placeholder_list_element.getElement('.b-blog_controls_placeholder_body').innerHTML = response.post_placeholder.body;
							placeholder_list_element.removeClass('b-blog_controls_edit_placeholder');
						} else {
							var new_placeholder_element = new Element('li', {
								html : '<a class="b-blog_controls_placeholder_delete" onclick="var e = new Event(event); e.preventDefault(); blogsSettingsHandler.deletePlaceholder(\'{placeholder_id}\');" href="#" class="b-fui_icon_button b-fui_icon_button_delete"><span></span></a>\
								<input class="i-form_text_input" type="text" name="name" value="" onkeyup="var e = new Event(event); blogsSettingsHandler.savePlaceholder(e, this, \'{placeholder_id}\');">\
								<span class="b-blog_controls_placeholder_body">{placeholder_body}</span>'.substitute({
									placeholder_id : response.post_placeholder.id,
									placeholder_body : response.post_placeholder.body
								}),
								id : 'js-placeholder_' + response.post_placeholder.id,
								events : {
									'click' : function (e) {
										e = new Event(e);
										e.stopPropagation();
										blogsSettingsHandler.editPlaceholder(response.post_placeholder.id);
									}
								}
							});
							new_placeholder_element.inject($('js-blog_controls_placeholders_list'), 'top');
						}
					}
				});
			}
		} else if (e && e.keyCode == 27) {
			if (placeholder_id) {
				var placeholder_list_element = $('js-placeholder_' + placeholder_id);
				placeholder_list_element.removeClass('b-blog_controls_edit_placeholder');
			}
		}
	},
	saveAllActivePlaceholders : function () {
		$(document.body).removeEvent('click', blogsSettingsHandler.saveAllActivePlaceholders);
		var active_placeholder_elements = $A($('js-blog_controls_placeholders_list').getElements('.b-blog_controls_edit_placeholder'));
		active_placeholder_elements.each(function (active_placeholder_element) {
			blogsSettingsHandler.savePlaceholder(false, active_placeholder_element.getElement('.i-form_text_input'), active_placeholder_element.id.substr(15));
		});
	},
	editPlaceholder : function (placeholder_id) {
		var placeholder_list_element = $('js-placeholder_' + placeholder_id);
		if (!placeholder_list_element.hasClass('b-blog_controls_edit_placeholder')) {
			blogsSettingsHandler.saveAllActivePlaceholders();

			var placeholder_input_element = placeholder_list_element.getElement('.i-form_text_input');
			var placeholder_body = placeholder_list_element.getElement('.b-blog_controls_placeholder_body').innerHTML;

			placeholder_input_element.value = placeholder_body;
			placeholder_list_element.addClass('b-blog_controls_edit_placeholder');

			placeholder_input_element.focus();
			placeholder_input_element.select();

			(function () {$(document.body).addEvent('click', blogsSettingsHandler.saveAllActivePlaceholders);}).delay(200);
		}
	},
	deletePlaceholder : function (placeholder_id) {
		var placeholder_list_element = $('js-placeholder_' + placeholder_id);
		var data = 'id=' + placeholder_id;
		new futuAjax({
			button : placeholder_list_element,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.placeholders_delete,
			data : data,
			onCompleteFunction : function (response) {
				placeholder_list_element.set('morph', {
					duration:222,
					onComplete : function () {
						placeholder_list_element.destroy();
					}
				});
				placeholder_list_element.morph({
					height : 0,
					marginBottom : 0,
					opacity: 0
				});
			}
		});
	},
	validateAddUsersToList : function (user_list) {
		var user_list_element = $('js-blog_controls_' + user_list);
		var user_list_form_element = user_list_element.getElement('form');
		var user_list_call_element = user_list_form_element.getElement('input[name="call"]');
		if (user_list_call_element.value.trim().length == 0) {
			ajaxHandler.highlightField(user_list_call_element);
			return false;
		}
		return true;
	},
	addUsersToList : function (user_list) {
		var user_list_element = $('js-blog_controls_' + user_list);
		var user_list_form_element = user_list_element.getElement('form');
		var user_list_call_element = user_list_form_element.getElement('input[name="call"]');
		var reason = user_list_form_element.getElement('textarea[name="reason"]');
		var duration = user_list_form_element.getElement('input[name="duration"]');
		var container = user_list_element.getParent('.b-controls_column');
		var users;
		if (blogsSettingsHandler.validateAddUsersToList(user_list)) {
			var url = ajaxUrls.controls_acl;
			var data = user_list_form_element.toQueryString() + '&list=' + user_list;
			if (user_list == 'ban') {
				url = ajaxUrls.user_ban;
				data = 'users=' + user_list_call_element.value;
			} else if (user_list == 'read' || user_list == 'write') {
				url = ajaxUrls.controls_acl_add;
				data = 'list_name=' + user_list + '&users=' + user_list_call_element.value;
			} else if (user_list == 'editors') {
				url = ajaxUrls.controls_editors_add;
				data = 'users=' + user_list_call_element.value;
			}
			if (duration) {
				data += '&duration=' + duration.value;
			}
			if (reason) {
				data += '&reason=' + reason.value;
			}
			new futuAjax({
				button : user_list_form_element.getElement('.b-icon_button'),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : url,
				data : data,
				onLoadFunction : function (response) {
					switch(user_list) {
						case 'ban':
							blogsSettingsHandler.addUserItems(user_list_element, response.banned_users, user_list, response.bans);
							blogsSettingsHandler.updateUsersCounter(user_list_element, user_list);
							break;
						case 'read':
						case 'write':
						case 'editors':
							for (var i in response.access_settings) {
								if (response.access_settings.hasOwnProperty(i)) {
									if (['read', 'write', 'editors'].indexOf(i) > -1) {
										user_list_element = $('js-blog_controls_' + i);
										if (i == 'editors') {
											users = response.access_settings[i];
										} else {
											users = response.access_settings[i].members;
										}
										blogsSettingsHandler.addUserItems(user_list_element, users, i);
										blogsSettingsHandler.updateUsersCounter(user_list_element, i);
									}
								}
							}
							break;
					}
					user_list_call_element.value = '';
				}
			});
		}
	},
	addUserItems: function (user_list_element, users, user_list, bans) {
		var ul_element = user_list_element.getElement('ul');
		var parent = ul_element.getParent();
		var removeControl = parent.getElement('.b-remove_from_list');
		for (var i = 0; i < users.length; i++) {
			var user = users[i];
			if (!$('js-user_' + user_list + '_' + user.id)) {
				var description = '';

				if (user_list == 'ban' && bans) {
					if (bans[i].reason) {
						description += '<span class="b-sys_text">&mdash; ' + bans[i].reason + '</span> ';
					}
					if (bans[i].expires) {
						description += '<span class="b-form_field_description b-ban_duration">до <span data-epoch_date="' + bans[i].expires + '" class="js-date js-date-regular-date-time">' + bans[i].expires + '</span></span>';
					}
				}
				var user_element = new Element('li', {
					id : 'js-user_' + user_list + '_' + user.id,
					html : '<input type="checkbox" class="i-checkbox" value="{user_id}" data-login="{user_login}" autocomplete="off" /> <a href="http://{base_domain_url}/users/{user_login}" target="_blank">{user_login}</a>'.substitute({
						base_domain_url : document.base_domain_url,
						user_login : user.login,
						user_id : user.id,
						user_list : user_list
					}),
					'class': user.is_expelable === false ? 'b-user_not_expelable' : ''
				});
				user_element.inject(ul_element);
			} else {
				if (user.is_expelable === false) {
					$('js-user_' + user_list + '_' + user.id).addClass('b-user_not_expelable');
				} else {
					$('js-user_' + user_list + '_' + user.id).removeClass('b-user_not_expelable');
				}
			}
		}
		if (users.length > 0 && removeControl) {
			removeControl.removeClass('hidden');
		}
	},
	updateUsersCounter: function (user_list_element, user_list) {
		var items = user_list_element.getElements('li');
		var container = user_list_element.getParent('.b-controls_column');
		var counter = container.getElement('.b-subtitle_small');
		counter.innerHTML = '(' + items.length + ')';
		if ((user_list == 'editors' || user_list == 'ban') && items.length == 0) {
			counter.innerHTML = '(никого)';
		} else {
			counter.innerHTML = '(' + items.length + ')';
		}
		if (items.length == 0) {
			user_list_element.getElement('.b-remove_from_list').addClass('hidden');
		} else if (items.length > 0) {
			user_list_element.getElement('.b-remove_from_list').removeClass('hidden');
		}
	},
	expelUsersFromList : function (target, user_list) {
		var container = target.getParent('.b-controls_column'),
			listEl = container.getElement('ul'),
			checkboxes = listEl.getElements('.i-checkbox:checked'),
			ids = '',
			user_list_element,
			data,
			url,
			users;

		checkboxes.each(function (item) {
			if (ids.length > 0) {
				ids += ',';
			}
			if (user_list == 'ban') {
				ids += item.get('data-login');
			} else {
				ids += item.value;
			}
		});

		if (user_list == 'ban') {
			url = ajaxUrls.user_ban_delete;
			data = 'users=' + ids;
		} else if (user_list == 'read' || user_list == 'write') {
			url = ajaxUrls.controls_acl_remove;
			data = 'user_ids=' + ids + '&list_name=' + user_list;
		} else if (user_list == 'editors') {
			url = ajaxUrls.controls_editors_remove;
			data = 'user_ids=' + ids;
		}

		if (ids.length > 0) {
			new futuAjax({
				button : target,
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : url,
				data : data,
				onLoadFunction : function (response) {
					if (response.access_settings) {
						for (var i in response.access_settings) {
							if (response.access_settings.hasOwnProperty(i)) {
								if (i == 'editors') {
									users = response.access_settings[i];
								} else {
									users = response.access_settings[i].members;
								}
								user_list_element = $('js-blog_controls_' + i);
								blogsSettingsHandler.removeUserItems(users, i);
								blogsSettingsHandler.updateUsersCounter(user_list_element, i);
							}
						}
					} else {
						user_list_element = $('js-blog_controls_' + user_list);
						checkboxes.each(function (item) {
							item.getParent('li').destroy();
						});
						blogsSettingsHandler.updateUsersCounter(user_list_element, user_list);
					}
				}
			});
		}
	},
	removeUserItems: function (users, user_list) {
		var user_list_element = $('js-blog_controls_' + user_list),
			user_items = user_list_element.getElements('li'),
			user_item_id,
			remove_user;

		user_items.each(function (item) {
			remove_user = true;
			for (var i = 0, l = users.length; i < l; i++) {
				user_item_id = item.get('id').replace('js-user_' + user_list + '_', '');
				if (user_item_id == users[i].id) {
					remove_user = false;
					if (users[i].is_expelable === false) {
						item.addClass('b-user_not_expelable');
					} else {
						item.removeClass('b-user_not_expelable');
					}
				}
			}
			if (remove_user) {
				item.destroy();
			}
		});
	},
	updateAccessForms: function (access_settings) {
		var user_list_element;
		for (var i in access_settings) {
			if (access_settings.hasOwnProperty(i)) {
				if (['read', 'write'].indexOf(i) > -1) {
					user_list_element = $('js-blog_controls_' + i);
					blogsSettingsHandler.addUserItems(user_list_element, access_settings[i].members, i);
				}
			}
		}
	},
	setKarmaLimits: function() {
		var postLimit = $('js-post_karma_limits').value,
			commentLimit = $('js-comment_karma_limits').value,
			data = 'karma_for_post=' + postLimit + '&karma_for_comment=' + commentLimit;

		new futuAjax({
			button : $('js-karma_limits_form'),
			attribute : 'opacity',
			color_to : 1,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				new futuAlert('Ограничения сохранены.');
			}
		});
	},
	resetKarmaLimits: function (param, value) {
		var data = param + '=' + value;
		var field = $$('.i-form_text_input[name="' + param + '"]')[0];

		new futuAjax({
			button: field,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				field.value = value;
			}
		});
	},
	removeDomain: function(button) {
		if (!button.hasClass('inactive')) {
			var sendData = function (password) {
				var data = 'password=' + encodeURIComponent(password);

				new futuAjax({
					button: $('js-subdomain_remove'),
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					data: data,
					url : ajaxUrls.controls_delete,
					onLoadFunction : function (response) {
						new futuAlert('Подлепра удалена.');

						(function () {
							window.location.href = globals.domain.url;
						}).delay(5000);
					}
				});
			}
			var profile_password_confirm = futu_password_confirm('Подлепра удалится навсегда вместе со всеми постами, вы уверены? Если вы этого действительно хотите, введите, пожалуйста, пароль:', sendData);
		}
		else {
			new futuAlert('Нельзя удалить подлепру с более чем 50 подписчиками');
		}
	},
	// Передача домена
	handOverDomain: function() {
		var container = $('js-change_owner_form'),
			form = $('js-hand_over_domain_form'),
			loginInput = form.getElement('input[name="login"]'),
			login = loginInput.value.trim(),
			futureOwnerLink = container.getElement('.b-future_owner_name_login');

		var sendData = function (password) {
			var data = 'login=' + login;

			if (password) {
				data += '&password=' + encodeURIComponent(password);
			}

			if (login.length) {
				new futuAjax({
					button: $('js-subdomain_handover'),
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					url : ajaxUrls.controls_hand_over,
					data: data,
					onLoadFunction : function (response) {
						if (profile_password_confirm) {
							profile_password_confirm.close();
						}
						var msg = 'В инбокс пользователя <a href="' + globals.parent_site + '/users/' + login + '">' + login + '</a> ' + 'отправлена ссылка для принятия сайта. ';
						container.addClass('b-change_owner__in_process');
						futureOwnerLink.href = globals.parent_site + '/users/' + login;
						futureOwnerLink.innerHTML = login;
						loginInput.value = '';
						new futuAlert(msg);
					}
				});
			} else {
				ajaxHandler.highlightField(loginInput);
			}
		}
		var profile_password_confirm = futu_password_confirm('Ваша подлепра будет передана пользователю ' + login + '. Если вы этого действительно хотите, введите, пожалуйста, пароль:', sendData);
	},
	cancelDomainHandOver: function() {
		var container = $('js-change_owner_form'),
			button = container.getElement('.b-change_owner_cancel_button');

		this.showHiddenControls(container);

		new futuAjax({
			button: button,
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_cancel_hand_over,
			onLoadFunction : function (response) {
				container.removeClass('b-change_owner__in_process');
			}
		});
	},
	// Раскрытие/сворачивание форм управления подсайтом
	showHiddenControls: function(container) {
		var siblings = container.getSiblings();
		var changeOwnerContainer = container.getSiblings('.b-change_owner__in_process')[0];

		container.toggleClass('active', !container.hasClass('active'));

		// Если скрывается контейнер удаления подсайта,
		// а передача домена в процессе,
		// то нужно вернуть активное состояние контенеру передачи домена
		if (container == $('js-remove_domain_container') && !container.hasClass('active') && changeOwnerContainer) {
			changeOwnerContainer.addClass('active');
		} else {
			siblings.removeClass('active');
		}
	},
	elections : {
		toggleElections : function (checkbox) {
			var elections_settings_element = $('js-blog_controls_elections_settings');
			if (checkbox.checked) {
				elections_settings_element.addClass('b-blog_controls_elections_settings_holder_opened');
			} else {
				if (elections_settings_element.hasClass('js-elections_enabled')) {
					new futuDialogPopup({
						text: 'Сейчас отключатся выборы, точно?',
						type: 'confirm',
						callback: function() {
							elections_settings_element.removeClass('b-blog_controls_elections_settings_holder_opened');
							blogsSettingsHandler.elections.disableElections();
						},
						cancel : function () {
							checkbox.checked = true;
						}
					});
				} else {
					elections_settings_element.removeClass('b-blog_controls_elections_settings_holder_opened');
				}
			}
		},
		toggleElectionsSettingsBlock : function (list_name) {
			var element = $('js-blog_controls_elections_settings_' + list_name);
			element.toggleClass('b-blog_controls_elections_settings_block_holder_opened');
		},
		initForm : function () {
			blogsSettingsHandler.elections.setUsersListSummary('candidates');
			blogsSettingsHandler.elections.setUsersListSummary('electorate');
			$A($('js-blog_controls_elections_settings_form').getElements('input, select')).each(function (input) {
				input.addEvent('change', function () {
					blogsSettingsHandler.elections.setUsersListSummary('candidates');
					blogsSettingsHandler.elections.setUsersListSummary('electorate');
				});
				input.addEvent('click', function () {
					blogsSettingsHandler.elections.setUsersListSummary('candidates');
					blogsSettingsHandler.elections.setUsersListSummary('electorate');
				});
				input.addEvent('keyup', function () {
					blogsSettingsHandler.elections.setUsersListSummary('candidates');
					blogsSettingsHandler.elections.setUsersListSummary('electorate');
				});
			});
		},
		setUsersListSummary : function (list_name) {
			var summary_element = $('js-blog_controls_elections_settings_' + list_name + '_summary');
			var elections_settings = $('js-blog_controls_elections_settings_form').toQueryString().parseQueryString();

			var users_action = (list_name == 'electorate') ? 'В выборах участвуют' : 'Предложить свою кандидатуру в президенты <a href="{domain}">{domain_name}</a> могут'.substitute({
				'domain' : globals.domain.url,
				'domain_name' : globals.domain.url.substr(7)
			});

			var users_gender_code =  elections_settings[list_name + '_gender'];
			var users_gender = '';
			if (list_name == 'electorate') {
				users_gender = (users_gender_code == 'male') ?   'только мужчины' :
							   (users_gender_code == 'female') ? 'только женщины' :
																 'все пользователи';
			} else {
				users_gender = (users_gender_code == 'male') ?   'только мужчины' :
							   (users_gender_code == 'female') ? 'только женщины' :
																 'все пользователи';
			}

			var users_karma = '';
			var karma_limit = elections_settings[list_name + '_karma'];
			if (parseInt(karma_limit) || parseInt(karma_limit) === 0) {
				users_karma = (elections_settings[list_name + '_karma_limit'] == 'True') ? 'с кармой выше ' + parseInt(karma_limit) : '';
			} else {
				$('js-blog_controls_elections_settings_' + list_name + '_karma_limit').checked = false;
			}

			var experience_limit_days = elections_settings[list_name + '_experience'];
			var experience_limit = '';
			if (experience_limit_days == '7') {
				experience_limit = 'неделю';
			} else if (experience_limit_days == '30') {
				experience_limit = 'месяц';
			} else if (experience_limit_days == '365') {
				experience_limit = 'год';
			}
			var users_experience = elections_settings[list_name + '_experience_limit'] == 'True' ? 'зарегистрированные ранее, чем ' + experience_limit + ' назад' : '';

			var html_template = (list_name == 'electorate') ?
				'{users_action} {users_gender} <a href="{base_domain}">{base_domain_name}</a>{users_karma}{and}{users_experience}.' :
				'{users_action} {users_gender} <a href="{base_domain}">{base_domain_name}</a>{users_karma}{and}{users_experience}.' ;

			var html = html_template.substitute({
				'users_action' : users_action,
				'users_gender' : users_gender,
				'base_domain' : globals.base_domain.url,
				'base_domain_name' : globals.base_domain.url.substr(7),
				'users_karma' : (users_karma && users_experience) ? ',<br>' + users_karma : (users_karma) ? ' ' + users_karma : '',
				'and' : (users_karma && users_experience) ? ' и ' : '',
				'users_experience' : (users_karma && users_experience) ? users_experience : (users_experience) ? ', ' + users_experience : ''
			});

			summary_element.innerHTML = html;
		},
		saveElectionsSettings : function () {
			var elections_settings_element = $('js-blog_controls_elections_settings');
			var elections_settings_form_element = $('js-blog_controls_elections_settings_form');
			var data = elections_settings_form_element.toQueryString();

			new futuAjax({
				button : elections_settings_form_element.getElement('.b-button_start_elections'),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.elections_settings,
				data : data,
				onLoadFunction : function (response) {
					if (elections_settings_element.hasClass('js-elections_enabled')) {
						new futuAlert('Настройки выборов сохранены. Они будут применены к следующим выборам.');
					} else {
						new futuAlert('Вы включили выборы! И сейчас вас перенесёт на главную подсайта.');
						(function () {window.location.href = '/';}).delay(2000);
						elections_settings_element.addClass('js-elections_enabled');
					}
				}
			});

		},
		disableElections : function () {
			var elections_settings_form_element = $('js-blog_controls_elections_settings_form');
			var description = $('js-blog_controls_elections_description');
			new futuAjax({
				button : elections_settings_form_element.getElement('.b-button_start_elections'),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.elections_disable,
				data : '',
				onLoadFunction : function (response) {
					new futuAlert('Выборы отключены.');
					if ($('js-blog_controls_elections_settings')) {
						$('js-blog_controls_elections_settings').removeClass('js-elections_enabled');
					} else {
						(function () {window.location.href = '/';}).delay(1000);
					}
					if (description) {
						description.removeClass('b-form_field_description__enabled');
					}
				}
			});
		},
		cancelElections : function () {
			new futuDialogPopup({
				text: 'Сейчас отключатся выборы, и вы опять станете владельцем сайта, уверены?',
				type: 'confirm',
				callback: function() {
					blogsSettingsHandler.elections.disableElections();
				}
			});
		}
	},
	// Инициализация форм переключения настроек доступа к сайту
	domainAccessFormInit: function() {
		var items = $$('.js-toggle_form_item');

		items.each(function(item, i) {
			var inputs = item.getElements('.js-toggle_form_input'),
				activeInput = inputs.filter(':checked')[0];

			if (inputs.length > 0) {
				// Выделение одного из инпутов, если ни один не был выбран
				if (!activeInput) {
					inputs[0].set('checked', true);
					activeInput = inputs[0];
				}

				this.toggleDomainAccessForm(activeInput, item);
				this.toggleInputActiveState(activeInput, item);

				inputs.addEvent('change', function(event) {
					var input = event.target,
						data = 'list_name=' + input.get('name') + '&access_type=' + input.get('value'),
						container = input.getParent('.b-controls_column'),
						ulEl = container.getElement('ul'),
						items = ulEl.getElements('li'),
						counter = container.getElement('.b-subtitle_small');


					if (input.get('name') == 'read') {
						// При включении ограничения на чтение
						// автоматически должно произойти переключение ограничения на запись по списку
						// и задисейблить переключение на запись для всех
						if (input.get('value') == 'acl') {
							$('b-protected_writing').click();
							$('b-public_writing').set('disabled', true);
						} else if (input.get('value') == 'public') {
							$('b-public_writing').set('disabled', false);
						}
					}
					if (input.get('value') == 'public') {
						container.getElement('.b-subtitle_small').innerHTML = '(все)';
					} else {
						container.getElement('.b-subtitle_small').innerHTML = '(' + items.length + ')';
						if (items.length > 0) {
							counter.removeClass('hidden');
						}
					}

					new futuAjax({
						button: input,
						color_to: '0.5',
						color_from: '1',
						attribute: 'opacity',
						url: ajaxUrls.controls_access,
						data: data,
						onLoadFunction : function (response) {
							this.toggleDomainAccessForm(input, item);
							this.toggleInputActiveState(input, item);
							blogsSettingsHandler.updateAccessForms(response.access_settings);
						}.bind(this)
					});

				}.bind(this));
			}
		}.bind(this));
	},

	// Переключение активного класса у контейнера с инпутом, для его выделения
	toggleInputActiveState: function(input, item) {
		var inputsContainers = item.getElements('.b-form_radio_btn'),
			inputContainer = input.getParent('.b-form_radio_btn');

		inputsContainers.removeClass('active');
		inputContainer.addClass('active');
	},

	// Переключение форм настроек доступа к сайту
	toggleDomainAccessForm: function(input, item) {
		var contentElements = item.getElements('.js-form_toggle_content'),
			hiddenContent = contentElements.filter('[data-access=' + input.get('value') + ']');

		contentElements.addClass('hidden');
		hiddenContent.removeClass('hidden');
	},
	changeDurationLabel: function (input) {
		var daysQty = Math.abs(parseInt(input.value, 10)) || 0;
		var daysQtyLabel = $('js-duration_label');
		if (daysQty) {
			daysQtyLabel.innerHTML = utils.getPlural(daysQty, ['день', 'дня', 'дней']);
		} else {
			daysQtyLabel.innerHTML = '(дней)';
		}
	},
	// Раскрытие попапа с настройками и описанием подсайта
	showSettingsPopup: function (event, target) {
		event.stopPropagation();
		var popup = $('js-domain_popup');
		new futuPopup({
			target: target,
			popupEl: popup,
			closeBtn: popup.getElement('.b-close_btn')
		});
	},
	setLatvianAccess: function(checkbox) {
		var enabled_latvian = checkbox.checked ? 1 : 0;
		var data = 'enabled_latvian=' + (enabled_latvian ? 'enable' : 'disable');

		new futuAjax({
			button : checkbox.getParent('.b-latvian_access'),
			attribute : 'opacity',
			color_to : 0.5,
			color_from : 1,
			url : ajaxUrls.controls_edit,
			data : data,
			onLoadFunction : function (response) {
				if (enabled_latvian) {
					new futuAlert('Ваш подлепрозорий открыт для латышей, мудрое решение.');
				} else {
					new futuAlert('Ваш подлепрозорий закрыт от латышей, и вы справедливы, как никогда.');
				}
			}
		});
	}
};
var formControlsHandler = {
	discriminationFields: [
		{
			id: 'js-is_discrimination_enabled',
			children: ['js-karma_limits_is_enabled', 'js-sex_limits_is_enabled', 'js-money_limits_is_enabled', 'js-user_id_limits_is_enabled']
		},
		{
			id: 'js-karma_limits_is_enabled',
			children: ['js-karma_limits_mode_general', 'js-karma_limits_mode_custom']
		},
		{
			id: 'js-karma_limits_mode_general',
			siblings: ['js-karma_limits_mode_custom']
		},
		{
			id: 'js-karma_limits_mode_custom',
			children: ['js-karma_limits_access_limit_enabled', 'js-karma_limits_write_limit_enabled']
		},
		{
			id: 'js-karma_limits_access_limit_enabled',
			children: ['js-karma_limits_access_limit_op', 'js-karma_limits_access_limit_value']
		},
		{
			id: 'js-karma_limits_write_limit_enabled',
			children: ['js-karma_limits_write_limit_op', 'js-karma_limits_write_limit_value']
		},
		{
			id: 'js-sex_limits_is_enabled',
			children: ['js-sex_limits_gender_male', 'js-sex_limits_gender_female']
		},
		{
			id: 'js-money_limits_is_enabled',
			children: ['js-money_limits_op', 'js-money_limits_value']
		},
		{
			id: 'js-user_id_limits_is_enabled',
			children: ['js-user_id_limits_is_user_id_limit_enabled', 'js-user_id_limits_is_odd_even_limit_enabled']
		},
		{
			id: 'js-user_id_limits_is_user_id_limit_enabled',
			children: ['js-user_id_limits_user_id_limit_op', 'js-user_id_limits_user_id_limit_value']
		},
		{
			id: 'js-user_id_limits_is_odd_even_limit_enabled',
			children: ['js-user_id_limits_odd_even_limit_value']
		}
	],
	settingsFields: [
		{
			id: 'js-vote_weight_mode_explicit',
			children: ['js-vote_weight_value']
		},
		{
			id: 'js-vote_weight_mode_general',
			siblings: ['js-vote_weight_mode_explicit']
		}
	],
	init: function (fieldsName) {
		var inputs = formControlsHandler[fieldsName];
		$A(inputs).each(function (input) {
			$(input.id).addEvent('change', function () {
				this.updateInputState($(input.id), inputs);
			}.bind(this));
			this.updateInputState($(input.id), inputs);
		}.bind(this))
	},

	updateInputState: function (activeInput, inputs) {
		var childEl;
		$A(inputs).each(function (input) {
			var el = $(input.id);
			if (el.get('id') == activeInput.get('id')) {
				$A(input.children).each(function (child) {
					childEl = $(child);
					if (el.get('disabled')) {
						el.set('checked', false);
						childEl.set('checked', false);
					}
					if (el.get('checked')) {
						childEl.set('disabled', false);
					} else {
						childEl.set('checked', false);
						childEl.set('disabled', true);
					}
					this.updateInputState(childEl, inputs);
				}.bind(this));

				if (input.siblings) {
					$A(input.siblings).each(function (sibling) {
						this.updateInputState($(sibling), inputs);
					}.bind(this))
				}
			}
		}.bind(this))
	}
};

var adHandler = {
	init: function (params) {
		this.domainLogo = params.domainLogo || '';
		this.price = params.price || 0;
	},

	showPreview: function () {
		var form = $('js-ad_form'),
			data = form.toQueryString(),
			previewEl = $('js-ad_preview'),
			previewContainer = $('js-subs_ads_index'),
			wrapper = previewEl.getElement('.b-ad_preview_container'),
			textarea = $('js-subs_ads_preview_body'),
			itemParams;

		if (textarea && textarea.value.trim().length == 0) {
			ajaxHandler.highlightField(textarea);
			textarea.focus();
			return false;
		}

		new futuAjax({
			button: $('js-blog_settings_text_form_submit'),
			color_to: '0.5',
			color_from: '1',
			attribute: 'opacity',
			url: ajaxUrls.fraud_ad_preview,
			data: data,
			onLoadFunction : function (response) {
				previewContainer.empty();
				itemParams = {
					url: globals.domain.url.split('//')[1],
					body: response.body,
					logo: this.domainLogo
				};
				this.getAdItem(itemParams).inject(previewContainer);
				if (previewEl.hasClass('hidden')) {
					previewEl
						.setStyles({
							overflow: 'hidden',
							height: 0,
							opacity: 0
						})
						.removeClass('hidden');

					new Fx.Morph(previewEl, {
						duration: 222,
						onComplete: function () {
							new Fx.Morph(previewEl, {
								duration: 222,
								onComplete: function () {
									previewEl.erase('style');
								}
							}).start({
								opacity: 1
							});
						}
					}).start({
						height: wrapper.getCoordinates().height
					});
				}
			}.bind(this)
		});
	},
	getAdItem: function (params) {
		var controls = '',
			el;
		if (params.controls) {
			controls = '<div class="b-subs_ads_settings">\
							<div class="b-subs_ads_expires">до <span class="js-date js-date-regular-date" data-epoch_date="{ends_at}"></span></div>\
							<div class="b-subs_ads_delete"><a href="#" onclick="var e = new Event(event);adHandler.deleteAd(e); return false;">удалить</a></div>\
							<div class="b-subs_ads_prolong"><a href="#" onclick="var e = new Event(event);adHandler.prolong(e); return false;">продлить</a></div>\
						</div>'.substitute({
							ends_at: params.ends_at ? params.ends_at : ''
						});
		}

		el = new Element('div', {
			html: '<div class="b-subs_ads" id="{id}">\
					{controls}\
					<a style="background-image:url({logo});" href="//{url}" class="b-subs_ads_logo"></a>\
					<div class="b-subs_ads_text">\
						<h2 class="b-subs_ads_name"><a href="//{url}"><span class="b-subs_ad_body">{body}</span>&nbsp;&mdash; <span class="b-subs_ads_url">{url}</span></a></h2>\
					</div>\
					<div class="clear"></div>\
					</div>'.substitute({
						id: params.id ? params.id : '',
						controls: controls,
						url: params.url ? params.url : '',
						body: params.body ? params.body : '',
						logo: params.logo ? params.logo : ''
					})
		});
		return el;
	},

	buyAd: function () {
		var days = parseInt($('js-days_num').value, 10),
			form = $('js-ad_form');
		if (days) {
			Charley.ask({
				text: 'Вы действительно хотите купить рекламу на ' + adHandler.price * days + ' ЛВ?',
				yes: '- Да, пожалуйста!',
				no: 'Вы знаете, я передумал',
				password: true,
				onYes: function (password) {
					adHandler.sendBuyAd(password, form);
				}
			});
		}
	},

	sendBuyAd: function(password, form) {
		if (form) {
			var button = form.getElement('.b-form_submit_button'),
				data = form.toQueryString() + '&password=' + password,
				list = $('js-subs_ads_list');

			new futuAjax({
				button: button,
				color_to: '0.5',
				color_from: '1',
				attribute: 'opacity',
				url: ajaxUrls.fraud_ad,
				data: data,
				onCompleteFunction : function (response) {
					var adItem = $('js-subs_ads_' + response.domain_ad.id);
					Charley.close();
					// Объявление уже существует и его продлили — нужно удалить форму продления и обновить вид объявления
					if (adItem) {
						var prolongEl = adItem.getElement('.b-subs_ads_prolong'),
							dateEl = adItem.getElement('.js-date'),
							itemForm = adItem.getElement('form');

						prolongEl.getElement('a').removeClass('hidden');
						if(itemForm) {
							itemForm.destroy();
						}
						datesHandler.changeDate(dateEl, response.domain_ad.ends_at);
					} else {
						var itemParams = {
							id: 'js-subs_ads_' + response.domain_ad.id,
							url: globals.domain.url.split('//')[1],
							body: response.domain_ad.body,
							logo: this.domainLogo,
							controls: true,
							ends_at: response.domain_ad.ends_at
						};
						this.getAdItem(itemParams).inject(list, 'bottom');
					}
					this.closePreview();
					$('js-subs_ads_preview_body').value = '';

					datesHandler.setDates();
				}.bind(this)
			});
		}
	},
	closePreview: function () {
		var previewEl = $('js-ad_preview'),
			textarea = $('js-subs_ads_preview_body');

		textarea.focus();

		previewEl
			.setStyles({
				overflow: 'hidden'
			});

		new Fx.Morph(previewEl, {
			duration: 222,
			onComplete: function () {
				new Fx.Morph(previewEl, {
					duration: 222,
					onComplete: function () {
						previewEl.erase('style');
						previewEl.addClass('hidden');
					}
				}).start({
					height: 0
				});
			}
		}).start({
			opacity: 0
		});
	},

	prolong: function (event) {
		var el = event.target;
		var parent = el.getParent('.b-subs_ads'),
			adBody = parent.getElement('.b-subs_ad_body'),
			form = new Element('form', {
				'action': '',
				'html': '<input type="text" value="1" class="i-form_text_input b-subs_ads_prolong_time" name="days" /> дней \
						<input type="hidden" name="body" value="{body}" />\
						<input type="submit" class="b-form_submit_button hidden" />'.substitute({
							body: adBody.innerHTML.trim()
						})
			}),
			daysInput = form.getElement('.i-form_text_input');

		el.addClass('hidden');
		form.inject(el, 'after');
		daysInput.focus();
		form.addEvent('submit', function (event) {
			event.preventDefault();
			var days = parseInt(daysInput.value, 10);
			if (days) {
				Charley.ask({
					text: 'Вы действительно хотите продлить рекламу на ' + adHandler.price * days + ' ЛВ?',
					yes: '- Да, пожалуйста!',
					no: 'Вы знаете, я передумал',
					password: true,
					onYes: function (password) {
						adHandler.sendBuyAd(password, form);
					}
				});
			}
		});
	},

	deleteAd: function (event) {
		var el = event.target;
		new futuDialogPopup({
			text: 'Вы уверены, что хотите удалить объявление?',
			type: 'confirm',
			callback: function() {
				var item = el.getParent('.b-subs_ads'),
					bodyEl = item.getElement('.b-subs_ad_body'),
					data = 'body=' + encodeURIComponent(bodyEl.innerHTML.trim());

				new futuAjax({
					button: el,
					color_to: '0.5',
					color_from: '1',
					attribute: 'opacity',
					url: ajaxUrls.fraud_ad_delete,
					data: data,
					onCompleteFunction : function (response) {
						new Fx.Morph(item, {
							duration: 222,
							onComplete: function () {
								var initHeight = item.getCoordinates().height;
								item.setStyles({
									padding: 0,
									overflow: 'hidden',
									minHeight: 0,
									height: initHeight
								});
								new Fx.Morph(item, {
									duration: 222,
									onComplete: function () {
										item.destroy();
									}
								}).start({
									height: 0
								});
							}
						}).start({
							opacity: 0
						});
					}
				});
			}
		});


	}
};

customStyleHandler = {
	styles: null,
	selectedStyle: null,
	unsavedStyle: false,
	init: function() {
		new futuAjaxNew({
			button : new Element('a'),
			url : ajaxUrls.getCustomStyleUrl(),
			data: '',
			type: 'GET',
			headerContentType: 'application/json',
			onLoadFunction : function (response) {
				customStyleHandler.styles = response;

				var editor = $('js-custom_style_data'),
					selectElement = $('js-custom_style_list');

				if (customStyleHandler.styles.length) {
					customStyleHandler.styles.each(function(style) {
						var option = new Element('option', {
							text: style.name,
							value: style.id
						});

						if (style.active) {
							$('js-custom_style_mode').getElement('input[value="advanced"]').set('checked', true);
							$$('.b-tabs_content_wrapper[data-type="basic"]').addClass('hidden');
							$$('.b-tabs_content_wrapper[data-type="advanced"]').removeClass('hidden');

							option.set('selected', 'selected');
							editor.value = style.data;

							customStyleHandler.selectedStyle = style;

							$('js-custom_style_toggle').set({
								'text': 'Выключить',
								'data-active': 'true'
							});
						}

						option.inject(selectElement);
					});

					if (localStorage.getItem('custom_css_preview')) {
						$('js-custom_style_preview').getElement('input').set('checked', true);
					}

					if (!customStyleHandler.selectedStyle) {
						Array.each(selectElement.options, function(option) {
							if (option.selected) {
								customStyleHandler.selectedStyle = customStyleHandler.getStyleById(customStyleHandler.styles, option.value);
								$('js-custom_style_data').value = customStyleHandler.selectedStyle.data;
							}
						});
					}

					// Показываем скрытые элементы интерфейса, т.к. есть сохранённые стили
					$('js-custom_style_preview').removeClass('hidden');
					$('js-custom_style_save_as').removeClass('hidden');
					$('js-custom_style_data').removeClass('hidden');
					$('js-custom_style_list').removeClass('hidden');
					$('js-custom_style_save').removeClass('hidden');
					$('js-custom_style_toggle').removeClass('hidden');
					$('js-custom_style_remove').removeClass('hidden');
				}

				selectElement.addEvent('change', function(event) {
					if (customStyleHandler.unsavedStyle) {
						var selected_id;
						if (customStyleHandler.selectedStyle) {
							selected_value = customStyleHandler.selectedStyle.id;
						}
						else {
							selected_value = 'new';
						}

						if (!confirm('Всё потерять?')) {
							Array.each(this.options, function(option) {
								if (option.value == selected_value) {
									option.selected = true;
								} 
							});

							return false;
						}
					}

					// Если сохранённых стилей больше нет, скрываем всё, кроме кнопки «Новый стиль»
					if (!selectElement.options.length) {
						$('js-custom_style_preview').addClass('hidden');
						$('js-custom_style_save_as').addClass('hidden');
						$('js-custom_style_data').addClass('hidden');
						$('js-custom_style_list').addClass('hidden');
						$('js-custom_style_save').addClass('hidden');
						$('js-custom_style_toggle').addClass('hidden');
						$('js-custom_style_remove').addClass('hidden');
					}

					customStyleHandler.unsavedStyle = false;

					Array.each(this.options, function(option) {
						if (option.selected) {
							// Сохранён ли выбранный стиль?
							if (option.value != 'new') {
								customStyleHandler.selectedStyle = customStyleHandler.getStyleById(customStyleHandler.styles, option.value);
								editor.value = customStyleHandler.selectedStyle.data;

								if (customStyleHandler.selectedStyle.active) {
									$('js-custom_style_toggle').set({
										'text': 'Выключить',
										'data-active': 'true'
									});
								}
								else {
									$('js-custom_style_toggle').set({
										'text': 'Включить',
										'data-active': 'false'
									});
								}

								// Показываем кнопки удаления, сохранения включения/выключения
								$('js-custom_style_save').removeClass('hidden');
								$('js-custom_style_toggle').removeClass('hidden');
								$('js-custom_style_remove').removeClass('hidden');
							}
							else {
								$('js-custom_style_data').value = '';

								// Скрываем кнопки удаления, сохранения включения/выключения
								$('js-custom_style_save').addClass('hidden');
								$('js-custom_style_toggle').addClass('hidden');
								$('js-custom_style_remove').addClass('hidden');
							}
							
						}
					});
				});

				$('js-custom_style_data').addEvent('input', function() {
					if ((customStyleHandler.selectedStyle && this.value != customStyleHandler.selectedStyle.data) || this.value != '') {
						customStyleHandler.unsavedStyle = true;
					}
					else {
						customStyleHandler.unsavedStyle = false;
					}

					var preview_enabled = $('js-custom_style_preview').getElement('input').checked;
					
					if (preview_enabled) {
						localStorage.setItem('custom_css_preview', $('js-custom_style_data').value);
					}
				});

				window.onbeforeunload = function(e) {
				  localStorage.removeItem('custom_css_preview');
				};
			}
		});

	},
	addStyle: function() {
		var selectElement = $('js-custom_style_list');

		if (selectElement.options.length > 4) {
			new futuAlert('Можно создать только 5 стилей, не больше.');
			return false;
		}

		if (!selectElement.getElement('option[value="new"]')) {
			var new_style_option = new Element('option', {
				text: 'Новый стиль',
				value: 'new',
				selected: 'selected'
			});

			new_style_option.inject(selectElement);

			customStyleHandler.selectedStyle = null;

			$('js-custom_style_data').value = '';

			// Показываем поле ввода, галку превью, кнопку «Сохранить как» и список стилей
			$('js-custom_style_preview').removeClass('hidden');
			$('js-custom_style_save_as').removeClass('hidden');
			$('js-custom_style_data').removeClass('hidden');
			$('js-custom_style_list').removeClass('hidden');

			// Прячем кнопки сохранения, включения/выключения и удаления, т.к. выбранный стиль ещё не сохранён
			$('js-custom_style_save').addClass('hidden');
			$('js-custom_style_toggle').addClass('hidden');
			$('js-custom_style_remove').addClass('hidden');
		}
		else {
			selectElement.getElement('option[value="new"]').selected = true;
			selectElement.fireEvent('change');
		}
	},
	removeStyle: function(button) {
		if (!button.hasClass('js-style_ready_from_delete')) {
			button.addClass('js-style_ready_from_delete').set('text', 'Удалить?');
			new futuAlert('Нажмите повторно для подтверждения удаления.')
		}
		else {
			new futuAjaxNew({
				button : new Element('a'),
				url : ajaxUrls.getCustomStyleUrl(customStyleHandler.selectedStyle.id),
				data: '',
				type: 'DELETE',
				headerContentType: 'application/json',
				onLoadFunction : function (response) {
					var selectElement = $('js-custom_style_list');

					selectElement.getElement('option[value="' + customStyleHandler.selectedStyle.id + '"]').destroy();
					selectElement.fireEvent('change');
					button.removeClass('js-style_ready_from_delete').set('text', 'Удалить');
				}
			});
		}
	},
	toggleStyle: function() {
		var active = $('js-custom_style_toggle').get('data-active');
		var data = customStyleHandler.selectedStyle;

		data.active = (active == 'true') ? false : true;

		new futuAjaxNew({
			button : new Element('a'),
			url : ajaxUrls.getCustomStyleUrl(customStyleHandler.selectedStyle.id),
			data: JSON.encode(data),
			type: 'PATCH',
			headerContentType: 'application/json',
			onLoadFunction : function (response) {
				customStyleHandler.updateLocalStyles();
				customStyleHandler.selectedStyle = response;

				if (response.active == true) {
					$('js-custom_style_toggle').set({
						'text': 'Выключить',
						'data-active': 'true'
					});
				}
				else {
					$('js-custom_style_toggle').set({
						'text': 'Включить',
						'data-active': 'false'
					});
				}
			}
		});
	},
	saveStyle: function() {
		var data = customStyleHandler.selectedStyle;

		data.data = $('js-custom_style_data').value;

		new futuAjaxNew({
			button : new Element('a'),
			url : ajaxUrls.getCustomStyleUrl(customStyleHandler.selectedStyle.id),
			data: JSON.encode(data),
			type: 'PATCH',
			headerContentType: 'application/json',
			onLoadFunction : function (response) {
				localStorage.removeItem('custom_css_preview');
				$('js-custom_style_preview').getElement('input').checked = false;
				new futuAlert('Вы сохранили стиль ' + response.name);
			}
		});
	},
	saveStyleAs: function() {
		var data = {
			data: $('js-custom_style_data').value,
			name: prompt('Имя для нового стиля')
		}

		// TODO: Валидировать данные, иначе ничего не слать
		new futuAjaxNew({
			button : new Element('a'),
			url : ajaxUrls.getCustomStyleUrl(),
			data: JSON.encode(data),
			type: 'POST',
			headerContentType: 'application/json',
			onLoadFunction : function (response) {
				var selectElement = $('js-custom_style_list');

				selectElement.getElement('option[value="new"]') && selectElement.getElement('option[value="new"]').destroy();

				var option = new Element('option', {
					text: response.name,
					value: response.id,
					selected: true
				});

				customStyleHandler.styles.push(response);
				customStyleHandler.selectedStyle = response;
				customStyleHandler.unsavedStyle = false;
				
				option.inject(selectElement);
				selectElement.fireEvent('change');

				new futuAlert('Вы сохранили стиль ' + response.name);
			}
		});
	},
	togglePreview: function(button) {
		if (button.checked) {
			localStorage.setItem('custom_css_preview', $('js-custom_style_data').value.replace(/\n$/m, ''));
			window.open(globals.domain.url, '_blank');
		}
		else {
			localStorage.removeItem('custom_css_preview');
		}
	},
	toggleMode: function(button) {
		var tab = $$('.b-tabs_content_wrapper[data-type="' + button.value + '"]')[0];
		tab.pick('.b-tabs_content_wrapper');
	},
	getStyleById: function(styles, id) {
		var style;

		Array.each(styles, function(el) {
			if (el.id == id) {
				style = el;
			}
		});

		return style;
	},
	updateLocalStyles: function(updating_style) {
		new futuAjaxNew({
			button : new Element('a'),
			url : ajaxUrls.getCustomStyleUrl(),
			data: '',
			type: 'GET',
			headerContentType: 'application/json',
			onLoadFunction : function (response) {
				customStyleHandler.styles = response;
			}
		});
	}
}

commentControlsHandler = {
	showCommentEditForm : function (button, comment_id, futu_controls) {
		var comment_element = $(comment_id);
		
		if (!comment_element.getElement('.b-comment_edit')) {
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.getCommentUrl(comment_id),
				data : '',
				onCompleteFunction : function (response) {
					futu_controls.hide();
					
					var comment_body_element = comment_element.getElement('.c_body');
					
					var mod_window_element = new Element('div', {
						'html' : '',
						'class' : 'b-comment_edit',
						'styles' : {
							'overflow': 'hidden'
						}
					});
					mod_window_element.innerHTML = response.template;

					UserSuggestMenu.autoInitialize(mod_window_element);

					// replace all br tags with line breaks
					mod_window_element.getElement('textarea[name="body"]').value = mod_window_element.getElement('textarea[name="body"]').value.replace(/<br>/gi, '\n');

					mod_window_element.inject(comment_body_element, 'after');
					comment_body_element.addClass('hidden');

					var hiddenTextContainer = mod_window_element.getElement('.b-hidden_text_container');
					hiddenTextContainer.innerHTML = utils.escapeHtml(mod_window_element.getElement('textarea[name="body"]').value);

					var comment_body_height = Math.max(hiddenTextContainer.getCoordinates().height + 10, 94);

					mod_window_element.getElement('textarea[name="body"]').set('styles', {
						height : comment_body_height
					});

					mod_window_element.set('morph', {
						duration : 222,
						onComplete : function () {
							mod_window_element.style.height = 'auto';
							mod_window_element.getElement('.i-form_textarea').focus();
						}
					});
					var mod_window_height = mod_window_element.getElement('form').offsetHeight + 4;
					mod_window_element.morph({
						height : mod_window_height
					});

					new wysiwyg(mod_window_element.getElement('.b-textarea_editor'), mod_window_element.getElement('.i-form_textarea'), response.user_is_moderator, comment_element.getAttribute('data-owner_or_president'));

					mod_window_element.getElement('.i-form_textarea').addEvent('keydown', (function (e) {
						if ((e.meta || e.control) && e.code == 13) {
							var e = new Event(e);
							e.preventDefault();
							commentControlsHandler.saveComment(comment_id);
							animatePosts.scrollTo(comment_element);
						}
					}).bind(this));
					
					mod_window_element.getElement('.i-form_textarea').addEvent('focus', function () {
						keypress.stop_listening();
					});
					mod_window_element.getElement('.i-form_textarea').addEvent('blur', function () {
						keypress.listen();
					});
				}
			});
		} else {
			futu_controls.hide();
		}
	},
	removeCommentEditForm : function (comment_id) {
		var comment_element = $(comment_id);
		var comment_body_element = comment_element.getElement('.c_body');
		var form = $('js-mod_form_comment_' + comment_id);
		UserSuggestMenu.autoDestroy(form);
		comment_element.getElement('.b-comment_edit').destroy();
		comment_body_element.removeClass('hidden');
	},
	saveComment : function (comment_id) {
		var comment_element = $(comment_id);
		var comment_body_element = comment_element.getElement('.c_body');
		
		var data = $('js-mod_form_comment_' + comment_id).toQueryString();
		
		new futuAjax({
			button : comment_element.getElement('.b-post_edit_controls_button_submit'),
			color_to : Colors.links_color,
			color_from : Colors.background_color,
			url : ajaxUrls.comment_edit,
			data : data,
			onCompleteFunction : function (response) {
				comment_body_element.innerHTML = response.comment.body;
				commentsHandler.postProcess(comment_body_element.getParent());
				commentsHandler.setMaxImagesWidth(comment_body_element.getParent());
				commentControlsHandler.removeCommentEditForm(comment_id);
				futuMediaPlayer.initPopupMedia(comment_element);
				postControlsHandler.updateCodeTag(comment_element);
			}
		});
	},
	showPanel : function (params) {
		params = params||{};
		if (!params.button) {
			new futuAlert('commentControlsHandler требует кнопку.');
			return false;
		}
		params.options = params.options||[];

		params.class_name = params.class_name||'';
		params.close_button_class = params.close_button_class||'b-post_controls_close_active';
		params.onClose = params.onClose||(function () {});
		
		var moderateDeleteComment = function (button) {
			new futuDialogPopup({
				text: 'Комментарий удалится навсегда, точно?',
				type: 'confirm',
				callback: function() {
					var comment_element = $(params.comment_id);
					if (comment_element) {
						$(comment_element).addClass('js-comment_deleted');
					}
					new futuAjax({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.comment_delete,
						data : 'id=' + params.comment_id,
						onLoadFunction : function (response) {
							new futuAlert('Комментарий удалён.');
							if (comment_element) {
								if ($(comment_element).hasClass('js-comment_user_banned')) {
									futu_controls.hide();
									commentControlsHandler.removeComment(comment_element);
								} else {
									futu_controls.onClose = function () {
										commentControlsHandler.removeComment(comment_element);
									};
								}
							}
						}
					});
				}
			});
		};
		var moderateDeleteCommentsBranch = function (button) {
			new futuDialogPopup({
				text: 'Ветка комментариев удалится навсегда, точно?',
				type: 'confirm',
				callback: function() {
					var comment_element = $(params.comment_id);
					if (comment_element) {
						$(comment_element).addClass('js-comment_deleted');
					}
					new futuAjax({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.comment_delete,
						data : 'id=' + params.comment_id + '&cascade=1',
						onLoadFunction : function (response) {
							new futuAlert('Ветка удалена.');
							if (comment_element) {
								if ($(comment_element).hasClass('js-comment_user_banned')) {
									futu_controls.hide();
									commentControlsHandler.removeCommentsBranch(response.deleted_ids);
								} else {
									futu_controls.onClose = function () {
										commentControlsHandler.removeCommentsBranch(response.deleted_ids);
									};
								}
							}
						}
					});
				}
			});
		};
		var moderateBanUser = function (button) {
			var comment_element = $(params.comment_id),
				domain = params.domain ? '&domain=' + params.domain : '';
			if (comment_element) {
				$(comment_element).addClass('js-post_user_banned');
			}
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.user_ban,
				data : 'users=' + params.user_login + domain,
				onLoadFunction : function (response) {
					new futuAlert('Автор забанен.');
					if (comment_element) {
						if ($(comment_element).hasClass('js-comment_deleted')) {
							futu_controls.hide();
							commentControlsHandler.removeComment(comment_element);
						}
					}
				}
			});
		};
		var moderateBanAndDelete = function (button) {
			var genderPronoun = params.user_gender && params.user_gender == 'female' ? 'её' : 'его';

			new futuDialogPopup({
				text: 'Вы уверены, что хотите забанить ' + params.user_login + ' и удалить все ' + genderPronoun + ' посты и комментарии?',
				type: 'confirm',
				callback: function() {
					var comment_element = $(params.comment_id),
						domain = params.domain ? '&domain=' + params.domain : '';
					if (comment_element) {
						$(comment_element).addClass('js-post_user_banned');
					}
					new futuAjax({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.user_ban,
						data : 'users=' + params.user_login + '&delete_user_docs=true' + domain,
						onLoadFunction : function (response) {
							var message,
								comments;

							if (response.user_docs_deleted) {
								comments = $$('.comment[data-user_id=' + params.user_id + ']');
								message = 'Автор забанен, его посты и комментарии будут удалены через некоторое время.';
								futu_controls.hide();
								comments.each(function(comment, i) {
									if (comment.get('data-domain_id') == params.domain) {
										commentControlsHandler.removeComment(comment);
									}
								});
							} else {
								message = 'Автор забанен.';
							}
							new futuAlert(message);
						}
					});
				}
			});
		};
		var userIgnore = function (button) {
			new futuDialogPopup({
				text: 'Игнорируем пользователя ' + params.user_login + '?',
				type: 'confirm',
				callback: function() {
					new futuAjax({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.users_ignore,
						data : 'users=' + params.user_login,
						onLoadFunction : function (response) {
							var userLinks = $('js-comments').getElements('.c_user[data-user_id="' + params.user_id + '"]'),
								k = 0,
								comments = {}, // Список комментариев, которые нужно скрыть
								comment,
								currentLevel,
								level,
								siblingsComments;

							new futuAlert('Вы больше не увидите пользователя ' + params.user_login + '.');
							futu_controls.hide();

							for (var i = 0, l = userLinks.length; i < l; i++) {
								comment = userLinks[i].getParent('.comment');

								if (comment) {
									comments[comment.id] = comment; // Добавление в comments комментария, в котором было раскрыто меню игнорирования пользователя
									siblingsComments = comment.getAllNext('.comment');
									currentLevel = comment.className.match(/indent_(\d+)/);

									// Нахождение и добавление в comments всех вложенных комментариев —
									// следующие соседние элементы с уровнем больше текущего
									if (currentLevel[1]) {
										for (var j = 0, jl = siblingsComments.length; j < jl; j++) {
											level = siblingsComments[j].className.match(/indent_(\d+)/);

											if (level && typeof parseInt(level[1], 10) === 'number' && level[1] > currentLevel[1]) {
												comments[siblingsComments[j].id] = siblingsComments[j];
											} else {
												break;
											}
										}
									}
								}
							}

							for (i in comments) {
								if (comments.hasOwnProperty(i)) {
									commentControlsHandler.removeComment(comments[i]);
									k++;
								}
							}

							if (k > 0) {
								var ignoredDescriptionEl = $('js-comments').getElement('.b-comments_ignored_description'),
									currentCount,
									currentCountValue;

								if (ignoredDescriptionEl) {
									currentCount = ignoredDescriptionEl.getElement('.b-comments_ignored_description_count'),
									currentCountValue = currentCount ? parseInt(currentCount.innerHTML, 10) : 0;

									ignoredDescriptionEl.innerHTML = '(Обсуждение содержит <span class="b-comments_ignored_description_count">' + (k + currentCountValue) + '</span> ' + utils.getPlural(k + currentCountValue, ['скрытый комментарий', 'скрытых комментария', 'скрытых комментариев']) + ')';
								}
							}
						}
					});
				}
			});
		};
		commentEdit = function (button) {
			commentControlsHandler.showCommentEditForm(button, params.comment_id, futu_controls);
		};
		
		var possible_options = {
			'moderate_delete_comment' : {
				caption : 'удалить комментарий',
				onclick : moderateDeleteComment,
				ontouchend : moderateDeleteComment
			},
			'moderate_delete_comments_branch' : {
				caption : 'удалить ветку комментариев',
				onclick : moderateDeleteCommentsBranch,
				ontouchend : moderateDeleteCommentsBranch
			},
			'moderate_ban_user' : {
				caption : 'забанить ' + params.user_login,
				onclick : moderateBanUser,
				ontouchend : moderateBanUser
			},
			'moderate_ban_and_delete' : {
				caption : 'забанить ' + params.user_login + ' и удалить всё',
				onclick : moderateBanAndDelete,
				ontouchend : moderateBanAndDelete
			},
			'user_ignore' : {
				caption : 'игнорировать ' + params.user_login,
				onclick : userIgnore,
				ontouchend : userIgnore
			},
			'comment_edit' : {
				caption : 'редактировать',
				onclick : commentEdit,
				ontouchend : commentEdit
			}
		};
		var options = [];
		var default_options = [{
			caption : 'не показывать пост',
			onclick : function (button) {console.log(this, button, post_id);}
		},
		{
			caption : 'не показывать автора',
			onclick : function (button) {console.log(this, button, post_id);}
		},
		{
			caption : 'отписаться от сайта',
			onclick : function (button) {console.log(this, button, post_id);}
		}];

		if (params.options.length > 0) {
			for (var i = 0; i < params.options.length; i++) {
				var option = possible_options[params.options[i]];
				if (option) {
					options.push(option);
				}
				if (params.options[i] == 'moderate_ban_user' || params.options[i] == 'moderate_ban_and_delete' || params.options[i] == 'moderate_delete_comment') {
					if (params.class_name.indexOf('b-futu_controls_moderate') < 0) {
						params.class_name += ' b-futu_controls_moderate';
					}
					params.close_button_class = 'b-post_controls_moderate_active';
					params.close_button_text = '[я - у руля!]';
				}
			}
		} else {
			options = default_options;
		}
		
		var futu_controls = new futuControls({
			button : $$(params.button)[0],
			close_button_class : params.close_button_class,
			close_button_text : params.close_button_text,
			onClose : params.onClose,
			options : options,
			class_name : params.class_name
		});
	},
	deleteComment : function (button, comment_id) {
		new futuDialogPopup({
			text: 'Комментарий удалится навсегда, точно?',
			type: 'confirm',
			callback: function() {
				var comment_element = $(comment_id);
				new futuAjax({
					button : $(button),
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					url : ajaxUrls.comment_delete,
					data : 'id=' + comment_id,
					onCompleteFunction : function (response) {
						new futuAlert('Комментарий удалён.');
						commentControlsHandler.removeComment(comment_element);
					}
				});
			}
		});
	},
	removeComment : function (comment_element) {
		comment_element.set('morph', {duration:333, onComplete : function () {
			comment_element.destroy();
			commentsHandler.countComments();
		}});
		comment_element.style.overflow = 'hidden';
		comment_element.morph({'height':0, 'paddingBottom':0, 'paddingTop':0});
	},
	removeCommentsBranch : function (comments_ids) {
		for (var i = 0; i < comments_ids.length; i++) {
			var comment_element = $('' + comments_ids[i]);
			commentControlsHandler.removeComment(comment_element);
		}
	}
};
postControlsHandler = {
	showPanel : function (params) {
		params = params||{};
		if (!params.button) {
			new futuAlert('postControlsHandler требует кнопку.');
			return false;
		}
		params.options = params.options||[];

		params.class_name = params.class_name||'';
		params.close_button_class = params.close_button_class||'b-post_controls_close_active';
		params.onClose = params.onClose||(function () {});
		
		var favouritesDelete = function (button) {
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.favourites_out,
				data : 'post=' + params.post_id,
				onLoadFunction : function (response) {
					futu_controls.hide();
					var post = $('p' +  params.post_id);
					postControlsHandler.removePost(post);
				}
			});
		};
		var inboxDelete = function (button) {
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.inbox_delete,
				data : 'post=' + params.post_id,
				onLoadFunction : function (response) {
					futu_controls.hide();
					var post = $('p' +  params.post_id);
					postControlsHandler.removePost(post);
					moreHandler.setHeaderNavigationCounters('inbox', response.unread_count);
				}
			});
		};
		var myThingsDelete = function (button) {
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.interest_out,
				data : 'post=' + params.post_id,
				onLoadFunction : function (response) {
					futu_controls.hide();
					var post = $('p' +  params.post_id);
					postControlsHandler.removePost(post);
					moreHandler.setHeaderNavigationCounters('interest', response.unread_count);
				}
			});
		};
		var moderateDeleteInbox = function (button) {
			new futuDialogPopup({
				text: 'Инбокс взаправду удалится навсегда, точно?',
				type: 'confirm',
				callback: function() {
					var post = $('p' +  params.post_id);
					if (post) {
						$(post).addClass('js-post_deleted');
					}
					new futuAjax({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.post_delete,
						data : 'id=' + params.post_id,
						onCompleteFunction : function (response) {
							new futuAlert('Инбокс удалён.');
							if (post) {
								if ($(post).hasClass('js-post_user_banned')) {
									futu_controls.hide();
									postControlsHandler.removePost(post);
									postControlsHandler.redirectPage();
								} else {
									futu_controls.onClose = function () {
										postControlsHandler.removePost(post);
										postControlsHandler.redirectPage();
									};
								}
							}
						}
					});
				}
			});
		};
		var moderateDeletePost = function (button) {
			new futuDialogPopup({
				text: 'Пост взаправду удалится навсегда, точно?',
				type: 'confirm',
				callback: function() {
					var post = $('p' +  params.post_id);
					if (post) {
						$(post).addClass('js-post_deleted');
					}
					new futuAjaxNew({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.post_moderate(params.post_id),
						data : '',
						type: 'DELETE',
						headerContentType: 'application/json',
						onLoadFunction : function (response) {
							new futuAlert('Пост удалён.');
							if (post) {
								if ($(post).hasClass('js-post_user_banned')) {
									futu_controls.hide();
									postControlsHandler.removePost(post);
									postControlsHandler.redirectPage();
								} else {
									futu_controls.onClose = function () {
										postControlsHandler.removePost(post);
										postControlsHandler.redirectPage();
									};
								}
							}
						}
					});
				}
			});
		};
		var moderatePinPost = function (button) {
			var post = $('p' +  params.post_id);
			if (post.getElement('.b-post_pinned_icon')) {
				new futuDialogPopup({
					text: 'Возвращаем пост на своё место?',
					type: 'confirm',
					callback: function() {
						new futuAjaxNew({
							button : $(button),
							attribute : 'opacity',
							color_to : 0.5,
							color_from : 1,
							url : ajaxUrls.getPostPin(params.post_id),
							data : '',
							type : 'DELETE',
							onLoadFunction : function (response) {
								new futuAlert('ЭВМ вернула пост на своё место.');
								futu_controls.hide();
								$$('.post[data-domain_id="' + params.domain + '"] .b-post_pinned_icon').destroy();
							}
						});
					}
				});
			} else {
				new futuDialogPopup({
					text: 'Фиксируем пост на самом верху? Учтите, одновременно вы можете закрепить только один пост.',
					type: 'confirm',
					callback: function() {
						new futuAjaxNew({
							button : $(button),
							attribute : 'opacity',
							color_to : 0.5,
							color_from : 1,
							url : ajaxUrls.getPostPin(params.post_id),
							data : '',
							type : 'POST',
							onLoadFunction : function (response) {
								new futuAlert('Пост закреплён.');
								futu_controls.hide();
								$$('.post[data-domain_id="' + params.domain + '"] .b-post_pinned_icon').destroy();
								var post_footer = post.getElement('.ddi');
								post_footer.appendHTML('<a class="b-post_pinned_icon" title="закреплённый пост"><i class="b-svg-icon b-svg-icon__pinned" data-name="pinned"></i></a>', 'top');
								iconsHandler.update(post_footer.getElement('.b-post_pinned_icon'));
							}
						});
					}
				});
			}
		};
		var moderateBanUser = function (button) {
			var post = $('p' +  params.post_id),
				domain = params.domain ? '&domain=' + params.domain : '';
			if (post) {
				$(post).addClass('js-post_user_banned');
			}
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.user_ban,
				data : 'users=' + params.user_login + domain,
				onLoadFunction : function (response) {
					new futuAlert('Автор забанен.');
					if (post) {
						if ($(post).hasClass('js-post_deleted')) {
							futu_controls.hide();
							postControlsHandler.removePost(post);
						}
					}
				}
			});
		};
		var moderateBanAndDelete = function (button) {
			var genderPronoun = params.user_gender && params.user_gender == 'female' ? 'её' : 'его';
			new futuDialogPopup({
				text: 'Вы уверены, что хотите забанить ' + params.user_login + ' и удалить все ' + genderPronoun + ' посты и комментарии?',
				type: 'confirm',
				callback: function() {
					var post = $('p' +  params.post_id),
						domain = params.domain ? '&domain=' + params.domain : '';
					if (post) {
						$(post).addClass('js-post_user_banned');
					}

					new futuAjax({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.user_ban,
						data : 'users=' + params.user_login + '&delete_user_docs=true' + domain,
						onLoadFunction : function (response) {
							var message,
								posts,
								mainStr = '',
								closeControl = '';

							if (response.user_docs_deleted) {
								message = 'Автор забанен, его посты и комментарии будут удалены через некоторое время.';
								// Если открыта страница поста, показываем сообщение, что посты и комментарии будут удалены
								// и предлагаем перейти на главную подсайта
								if (window.location.href.indexOf('comments') !== -1) {
									if (globals.base_domain) {
										mainStr = ' подсайта';
									}
									message += ' А пока можете перейти на <a href="' + globals.domain.url + '">главную</a>' + mainStr +'.';
									closeControl = true;
								} else {
									posts = $$('.post[data-user_id=' + params.user_id + ']');
									posts.each(function(post, i) {
										if (post.get('data-domain_id') == params.domain) {
											postControlsHandler.removePost(post);
										}
									});
								}
								futu_controls.hide();
							} else {
								message = 'Автор забанен.';
							}
							new futuAlert(message, closeControl);
						}
					});
				}
			});
		};
		var userIgnore = function (button) {
			new futuDialogPopup({
				text: 'Игнорируем пользователя ' + params.user_login + '?',
				type: 'confirm',
				callback: function() {
					new futuAjax({
						button : $(button),
						attribute : 'opacity',
						color_to : 0.5,
						color_from : 1,
						url : ajaxUrls.users_ignore,
						data : 'users=' + params.user_login,
						onLoadFunction : function (response) {
							var userLinks = $('js-posts_holder').getElements('.c_user[data-user_id="' + params.user_id + '"]'),
								post;

							new futuAlert('Вы больше не увидите пользователя ' + params.user_login + '.');
							futu_controls.hide();

							for (var i = 0, l = userLinks.length; i < l; i++) {
								post = userLinks[i].getParent('.post');
								if (post) {
									postControlsHandler.removePost(post);
								}
							}
						}
					});
				}
			});
		};
		var domainIgnore = function (button) {
			var post = $('p' +  params.post_id);

			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.feeds_domains_ignore,
				data : 'domain=' + params.domain_id,
				onLoadFunction : function (response) {
					var domainLinks = $('js-posts_holder').getElements('.b-post_domain[data-domain_id="' + params.domain_id + '"]'),
						post;

					new futuAlert('Вы больше не увидите сайт ' + params.domain_url + '.');
					futu_controls.hide();

					for (var i = 0, l = domainLinks.length; i < l; i++) {
						post = domainLinks[i].getParent('.post');
						if (post) {
							postControlsHandler.removePost(post);
						}
					}
				}
			});
		};
		var postIgnore = function (button) {
			var post = $('p' +  params.post_id);

			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.feeds_post_ignore,
				data : 'post=' + params.post_id,
				onLoadFunction : function (response) {
					new futuAlert('Пост убран.');
					if (post) {
						futu_controls.hide();
						postControlsHandler.removePost(post);
						postControlsHandler.redirectPage();
					}
				}
			});
		};
		var domainUnsubscribe = function (button) {
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.feeds_domains_unsubscribe,
				data : 'domain=' + params.domain_id,
				onLoadFunction : function (response) {
					new futuAlert('Вы отписались от домена ' + params.domain_url + '.');
					futu_controls.hide();
				}
			});
		};
		var inboxEdit = function (button) {
			postControlsHandler.showInboxEditForm(button, params.post_id, futu_controls, params.post_has_acl);
		};
		var postEdit = function (button) {
			postControlsHandler.showPostEditForm(button, params.post_id, futu_controls, params.post_has_acl);
		};
		
		
		var possible_options = {
			'inbox_delete' : {
				caption : 'удалить инбокс',
				onclick : moderateDeleteInbox
			},
			'my_things_delete' : {
				caption : 'удалить из моих вещей',
				onclick : myThingsDelete
			},
			'moderate_delete_post' : {
				caption : 'удалить пост',
				onclick : moderateDeletePost
			},
			'moderate_pin_post' : {
				caption : 'закрепить пост',
				onclick : moderatePinPost
			},
			'moderate_unpin_post' : {
				caption : 'раскрепить пост',
				onclick : moderatePinPost
			},
			'moderate_ban_user' : {
				caption : 'забанить ' + params.user_login,
				onclick : moderateBanUser
			},
			'moderate_ban_and_delete' : {
				caption : 'забанить ' + params.user_login + ' и удалить всё',
				onclick : moderateBanAndDelete
			},
			'favourites_delete' : {
				caption : 'удалить из избранного',
				onclick : favouritesDelete
			},
			'domain_unsubscribe' : {
				caption : 'отписаться от ' + params.domain_url,
				onclick : domainUnsubscribe
			},
			'domain_ignore' : {
				caption : 'игнорировать ' + params.domain_url,
				onclick : domainIgnore
			},
			'user_ignore' : {
				caption : 'игнорировать ' + params.user_login,
				onclick : userIgnore
			},
			'post_ignore' : {
				caption : 'игнорировать пост',
				onclick : postIgnore
			},
			'inbox_edit' : {
				caption : 'редактировать',
				onclick : inboxEdit
			},
			'post_edit' : {
				caption : 'редактировать',
				onclick : postEdit
			}
		};
		
		var default_options = [{
			caption : 'не показывать пост',
			onclick : function (button) {console.log(this, button, post_id);}
		},
		{
			caption : 'не показывать автора',
			onclick : function (button) {console.log(this, button, post_id);}
		},
		{
			caption : 'отписаться от сайта',
			onclick : function (button) {console.log(this, button, post_id);}
		}];
		
		var options = [];
		if (params.options.length > 0) {
			for (var i = 0; i < params.options.length; i++) {
				var option = possible_options[params.options[i]];
				if (option) {
					if (params.options[i] == 'moderate_unpin_post' || params.options[i] == 'moderate_pin_post') {
						if (params.options[i] == 'moderate_unpin_post' && $('p' +  params.post_id).getElement('.b-post_pinned_icon')) {
							options.push(option);
						}
						if (params.options[i] == 'moderate_pin_post' && !$('p' +  params.post_id).getElement('.b-post_pinned_icon')) {
							options.push(option);
						}
					} else {
						options.push(option);
					}
				}
				if (params.options[i] == 'moderate_ban_user' || params.options[i] == 'moderate_ban_and_delete' || params.options[i] == 'moderate_delete_post') {
					if (params.class_name.indexOf('b-futu_controls_moderate') < 0) {
						params.class_name += ' b-futu_controls_moderate';
					}
					params.close_button_class = 'b-post_controls_moderate_active';
					params.close_button_text = '[я - у руля!]';
				}
			}
		} else {
			options = default_options;
		}
		
		var futu_controls = new futuControls({
			button : $$(params.button)[0],
			close_button_class : params.close_button_class,
			close_button_text : params.close_button_text,
			onClose : params.onClose,
			options : options,
			class_name : params.class_name
		});
	},
	deletePost : function (button, post_id, domain_url) {
		var postName = 'Пост',
			confirmMessage = postName + ' удалён.';
		if (domain_url && domain_url.indexOf('/my/inbox') !== -1) {
			postName = 'Письмо';
			confirmMessage = postName + ' удалено.';
		}
		new futuDialogPopup({
			text: postName + ' взаправду удалится навсегда, точно?',
			type: 'confirm',
			callback: function() {
				var post_element = $('p' +  post_id);
				new futuAjax({
					button : $(button),
					attribute : 'opacity',
					color_to : 0.5,
					color_from : 1,
					url : ajaxUrls.post_delete,
					data : 'id=' + post_id,
					onCompleteFunction : function (response) {
						new futuAlert(confirmMessage);

						postControlsHandler.removePost(post_element);
						postControlsHandler.redirectPage();
					}
				});
			}
		});
	},
	deleteInbox : function (button, post_id) {
		if ($(button).hasClass('js-inbox_ready_for_delete')) {
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.inbox_delete,
				data : 'post=' + post_id,
				onCompleteFunction : function (response) {
					closeAllFutuControls();
					var post = $('p' +  post_id);
					postControlsHandler.removePost(post);
					moreHandler.setHeaderNavigationCounters('inbox', response.unread_count);
				}
			});
		} else {
			$(button).addClass('js-inbox_ready_for_delete');
			$(button).innerHTML = 'точно удалить?';
		}
	},
	removePost : function (post) {
		post.set('morph', {duration:333, onComplete : function () {
			post.destroy();
		}});
		post.style.overflow = 'hidden';
		post.morph({'height':0, 'paddingBottom':0, 'paddingTop':0});
	},
	unignorePost: function (params) {
		params = params||{};
		var button = params.button ? params.button : null;
		if (button && params.post_id) {
			new futuAjax({
				button : button,
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.feeds_post_unignore,
				data : 'post=' + params.post_id,
				onLoadFunction : function (response) {
					var post = $('p' +  params.post_id);
					// Если открыта страница поста, переключаем контрол удаления/добавления в игнор
					if (window.location.href.indexOf('comments') !== -1) {
						var postControls = post.getElements('.b-post_controls');
						var unignoreControl = post.getElement('.b-ungignore_control');
						if (postControls) {
							postControls.removeClass('hidden');
						}
						if (unignoreControl) {
							unignoreControl.addClass('hidden');
						}
					} else {
						// Удаляем пост из списка заигноренных постов
						postControlsHandler.removePost(post);
					}
				}
			});
		}
	},
	redirectPage: function() {
		// Если находимся на странице самого поста делаем редирект
		// на главную страницу или на главную подсайта
		if (window.location.href.indexOf('comments') !== -1) {
			(function () {
				window.location.href = globals.domain.url;
			}).delay(500);
		}
	},
	showInboxEditForm : function (button, post_id, futu_controls) {
		var post = $('p' + post_id);
		if (!post.getElement('.b-post_edit_holder')) {
			new futuAjax({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.getPostUrl(post_id, true),
				data : '',
				onCompleteFunction : function (response) {
					futu_controls.hide();

					postsCutHandler.showPost(post, function () {
						var mod_window = new Element('div', {
							'class' : 'b-post_edit_holder',
							'style': 'visibility: hidden'
						});
						mod_window.innerHTML = response.template;

						UserSuggestMenu.autoInitialize(mod_window);

						var hiddenTextContainer = mod_window.getElement('.b-hidden_text_container');

						// replace all br tags with line breaks
						mod_window.getElement('textarea[name="body"]').value = mod_window.getElement('textarea[name="body"]').value.replace(/<br>/gi, '\n');

						mod_window.inject(post.getElement('.dt'), 'after');

						new wysiwyg(mod_window.getElement('.b-textarea_editor'), mod_window.getElement('.i-mod_form_body'), true, true);

						hiddenTextContainer.innerHTML = utils.escapeHtml(mod_window.getElement('textarea[name="body"]').value);

						var post_body_height = Math.max(hiddenTextContainer.getCoordinates().height + 10, 94);

						mod_window.getElement('textarea[name="body"]').set('styles', {
							height : post_body_height
						});

						var mod_window_height = mod_window.getElement('.b-post_edit').offsetHeight;

						post.getElement('.dt').addClass('hidden');

						mod_window.set('morph', {
							duration : 222,
							onComplete : function () {
								mod_window.style.height = 'auto';
								mod_window.getElement('.i-mod_form_body').focus();
							}
						});

						mod_window.setStyles({
							visibility: 'visible',
							height: post_body_height
						});
						mod_window.morph({
							height: mod_window_height
						});

						mod_window.getElement('textarea[name="body"]').addEvent('keydown', (function (e) {
							if ((e.meta || e.control) && e.code == 13) {
								var e = new Event(e);
								e.preventDefault();
								postControlsHandler.saveInbox(post_id);
							}
						}));
						
						mod_window.getElement('textarea[name="body"]').addEvent('focus', function () {
							keypress.stop_listening();
						});
						mod_window.getElement('textarea[name="body"]').addEvent('blur', function () {
							keypress.listen();
						});
						
					});
				}
			});
		} else {
			futu_controls.hide();
		}
	},
	showPostEditForm : function (button, post_id, futu_controls) {
		var post = $('p' + post_id);
		if (!post.getElement('.b-post_edit_holder')) {
			new futuAjaxNew({
				button : $(button),
				attribute : 'opacity',
				color_to : 0.5,
				color_from : 1,
				url : ajaxUrls.getPostUrl(post_id),
				type : 'GET',
				data : '',
				headerContentType: 'application/json',
				onCompleteFunction : function (response) {
					futu_controls.hide();

					postsCutHandler.showPost(post, function () {
						
						env.render('post_edit.html', response, function(err, mod_window_html) {
							var mod_window = new Element('div', {
								'class' : 'b-post_edit_holder',
								'style': 'visibility: hidden'
							});

							mod_window.innerHTML = mod_window_html;

							UserSuggestMenu.autoInitialize(mod_window);

							var hiddenTextContainer = mod_window.getElement('.b-hidden_text_container');

							// replace all br tags with line breaks
							mod_window.getElement('textarea[name="body"]').value = mod_window.getElement('textarea[name="body"]').value.replace(/<br>/gi, '\n');

							mod_window.inject(post.getElement('.dt'), 'after');

							new wysiwyg(mod_window.getElement('.b-textarea_editor'), mod_window.getElement('.i-mod_form_body'), true, post.getAttribute('data-owner_or_president'));

							hiddenTextContainer.innerHTML = utils.escapeHtml(mod_window.getElement('textarea[name="body"]').value);

							var post_body_height = Math.max(hiddenTextContainer.getCoordinates().height + 10, 94);

							mod_window.getElement('textarea[name="body"]').set('styles', {
								height : post_body_height
							});

							var mod_window_height = mod_window.getElement('.b-post_edit').offsetHeight;

							post.getElement('.dt').addClass('hidden');

							mod_window.set('morph', {
								duration : 222,
								onComplete : function () {
									mod_window.style.height = 'auto';
									mod_window.getElement('.i-mod_form_body').focus();
								}
							});

							mod_window.setStyles({
								visibility: 'visible',
								height: post_body_height
							});
							mod_window.morph({
								height: mod_window_height
							});

							mod_window.getElement('textarea[name="body"]').addEvent('keydown', (function (e) {
								if ((e.meta || e.control) && e.code == 13) {
									var e = new Event(e);
									e.preventDefault();
									postControlsHandler.savePost(post_id);
								}
							}));
							
							mod_window.getElement('textarea[name="body"]').addEvent('focus', function () {
								keypress.stop_listening();
							});
							mod_window.getElement('textarea[name="body"]').addEvent('blur', function () {
								keypress.listen();
							});
						});
						
					});
				}
			});
		} else {
			futu_controls.hide();
		}
	},
	removePostEditForm : function (post_id) {
		var post = $('p' + post_id);
		var form = $('js-mod_form_' + post_id);
		post.getElement('.dt').removeClass('hidden');
		UserSuggestMenu.autoDestroy(form);
		form.getParent('.b-post_edit_holder').destroy();
	},
	validatePost : function (post_id) {
		var form = $('js-mod_form_' + post_id);
		if (form.getElement('.i-mod_form_body').value.trim().length < 1) {
			new futuAlert('Укажите, пожалуйста, текст.');
			return false;
		}
		return true;
	},
	saveInbox : function (post_id) {
		if (postControlsHandler.validatePost(post_id)) {
			var data = $('js-mod_form_' + post_id).toQueryString();
			new futuAjax({
				button : $('js-mod_form_' + post_id).getElement('.b-post_edit_controls_button_submit'),
				color_to : Colors.links_color,
				color_from : Colors.background_color,
				url : ajaxUrls.inbox_edit,
				data : data,
				onCompleteFunction : function (response) {
					var post = $('p' + post_id);
					postControlsHandler.removePostEditForm(post_id);
					if (response.template) {
						post.getElement('.dt').innerHTML = response.template;
					}
					postsCutHandler.resizeImages(post.getElement('.p_body'));
					// animatePosts.scrollTo(post);
					futuMediaPlayer.initPopupMedia(post.getElement('.dti'));
				}
			});
		}
	},
	savePost : function (post_id) {
		if (postControlsHandler.validatePost(post_id)) {
			var data = {};
			data.body = $('js-mod_form_' + post_id).getElement('textarea[name="body"]').value;

			new futuAjaxNew({
				button : $('js-mod_form_' + post_id).getElement('.b-post_edit_controls_button_submit'),
				color_to : Colors.links_color,
				color_from : Colors.background_color,
				url : ajaxUrls.post_moderate(post_id),
				data : JSON.encode(data),
				type : 'PATCH',
				headerContentType: 'application/json',
				headerAccept: 'application/json+html',
				onCompleteFunction : function (response) {
					var post = $('p' + post_id);
					postControlsHandler.removePostEditForm(post_id);
					if (response.template) {
						post.getElement('.dt').innerHTML = response.template;
					}
					postsCutHandler.resizeImages(post.getElement('.p_body'));
					animatePosts.scrollTo(post);
					futuMediaPlayer.initPopupMedia(post.getElement('.dti'));
					postControlsHandler.updateCodeTag(post);
				}
			});
		}
	},
	updateCodeTag : function (container) {
		container = container || document.body;
		container.getElements('code').each(function (code_block) {
			if (!code_block.hasClass('hljs')) {
				code_block.setAttribute('data-id', Math.random());
				code_block.addClass('hljs');
				window.highlight_worker.postMessage({
					html: code_block.innerText.replace(/−/g, '-'), // математический минус из-за того, что парсер заменяет -- и - на тире
					id: code_block.getAttribute('data-id')
				});
			}
		});
	}
};
notificationHandler = {
	closeContainer: function(container, params) {
		var params = params || {};
		if (container) {
			container.setStyle('overflow', 'hidden');
			var animation = new Fx.Morph(container, {
				duration: 222,
				onComplete: function () {
					if (params.destroy) {
						container.destroy();
					} else {
						container.addClass('hidden');
						container.setStyles({
							height: 'auto'
						});
					}
				}.bind(this)
			}).start({
				opacity: 0,
				height: params.collapse ? 0 : 'auto'
			});
		}
	},
	showContainer: function(container, callback) {
		if (container) {
			if (container.hasClass('hidden')) {
				if (typeof callback == 'function') {
					callback.call(this);
				}
				container.removeClass('hidden');
				container.setStyles({
					opacity: 0,
					height: 'auto'
				});
				new Fx.Morph(container, {
					duration: 222
				}).start({
					opacity: 1
				});
			} else {
				this.closeContainer(container);
			}
		}
	},
	showEmailForm: function() {
		var container = $('js-email_form'),
			form = container.getElement('form'),
			input = form.getElement('.i-form_text_input'),
			currentEmailEl = $('js-current_email');

		input.value = currentEmailEl.innerHTML.trim();

		if (!this.initEmailSubmitEvent) {
			form.addEvent('submit', function(event) {
				event.preventDefault();
				this.initEmailSubmitEvent = true;
				new FuturicoHttpRequest({
					beforeSend: function () {
						form.getElement('.b-submit_button').addClass('vibrate-opacity');
					},
					complete: function () {
						form.getElement('.b-submit_button').removeClass('vibrate-opacity');
					},
					url: router.generate('activation_change_email'),
					method: 'POST',
					data: form.toQueryString(),
					processData: false,
					success: function (response) {
						new futuAlert(_('Письмо отправлено.'));
						currentEmailEl.innerHTML = input.value.trim();
						this.closeContainer(container);
					}.bind(this)
				});
			}.bind(this));
		}
	},
	initUserInfoForm: function() {
		var form = $('js-user_info_form');
		form.addEvent('submit', this.submitUserSettings.bind(this));
	},
	submitUserSettings: function(event) {
		event.preventDefault();

		var form = $('js-user_info_form'),
			birthDay = $('js-register_day').value.trim(),
			birthMonth = $('js-register_month').value.trim(),
			birthYear = $('js-register_year').value.trim();

		var url = router.generate('profile_details');
		var data = form.toQueryString();

		if (birthYear) {
			var date_object = new Date(birthMonth + '/' + birthDay + '/' + birthYear);
			if (date_object) {
				data += '&birthday=' + date_object.format('yyyy-mm-dd');
			}
		}

		var $button = jQuery(form.getElement('.b-submit_button'));
		new FuturicoHttpRequest({
			beforeSend: function () {
				$button.pulsar('start', {
					property: 'backgroundColor',
					from: '#e9e9e9',
					to: '#ccc'
				});
			},
			complete: function () {
				$button.pulsar('stop');
			},
			url : url,
			method: 'POST',
			data : data,
			processData: false,
			success: function (response) {
				if (response.birthday) {
					editProfileHandler.setBirthday(response.birthday);
				}
				new futuAlert(_('Профайл обновлен.'));
			}
		});
	},
	// Удаление информационного сообщения
	closeNotification: function(target, message_id, close, animate) {
		var container = target.getParent('.b-notification'),
			close = typeof close !== 'undefined' ? close : true;

		new FuturicoHttpRequest({
			beforeSend: function () {
				!animate && target.addClass('vibrate-opacity');
			},
			complete: function () {
				!animate && target.removeClass('vibrate-opacity');
			},
			url: router.generate('notifications_dismiss'),
			method: 'POST',
			data: 'id=' + message_id,
			processData: false,
			success: function (response) {
				if (close) {
					this.closeContainer(container, {
						destroy: true,
						collapse: true
					});
				}
			}.bind(this)
		});
	}
};

(function () {
    window.notificationsModel = {
        counters: {},
        categories: [{
            name: 'comments',
            label: 'Ответы',
            contains: ['comment_answer'],
            unread: 0,
            parent: null,
            composite: false,
            active: true
        }, {
            name: 'mentions',
            label: 'Упоминания',
            contains: ['mention'],
            unread: 0,
            parent: null,
            composite: false,
            active: true
        }, {
            name: 'notifications',
            label: 'Уведомления',
            contains: [
                'ban',
                'permission_grant',
                'unban',
                'election_voting_start',
                'election_nomination_start',
                'president_elected'
            ],
            unread: 0,
            parent: null,
            composite: false,
            active: true
        }, {
            name: 'hidden',
            label: '',
            contains: ['post_became_gold'],
            unread: 0,
            parent: null,
            composite: false,
            active: true
        }],
        notifications: [],
        unsubscriptions: [],
        page: 0
    };
})();

(function (model) {

    var notificationWindow, // окно с нотификациями
        notificationContainer, // контейнер для вставки кода нотификаций
        notificationWrapper,
        notificationWrapperOffsetHeight,
        notificationWrapperScrollHeight,
        unsubscriptionPopup, // попап с информацией об отписках
        unsubscriptionLink, // ссылка, открывающая попап с отписками
        markReadLink, // ссылка, помечающая всё прочитанным
        mobileButton, // кнопка для разворачивания меню (видно только на мобильных)
        headerButton, // кнопка в шапке для открытия окна с нотификациями
        headerContainer, // раздвигающийся контейнер внутри кнопки
        headerBlogs, // кнопка сообществ в шапке
        lastActiveButtons, // активные кнопки в шапке на момент открытия окна
        sidebar, // боковая панель с категориями нотификаций
        wrapper, // обёртка для всего контента на странице (внешний элемент)
        footer, // футер страницы (внешний элемент)
        lastScroll, // позиция прокрутки на момент открытия окна
        currentAjaxId = 0, // порядковый номер актуального запроса
        isNotificationPage = location.pathname.replace(/\/$/, '') === '/my/events', // это роутинг
        $window = jQuery(window),
        $document = jQuery(document),
        $body;

    window.notificationsPopup = {
        // Переключить состояние окна
        toggleFeed: function (event) {
            var openNewWindow = event.metaKey || event.button==1;
            if (!openNewWindow) {
                if (isNotificationPage) return;
                if ($body.hasClass('l-mobile')) return;
                if ($body.hasClass('l-1000')) return;
                event.preventFeedClosing = true;
                event.preventDefault();
                this._isOpened ? this.closeFeed() : this.openFeed();
            }
        },

        // Открыть окно
        openFeed: function () {
            // Если окно уже создано
            if (notificationWindow) {
                this._showNotificationWindow(); // показываем его
            } else {
                this._renderLayout(); // иначе создаём
            }
        },

        // Закрыть окно
        closeFeed: function () {
            if (!this._isOpened) return;
            this.closeContextMenu();
            this._hideNotificationWindow();
        },

        // Открыть или закрыть контекстное меню для отписки от нотификаций
        toggleContextMenu: function (notificationId) {
            if ($$('[data-unsubscribe-menu="' + notificationId + '"]')[0].hasClass('b-notification-item_unsubscribe-menu__active')) {
                this.closeContextMenu();
            } else {
                this.openContextMenu(notificationId);
            }
        },

        // Открыть контекстное меню отписки от нотификаций
        openContextMenu: function (notificationId) {
            this.closeContextMenu();

            this._contextMenu = $$('[data-unsubscribe-menu="' + notificationId + '"]')[0];
            this._contextMenu.addClass('visible');
        },

        // Закрыть контекстное меню отписки от нотификаций
        closeContextMenu: function () {
            if (!this._contextMenu) return;

            this._contextMenu.removeClass('visible');
            this._contextMenu = null;
        },

        // Развернуть или свернуть длинный комментарий
        toggleComment: function (element, direction) {
            var full = element.getParent('.js-roll_element').getElement('.js-roll_full');
            var snippet = element.getParent('.js-roll_element').getElement('.js-roll_snippet');

            if (direction === 'down') {
                full.removeClass('hidden');
                var snippetHeight = snippet.getSize().y;
                snippet.setAttribute('data-height', parseInt(snippetHeight));
                if (!full.getAttribute('data-height')) {
                    var fullHeight = full.getSize().y
                    full.setAttribute('data-height',parseInt(fullHeight));
                };
                snippet.addClass('hidden');
                full.setStyle('height', snippetHeight+"px");
                setTimeout(function(){
                    full.setStyle('transition','height 0.3s');
                    full.setStyle('height', full.getAttribute('data-height')+"px");
                },100)
                element.getParent('.js-roll_element').addClass('js-post_opened');
            } else {
                full.setStyle('height', parseInt(snippet.getAttribute('data-height')))
                setTimeout(function(){
                    full.addClass('hidden');
                    snippet.removeClass('hidden');
                },100)
                element.getParent('.js-roll_element').removeClass('js-post_opened');
            }
        },

        // Развернуть или свернуть родительский комментарий
        toggleParentComment: function (element) {
            var parentComment = element.getParent('.b-notification-item').getElement('.js-notification-item_parent_comment');
            if (parentComment.hasClass('hidden')){
                element.addClass('js-roll_parent_comment__up');
                parentComment.removeClass('hidden');
                var parentCommentHeight = parentComment.getSize().y;
                parentComment.setAttribute('data-height', parseInt(parentCommentHeight));
                parentComment.setStyle('height', 0);
                setTimeout(function(){
                    parentComment.setStyle('transition','height 0.3s');
                    parentComment.setStyle('height', parentComment.getAttribute('data-height')+"px");
                },100)
            }
            else {
                element.removeClass('js-roll_parent_comment__up');
                parentComment.setStyle('height',0);
                setTimeout(function(){
                    parentComment.addClass('hidden');
                    parentComment.setStyle('height','auto');
                },300)
            }
        },

        _contextMenu: null, // DOM-элемент текущего контекстного меню

        // Состояние готовности контейнеров для разных разделов (null - подготовка не начиналась, false - начиналась, true - закончилась)
        _renderedSections: {
            counters: null,
            settings: null,
            notifications: null,
            unsubscriptions: null
        },

        // Состояние готовности данных для разных разделов (false - не готовы, true - готовы)
        _loadedSections: {
            counters: false,
            settings: false,
            notifications: false,
            unsubscriptions: false
        },

        _isOpened: false, // состояние окна с нотификациями

        _isFullyLoaded: false, // загружены ли все имеющиеся нотификации

        // Назначить обработчики событий
        _assignEvents: function () {
            notificationWindow.addEvent(
                'click:relay(.js-notification-setting)',
                this._onSettingClick.bind(this)
            );

            notificationWindow.addEvent(
                'click:relay([data-unsubscribe-item])',
                this._onContextMenuClick.bind(this)
            );

            notificationWindow.addEvent(
                'click:relay(.b-toggler)',
                this._onTogglerClick.bind(this)
            );

            notificationWindow.addEvent(
                'click:relay([data-unsubscription-link])',
                this._onUnsubscriptionLinkClick.bind(this)
            );

            notificationWindow.addEvent(
                'click:relay([data-unsubscribe-menu])',
                this._onUnsubscriptionCrossClick.bind(this)
            );

            notificationWindow.addEvent(
                'click:relay([data-mark-read])',
                this._onMarkAllReadLinkClick.bind(this)
            );

            notificationWindow.addEvent(
                'click:relay([data-notification-toggle-form])',
                this._onAnswerLinkClick.bind(this)
            );

            mobileButton.addEvent('click', this._onMobileButtonClick.bind(this));

            notificationWindow.addEvent(
                'click:relay([data-notification] a)',
                this._markNotificationAsRead.bind(this)
            );

            headerButton.addEvent('click', this._onHeaderButtonClick.bind(this));

        },

        // Удалить обработчики событий
        _unassignEvents: function () {
            notificationWindow.removeEvents('click');
            mobileButton.removeEvents('click');
            headerButton.removeEvents('click');
        },

        // Получить категорию (объект) по имени из соответствующего массива
        _getCategory: function (category) {
            for (var c = 0, cl = model.categories.length; c < cl; c++) {
                if (model.categories[c].name === category) {
                    return model.categories[c];
                }
            }
        },

        // Вычислить кол-во текущих отписок (в массиве model.unsubscriptions могут быть null)
        _getUnsubscriptionsLength: function () {
            var length = 0;
            for (var u = 0, ul = model.unsubscriptions.length; u < ul; u++) {
                if (model.unsubscriptions[u]) length++;
            }
            return length;
        },

        // Отфильтровать ссылки по методу
        _filterLinks: function (links, method) {
            return links.filter(function (link) {
                return link.method.toLowerCase() === method.toLowerCase();
            });
        },

        // Сформировать текст для отписки
        _getUnsubscriptionLabel: function (unsubscription) {
            var unsubscriptionKey = unsubscription.key.split('::'),
                unsubscriptionType = unsubscriptionKey[0],
                unsubscriptionProperty = unsubscriptionKey[1],
                messageKey = unsubscriptionType + '::' + unsubscriptionProperty;

            switch (messageKey) {
                case 'comment_answer::user_id':
                    return [
                        'Ответы от пользователя ',
                        '<a target="_blank" href="/user/' + unsubscription.user.login + '/">',
                        unsubscription.user.login,
                        '</a>'
                    ].join('');
                    break;
                case 'comment_answer::comment_id':
                    return [
                        'Ответы на ваш комментарий в посте ',
                        '<a target="_blank" href="' + this._filterLinks(unsubscription.comment.post._links, 'GET')[0].href + '">',
                        unsubscription.comment.post.title,
                        '</a>'
                    ].join('');
                    break;
                case 'comment_answer::post_id':
                    return [
                        'Ответы на ваши комментарии в посте ',
                        '<a target="_blank" href="' + this._filterLinks(unsubscription.post._links, 'GET')[0].href + '">',
                        unsubscription.post.title,
                        '</a>'
                    ].join('');
                    break;
                case 'new_comment::post_id':
                    return [
                        'Новые комментарии в посте ',
                        '<a target="_blank" href="' + this._filterLinks(unsubscription.post._links, 'GET')[0].href + '">',
                        unsubscription.post.title,
                        '</a>'
                    ].join('');
                    break;
                case 'mention::user_id':
                    return [
                        'Упоминания от пользователя ',
                        '<a target="_blank" href="/user/' + unsubscription.user.login + '/">',
                        unsubscription.user.login,
                        '</a>'
                    ].join('');
                    break;
                case 'mention::post_id':
                    return [
                        'Упоминания в посте ',
                        '<a target="_blank" href="' + this._filterLinks(unsubscription.post._links, 'GET')[0].href + '">',
                        unsubscription.post.title,
                        '</a>'
                    ].join('');
                    break;
                case 'ban+unban::domain_id':
                    var domain_name = '';
                    if (unsubscription.domain.id == 1) {
                        var domain_name = 'на главной'
                    } else {
                        domain_name = [
                            'в сообществе ',
                            '<a target="_blank" href="' + unsubscription.domain.url + '">',
                            unsubscription.domain.prefix,
                            '</a>'
                        ].join('');
                    }
                    return 'Изменение вашего статуса ' + domain_name;
                    break;
                case 'permission_grant::domain_id':
                    return [
                        'Номинации в сообществе ',
                        '<a target="_blank" href="' + unsubscription.domain.url + '">',
                        unsubscription.domain.prefix,
                        '</a>'
                    ].join('');
                    break;
                case 'election_nomination_start+president_elected+election_voting_start::domain_id':
                    return [
                        'Выборы в сообществе ',
                        '<a target="_blank" href="' + unsubscription.domain.url + '">',
                        unsubscription.domain.prefix,
                        '</a>'
                    ].join('');
                    break;
                case 'post_from_subscribed_user::domain_id':
                    return [
                        'Посты в сообществе ',
                        '<a target="_blank" href="' + unsubscription.domain.url + '">',
                        unsubscription.domain.prefix,
                        '</a>'
                    ].join('');
                    break;
                case 'post_from_subscribed_user::user_id':
                    return [
                        'Посты пользователя ',
                        '<a target="_blank" href="/user/' + unsubscription.user.login + '">',
                        unsubscription.user.login,
                        '</a>'
                    ].join('');
                    break;
            }
        },

        // Активна ли группа с именем group
        _isGroupActive: function (group) {
            for (var c = 0, cl = model.categories.length; c < cl; c++) {
                var category = model.categories[c];
                if (!category.composite && category.active && category.contains.indexOf(group) !== -1) {
                    return true;
                }
            }
            return false;
        },

        // Отобразить созданное окно с нотификациями
        _showNotificationWindow: function () {
            // Закрываем все увеличенные изображения и gif-картинки
            $$('.js-image_opened').fireEvent('click');

            // Добавляем обработчики событий
            document.addEvent('keydown', this._onDocumentKeyDown);
            document.addEvent('click', this._onDocumentClick);
            window.addEvent('scroll', this._onWindowScroll);
            window.addEvent('resize', this._onWindowResize);
            notificationWrapper.addEvent('scroll', this._onContainerScroll);
            notificationWrapper.addEventListener('mousewheel', this._onContainerMouseWheel);

            if (isNotificationPage) {
                // Сохраняем положение скролла
                lastScroll = window.scrollY;

                // Обрезаем новостную ленту, скрываем футер
                footer && footer.addClass('hidden');

                // Отключаем автоподгрузку новостей
                moreHandler.toggle(false);

                // Проматываем наверх
                document.body.scrollTo(0, 0);

            }
            this._onWindowResize();

            // Разворачиваем кнопку в шапке
            lastActiveButtons = $$('.b-header_nav_button__active');
            lastActiveButtons.removeClass('b-header_nav_button__active');
            headerButton.addClass('b-header_nav_button__active');

            // Открываем окно с нотификациями
            this._isOpened = true;
            notificationWindow.removeClass(isNotificationPage ? 'hidden' : 'vis_hidden');
            notificationWindow.inject(document.body);
        },

        // Скрыть окно с нотификациями
        _hideNotificationWindow: function () {
            // Сворачиваем кнопку в шапке
            lastActiveButtons.addClass('b-header_nav_button__active');
            headerButton.removeClass('b-header_nav_button__active');

            // Удаляем обработчики событий
            document.removeEvent('keydown', this._onDocumentKeyDown);
            document.removeEvent('click', this._onDocumentClick);
            window.removeEvent('scroll', this._onWindowScroll);
            window.removeEvent('resize', this._onWindowResize);
            notificationWrapper.removeEvent('scroll', this._onContainerScroll);
            notificationWrapper.removeEventListener('mousewheel', this._onContainerMouseWheel);

            if (isNotificationPage) {
                // Возвращаем новостную ленту и футер
                footer && footer.removeClass('hidden');

                // Включаем автоподгрузку новостей
                moreHandler.toggle(true);

                // Восстанавливаем прокрутку
                document.body.scrollTo(0, lastScroll);

                this._updateCounters(model.counters);
            }

            // Закрываем окно с нотификациями
            this._isOpened = false;
            notificationWindow.addClass(isNotificationPage ? 'hidden' : 'vis_hidden');
        },

        // Удалить нотификацию после отписки
        _removeNotification: function (notificationId) {
            notificationWindow
                .getElement('[data-notification="' + notificationId + '"]')
                .addClass('b-notification-item__disabled');
        },

        // Спозиционировать попап с отписками рядом с соответствующей ссылкой
        _setUnsubscriptionPopupPosition: function () {
            var popup = unsubscriptionPopup[0],
                link = unsubscriptionLink[0],
                linkPosition = link.getPosition(),
                popupSize = popup.getSize();

            popup.setStyles({
                left: linkPosition.x - popupSize.x - 14,
                top: linkPosition.y - popupSize.y - $window.scrollTop() + 22
            });
        },

        // Загрузить нотификации
        _loadNotifications: function (pageNumber) {
            if (pageNumber) {
                model.page = pageNumber;
            } else {
                model.page++;
            }

            if (model.page>1000) return;

            new FuturicoHttpRequest({
                url: router.generate('all_notifications') + '?per_page=20&page=' + model.page,
                contentType: 'application/json',
                success: jQuery.proxy(this._onNotificationsLoadingSuccess, this, ++currentAjaxId)
            });
        },

        // Загрузить настройки
        _loadSettings: function () {
            new FuturicoHttpRequest({
                url: router.generate('get_feed_settings'),
                contentType: 'application/json',
                success: this._onSettingsLoadingSuccess.bind(this)
            });
        },

        // Загрузить счётчики
        _loadCounters: function () {
            new FuturicoHttpRequest({
                url: router.generate('unread_counter_grouped'),
                contentType: 'application/json',
                success: this._onCountersLoadingSuccess.bind(this)
            });
        },

        // Загрузить отписки
        _loadUnsubscriptions: function () {
            new FuturicoHttpRequest({
                url: router.generate('unsubscribed'),
                success: this._onUnsubscriptionsLoadingSuccess.bind(this)
            });
        },

        // Подписаться или отписаться
        _setSubscription: function (action, params, callback) {
            params.action = action;
            new FuturicoHttpRequest({
                method: 'POST',
                data: params,
                url: router.generate('set_subscription'),
                success: callback || this._onSubscriptionSettingSuccess.bind(this)
            });
        },

        // Поменять настройки
        _toggleSettings: function (category) {
            console.log(category);
            category = this._getCategory(category);
            if (!category) return;

            // Категория содержит в себе несколько групп, каждую нужно изменить
            var settings = {};
            for (var c = 0, cl = category.contains.length; c < cl; c++) {
                settings[category.contains[c]] = !category.active;
            }
            settings.post_became_gold = true; // эти группы неизменяемые

            new FuturicoHttpRequest({
                method: 'PATCH',
                data: settings,
                url: router.generate('set_feed_settings'),
                success: this._onSettingsTogglingSuccess.bind(this)
            });
        },

        // Обновить нотификации в модели
        _updateNotifications: function (page) {
            if (page.page === 1) {
                model.notifications = page.notifications;
            } else {
                model.notifications = model.notifications.concat(page.notifications);
            }
            this._renderNotifications(page.notifications);
        },

        _resetCounters: function () {
            if (!Object.keys(model.counters).length) return; // дождаться загрузки счётчиков
            this._onCountersReset.call(this);
        },

        // Пометить все нотификации как прочитанные
        _markAllNotificationsRead: function () {
            if (!model.notifications.length) return; // дождаться загрузки нотификаций

            new FuturicoHttpRequest({
                method: 'POST',
                url: router.generate('mark_read'),
                success: this._onAllNotificationsMarked.bind(this)
            });
        },

        // пометить одно уведомление прочитанным
        _markNotificationAsRead: function (event) {
            if (!model.notifications.length) return; // дождаться загрузки нотификаций
            var notificationId = event.target.getParent('.b-notification-item').getAttribute('data-notification');
            new FuturicoHttpRequest({
                method: 'POST',
                url: router.generate('mark_one_as_read',{
                    notification_id: notificationId
                }),
                success: this._onNotificationMarkedAsRead.bind(this, notificationId)
            });
        },

        _onNotificationMarkedAsRead: function (notificationId) {
            $('notification-'+notificationId).removeClass('b-notification-item__unread');
            if ($('notification-'+notificationId).getElement('.b-notification-item_mark-read')) {
                $('notification-'+notificationId).getElement('.b-notification-item_mark-read').destroy();
            }
        },

        // Обновить настройки в модели
        _updateSettings: function (settings) {
            // Если хотя бы одна группа в категории активна, значит вся категория активна
            for (var c = 0, cl = model.categories.length; c < cl; c++) {
                var category = model.categories[c];
                category.active = false;
                for (var s in settings) {
                    if (category.contains.indexOf(s) !== -1) {
                        category.active = category.active || settings[s];
                    }
                }
            }

            this._renderSettings();
        },

        // Обновить счётчики в модели
        _updateCounters: function (counters) {
            model.counters = counters;

            // Считаем сумму счётчиков для каждой категории
            for (var c = 0, cl = model.categories.length; c < cl; c++) {
                var category = model.categories[c];
                category.unread = category.contains.map(function (group) {
                    return +counters[group] || 0;
                }).reduce(function (a, b) {
                    return a + b;
                });
            }

            // Считаем общее кол-во непрочтённых нотификаций
            var sum = 0;
            for (var c in counters) {
                if (this._isGroupActive(c)) {
                    sum += counters[c];
                }
            }
            model.counters.sum = sum;
            this._renderedSections.settings && this._renderSettings();
        },

        // Обновить отписки в модели
        _updateUnsubscriptions: function (unsubscriptions) {
            /* Для каждой отписки формируем уникальный ключ. Несколько отписок могут объединиться в одну.
                - группы ban и unban объединяем в одну
                - группы election_nomination_start, president_elected и election_voting_start объединяем в одну
            */
            var map = {},
                uniqueUnsubscriptions = []; // массив нужен, чтобы не нарушать порядок отписок
            for (var u = 0, ul = unsubscriptions.length; u < ul; u++) {
                var unsubscription = unsubscriptions[u],
                    unsubscriptionKey = unsubscription.type
                        .replace(/^ban/, 'ban+unban')
                        .replace(/^unban/, 'ban+unban')
                        .replace(/^election_nomination_start/, 'election_nomination_start+president_elected+election_voting_start')
                        .replace(/^president_elected/, 'election_nomination_start+president_elected+election_voting_start')
                        .replace(/^election_voting_start/, 'election_nomination_start+president_elected+election_voting_start'),
                    property = Object.keys(unsubscription.subject)[0],
                    id = unsubscription.subject[property];

                unsubscriptionKey = unsubscriptionKey + '::' + property + '::' + id;
                unsubscription.key = unsubscriptionKey; // ключ вида ban+unban::domain_id::12345
                if (!map[unsubscriptionKey]) {
                    uniqueUnsubscriptions.push(unsubscription);
                    map[unsubscriptionKey] = true;
                }
            }

            model.unsubscriptions = uniqueUnsubscriptions;
            this._renderUnsubscriptions();
        },

        _resetUnseenCounter: function() {
            //Отправляем на сервер запрос на обновление счетчика просмотренных
            new FuturicoHttpRequest({
                method: 'POST',
                url: router.generate('mark_as_seen'),
                success: function(){
                    $$('.js-events-counter').destroy();
                }
            });


        },

        // Отрисовать макет
        _renderLayout: function () {
            env.render('./notifications/feed_layout.html', {
                layout: isNotificationPage ? 'page' : 'popup'
            }, this._onLayoutRenderingComplete.bind(this));
        },

        // Отрисовать нотификации
        _renderNotifications: function (notifications) {
            env.render('./notifications/feed_notification.html', {
                notifications: notifications
            }, jQuery.proxy(this._onNotificationsRenderingComplete, this, currentAjaxId));
        },

        // Отрисовать настройки
        _renderSettings: function () {
            // Если контейнер для настроек уже готов
            if (this._renderedSections.settings) {
                // Обновляем состояние на актуальное
                for (var c = 0, cl = model.categories.length; c < cl; c++) {
                    var category = model.categories[c],
                        $category = $$('[data-category="' + category.name + '"]');

                    if (category.name === 'hidden') continue; // не рисовать скрытую категорию

                    $category.toggleClass('b-notification-settings_category__disabled', !category.active);
                    $category.getElement('[data-category-counter]')[0]
                        .set('data-category-counter', category.unread)
                        .set('html', category.unread);
                }
            } else if (this._renderedSections.settings === null) {
                // Иначе рендерим контейнер
                this._renderedSections.settings = false;
                env.render('./notifications/feed_settings.html', {
                    categories: model.categories
                }, this._onSettingsRenderingComplete.bind(this));
            }
        },

        // Отрисовать отписки
        _renderUnsubscriptions: function () {
            // Если контейнер для отписок уже готов
            if (this._renderedSections.unsubscriptions) {
                // Обновляем состояние на актуальное
                var html = [
                        '<li class="b-notification-unsubscriptions_item" data-unsubscription="-1">',
                        '&nbsp;<a href="javascript:;" class="b-notification-unsubscriptions_button" data-unsubscription-button="-1">Включить всё</a>',
                        '</li>'
                    ].join('');

                for (var u = 0, ul = model.unsubscriptions.length; u < ul; u++) {
                    if (!model.unsubscriptions[u]) continue;
                    html += [
                        '<li class="b-notification-unsubscriptions_item" data-unsubscription="' + u + '">',
                        this._getUnsubscriptionLabel(model.unsubscriptions[u]),
                        '<a href="javascript:;" class="b-notification-unsubscriptions_button" data-unsubscription-button="' + u + '">Включить</a>',
                        '</li>'
                    ].join('');
                }

                $$('[data-unsubscription-list]').set('html', html);
                var length = this._getUnsubscriptionsLength();
                unsubscriptionPopup.toggleClass('hidden', !length);
                unsubscriptionLink.toggleClass('hidden', !length);
            } else if (this._renderedSections.unsubscriptions === null) {
                // Иначе рендерим контейнер
                this._renderedSections.unsubscriptions = false;
                env.render('./notifications/feed_unsubscriptions.html', {

                }, this._onUnsubscriptionsRenderingComplete.bind(this));
            }
        },

        _onNotificationsLoadingSuccess: function (ajaxId, response) {
            if (ajaxId !== currentAjaxId) return;
            this._isFullyLoaded = response.page_count === response.page || response.page_count === 0 || response.page == 100;

            preloader.addClass('hidden');
            if (this._isFullyLoaded) preloader.destroy();
            this._loadedSections.notifications = true;

            var page = response;
            if (!isNotificationPage) {
                page.notifications = page.notifications.slice(0, 10);
            }
            this._updateNotifications(page);
        },

        _onSettingsLoadingSuccess: function (response) {
            this._loadedSections.settings = true;

            var settings = response;
            this._updateSettings(settings);
        },

        _onCountersLoadingSuccess: function (response) {
            this._loadedSections.counters = true;

            var counters = response.count;
            this._updateCounters(counters);
        },

        _onUnsubscriptionsLoadingSuccess: function (response) {
            this._loadedSections.unsubscriptions = true;

            var unsubscriptions = response.subscriptions;
            this._updateUnsubscriptions(unsubscriptions);
        },

        _onSubscriptionSettingSuccess: function (response) {
            this._loadUnsubscriptions();
        },

        _onSettingsTogglingSuccess: function (response) {
            var settings = response;
            this._updateSettings(settings);
            this._renderSettings();
            this._loadNotifications(1);
        },

        _onCountersReset: function (response) {
            // Сбрасываем все счётчики, но не перерисовываем их
            for (var c in model.counters) {
                model.counters[c] = 0;
            }
            this._resetUnseenCounter();
        },

        _onAllNotificationsMarked: function (response) {
            notificationContainer
                .getElements('.b-notification-item')
                .removeClass('b-notification-item__unread');
        },

        _onLayoutRenderingComplete: function (error, html) {
            if (error) throw 'Render has failed!';

            var span = document.createElement('span');
            span.innerHTML = html;

            if (isNotificationPage) {
                document.body.appendChild(span.children[0]);
            } else {
                $$('.b-header_events')[0].appendChild(span.children[0])
            }

            this._renderedSections.counters = true;
            this._renderedSections.notifications = true;

            wrapper = $('js-nonfooter');
            footer = $('js-footer');
            sidebar = $('js-notification-feed_sidebar');
            notificationWindow = $('js-notification-feed');
            notificationContainer = $('js-notification-feed-main');
            notificationWrapper = $$('.b-notification-feed_inner')[0];
            mobileButton = $('js-notification-menu');
            headerContainer = $$('.b-header__events-container')[0];
            headerBlogs = $$('.l-header_aside')[0];
            preloader = $('js-notification-feed__loading-animation');

            this._renderSettings();
            this._renderUnsubscriptions();

            this._loadSettings();
            this._loadUnsubscriptions();
            this._loadNotifications();
            this._loadCounters();

            this._assignEvents();
            this._showNotificationWindow();

        },

        _onNotificationsRenderingComplete: function (ajaxId, error, html) {
            if (ajaxId !== currentAjaxId) return;
            if (error) throw 'Render has failed!';

            currentAjaxId = 0; // запрос дошёл до своего логического завершения, можно сбросить счётчик

            var span = document.createElement('span'),
                fragment = document.createDocumentFragment();
                preloader.addClass('hidden');
            span.innerHTML = html;
            while (span.children.length) {
                fragment.appendChild(span.children[0]);
            }
            notificationWindow.addClass(notificationsModel.notifications.length>0 ? 'b-notification-feed_exist' : 'b-notification-feed_empty');
            if (model.page === 1) {
                var commentForms = notificationContainer.getElements('[data-comment-form]');
                for (var c = 0, cl = commentForms.length; c < cl; c++) {
                    delete commentsHandler.new_comment_forms[commentForms[c].getAttribute('data-comment-form')];
                }
                notificationContainer.innerHTML = '';
            }
            notificationContainer.appendChild(fragment);

            datesHandler.setDates();
            popupHandler.update(notificationContainer);
            iconsHandler.update();
            futuMediaPlayer.initPopupMedia(notificationContainer);

            this._resetCounters(); // сразу после отображения нотификаций сбрасываем счётчики
            if (!isNotificationPage){
                notificationWrapperOffsetHeight = notificationWrapper.offsetHeight;
                notificationWrapperScrollHeight = notificationWrapper.scrollHeight;
            }
        },

        _onSettingsRenderingComplete: function (error, html) {
            if (error) throw 'Render has failed!';

            $('js-notification-settings').innerHTML = html;
            this._renderedSections.settings = true;
            this._renderSettings();
        },

        _onUnsubscriptionsRenderingComplete: function (error, html) {
            if (error) throw 'Render has failed!';

            $('js-notification-unsubscriptions').innerHTML = html;
            unsubscriptionLink = $$('[data-unsubscription-link]');
            unsubscriptionPopup = $$('[data-unsubscription-popup]')
                .inject(document.body)
                .addEvent(
                    'click:relay([data-unsubscription-button])',
                    this._onUnsubscriptionButtonClick.bind(this)
                );

            this._renderedSections.unsubscriptions = true;
            this._renderUnsubscriptions();
        },

        _onAnswerLinkClick: function (event, target) {
            if (event.target !== target) return;
            if (target.getParent('[data-notification]').hasClass('answered')) return;

            try {
                var options = (new Function('return ' + target.getAttribute('data-notification-toggle-form')))();
                if (!options || typeof options !== 'object') {
                    throw 'Invalid options!';
                }
            } catch (error) {
                return;
            }

            if (!options.postId || !options.commentId) return;
            commentsHandler.toggleCommentForm(target, options.postId, options.commentId);
        },

        _onMobileButtonClick: function () {
            sidebar.toggleClass('b-notification-feed_sidebar__opened');
        },

        _onHeaderButtonClick: function () {
            if (!isNotificationPage) return;
            location.href = '/my/events/';
        },

        _onSettingClick: function (event, target) {
            if (!this._loadedSections.settings) return;

            var category = target.getAttribute('data-category');
            this._toggleSettings(category);
        },

        _onContextMenuClick: function (event, target) {
            var properties = {'user': 1, 'domain': 1, 'post': 1, 'comment': 1}, // создаём объект ради ключей
                types = target.getAttribute('data-type').split(','),
                params = {}; // на самом деле здесь будет только один параметр

            // Для каждого свойства проверяем значение атрибута и записываем его в params
            for (var p in properties) {
                var value = target.getAttribute('data-' + p + '-id');
                if (value) {
                    params[p + '_id'] = +value;
                }
            }

            // Для каждой группы изменяем подписку с одинаковыми параметрами
            for (var t = 0, tl = types.length; t < tl; t++) {
                params.type = types[t];
                this._setSubscription('unsubscribe', params);
            }

            this._removeNotification(target.getAttribute('data-unsubscribe-item')); // визуально удаляем нотификацию

            // В новом потоке закрываем контекстное меню, иначе браузер не сможет отрисовать transition
            var that = this;
            setTimeout(function () {
                that.closeContextMenu();
            });
        },

        _onTogglerClick: function (event, target) {
            target.toggleClass('b-toggler__enabled');
        },

        _onUnsubscriptionCrossClick: function (event, target) {
            if (this._contextMenu !== target) {
                var notificationId = +target.getAttribute('data-unsubscribe-menu');
                event.event.preventContextMenuClosing = true;
                this.openContextMenu(notificationId);
            }
        },

        _onUnsubscriptionButtonClick: function (event, target) {
            var that = this,
                unsubscriptionId = +target.getAttribute('data-unsubscription-button'), // номер отписки в model.unsubscriptions
                unsubscriptions, // массив с отписками, которые нужно отменить
                c = 0, // счётчик завершённых запросов
                callback = function () {
                    // Если все запросы завершились и в массиве model.unsubscriptions остались только null
                    if (++c === unsubscriptions.length && !that._getUnsubscriptionsLength()) {
                        that._loadUnsubscriptions(); // загружаем пустой массив с сервера
                    }
                };

            if (unsubscriptionId === -1) { // -1 значит отменить все отписки
                unsubscriptions = model.unsubscriptions;
            } else {
                unsubscriptions = [model.unsubscriptions[unsubscriptionId]];
            }

            for (var u = 0, ul = unsubscriptions.length; u < ul; u++) {
                var unsubscription = unsubscriptions[u];
                if (!unsubscription) { // здесь может быть null, вместо отписки
                    c++;
                    continue;
                }

                var unsubscriptionKey = unsubscription.key.split('::'),
                    params = {},
                    groups = unsubscriptionKey[0].split('+'); // достаём группы из уникального ключа отписки

                params[unsubscriptionKey[1]] = unsubscriptionKey[2]; // достаём свойство и его значение из ключа отписки

                // Для каждой группы отменяем отписку с одинаковыми параметрами
                for (var g = 0, gl = groups.length; g < gl; g++) {
                    params.type = groups[g];
                    this._setSubscription('reset', params, callback);
                }

                /*
                    Сперва даём другому обработчику понять, что клик по отписке был внутри попапа.
                    А затем удаляем эту отписку из DOM и снова позиционируем попап.
                */
                unsubscriptionId !== -1 && setTimeout(jQuery.proxy(function (unsubscriptionId) {
                    $$('[data-unsubscription="' + unsubscriptionId + '"]').destroy();
                    that._setUnsubscriptionPopupPosition();
                }, this, unsubscriptionId));

                // Обнуляем отписку в массиве, т.к. нельзя менять порядковые номера других отписок
                model.unsubscriptions[unsubscription.order] = null;
            }

            // Скрываем попап и кнопку, если удалены все отписки
            if (!this._getUnsubscriptionsLength()) {
                unsubscriptionPopup.addClass('hidden');
                unsubscriptionLink.addClass('hidden');
                this.closeContextMenu();
            }
        },

        _onUnsubscriptionLinkClick: function (event, target) {
            if (!this._loadedSections.unsubscriptions) return;
            event.event.preventContextMenuClosing = true;

            var popup = unsubscriptionPopup[0];
            if (this._contextMenu === popup) return;

            this.closeContextMenu();
            this._setUnsubscriptionPopupPosition();
            this._contextMenu = popup.addClass('visible');
        },

        _onMarkAllReadLinkClick: function (event, target) {
            this._markAllNotificationsRead();
        },

        _onDocumentKeyDown: function (event) {
            if (event.key !== 'esc') return;

            if (this._contextMenu) {
                this.closeContextMenu();
            } else if (!isNotificationPage) {
                this.closeFeed();
            }
        },

        _onDocumentClick: function (event) {
            // Клик произошёл внутри контекстного меню
            if (event.target.getParents('.js-notification-popup').length) return;

            // Клик произошёл по кнопке, которая открывает контекстное меню
            if (event.event.preventContextMenuClosing) return;

            // Клик произошёл по кнопке, которая открывает попап
            if (event.event.preventFeedClosing) return;

            if (this._contextMenu) {
                this.closeContextMenu();
            }

            if (!isNotificationPage && !notificationWindow.contains(event.target)) {
                this.closeFeed();
            }
        },

        _onWindowScroll: function () {
            // Ничего не делать, если
            if (!isNotificationPage) return; // открыт попап, а не страница событий
            if (currentAjaxId) return; // уже идёт загрузка
            if (this._isFullyLoaded) return; // всё уже загружено
            if ($document.height() - $window.scrollTop() - $window.height() > 500) return; // прокрутка ещё высоко

            this._loadNotifications();
        },

        _onContainerMouseWheel: function (event) {
            if (isNotificationPage) {
                return;
            }

            if ((event.deltaY > 0 && event.currentTarget.scrollTop >= event.currentTarget.scrollHeight - event.currentTarget.offsetHeight) ||
                (event.deltaY < 0 && event.currentTarget.scrollTop <= 0)) {
                event.preventDefault();
            }
        },

        _onContainerScroll: function () {
            if (!currentAjaxId && !this._isFullyLoaded &&
                (notificationWrapperScrollHeight - notificationWrapperOffsetHeight <= notificationWrapper.scrollTop)) {
                preloader.removeClass('hidden');
                this._loadNotifications();
            }
        },

        _onWindowResize: function () {
            if (!isNotificationPage) {
                if ($body.hasClass('l-1000')) {
                    this.closeFeed();
                } else {
                    var blockAsideWidth = $$('.l-content_aside:not(.l-content_aside_subsite)')[0] ? $$('.l-content_aside')[0].getCoordinates().width : 0,
                        leftEdge = headerButton.getPosition('.l-header').x, // левая граница попапа
                        rightEdge = headerBlogs.getPosition().x, // правая граница попапа
                        rightMargin = 10;

                    notificationWindow.setStyles({
                        left: leftEdge,
                        width: rightEdge - leftEdge - rightMargin
                    });

                    headerContainer.setStyles({
                        width: rightEdge - leftEdge - rightMargin
                    });
                }
            } else {
                var headerHeight = $$('.l-header')[0].offsetHeight;
                var headerStyle = window.getComputedStyle($$('.l-header')[0], null);
                headerHeight += parseInt(headerStyle.getPropertyValue('margin-top'), 10);
                headerHeight += parseInt(headerStyle.getPropertyValue('margin-bottom'), 10);
                notificationWindow.setStyles({
                    top: headerHeight
                });
                $$('.b-notification-feed_fixed')[0].setStyles({
                    top: headerHeight
                });
            }
        },

        _eventsCounterFormat: function(value) {
            value = parseInt(value);
            if (!value) return false;
            if (value > 99) {
                return '99+'
            } else {
                return value.toString()
            }
        }
    };

    notificationsPopup._onDocumentKeyDown = notificationsPopup._onDocumentKeyDown.bind(notificationsPopup);
    notificationsPopup._onDocumentClick = notificationsPopup._onDocumentClick.bind(notificationsPopup);
    notificationsPopup._onWindowScroll = notificationsPopup._onWindowScroll.bind(notificationsPopup);
    notificationsPopup._onWindowResize = notificationsPopup._onWindowResize.bind(notificationsPopup);
    notificationsPopup._onContainerScroll = notificationsPopup._onContainerScroll.bind(notificationsPopup);
    notificationsPopup._onContainerMouseWheel = notificationsPopup._onContainerMouseWheel.bind(notificationsPopup);

    jQuery(function () {
        headerButton = $$('.js-header_button_events')[0];
        $body = jQuery(document.body);
        if (headerButton) {
            $$('.js-events-counter')[0]
                .set('html', notificationsPopup._eventsCounterFormat($$('.js-events-counter')[0].innerText))
                .removeClass('hidden');
            if (isNotificationPage) {
                notificationsPopup.openFeed();
            } else if (headerButton) {
                headerButton.addClass('b-header_nav_button__expanded');
            }
        }
    });
})(notificationsModel);

/*1.5.4*/
(function(){var f=0,k=[],m={},i={},a={"<":"lt",">":"gt","&":"amp",'"':"quot","'":"#39"},l=/[<>&\"\']/g,b,c=window.setTimeout,d={},e;function h(){this.returnValue=false}function j(){this.cancelBubble=true}(function(n){var o=n.split(/,/),p,r,q;for(p=0;p<o.length;p+=2){q=o[p+1].split(/ /);for(r=0;r<q.length;r++){i[q[r]]=o[p]}}})("application/msword,doc dot,application/pdf,pdf,application/pgp-signature,pgp,application/postscript,ps ai eps,application/rtf,rtf,application/vnd.ms-excel,xls xlb,application/vnd.ms-powerpoint,ppt pps pot,application/zip,zip,application/x-shockwave-flash,swf swfl,application/vnd.openxmlformats-officedocument.wordprocessingml.document,docx,application/vnd.openxmlformats-officedocument.wordprocessingml.template,dotx,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,xlsx,application/vnd.openxmlformats-officedocument.presentationml.presentation,pptx,application/vnd.openxmlformats-officedocument.presentationml.template,potx,application/vnd.openxmlformats-officedocument.presentationml.slideshow,ppsx,application/x-javascript,js,application/json,json,audio/mpeg,mpga mpega mp2 mp3,audio/x-wav,wav,audio/mp4,m4a,image/bmp,bmp,image/gif,gif,image/jpeg,jpeg jpg jpe,image/photoshop,psd,image/png,png,image/svg+xml,svg svgz,image/tiff,tiff tif,text/plain,asc txt text diff log,text/html,htm html xhtml,text/css,css,text/csv,csv,text/rtf,rtf,video/mpeg,mpeg mpg mpe,video/quicktime,qt mov,video/mp4,mp4,video/x-m4v,m4v,video/x-flv,flv,video/x-ms-wmv,wmv,video/avi,avi,video/webm,webm,video/vnd.rn-realvideo,rv,application/vnd.oasis.opendocument.formula-template,otf,application/octet-stream,exe");var g={VERSION:"1.5.4",STOPPED:1,STARTED:2,QUEUED:1,UPLOADING:2,FAILED:4,DONE:5,GENERIC_ERROR:-100,HTTP_ERROR:-200,IO_ERROR:-300,SECURITY_ERROR:-400,INIT_ERROR:-500,FILE_SIZE_ERROR:-600,FILE_EXTENSION_ERROR:-601,IMAGE_FORMAT_ERROR:-700,IMAGE_MEMORY_ERROR:-701,IMAGE_DIMENSIONS_ERROR:-702,mimeTypes:i,ua:(function(){var r=navigator,q=r.userAgent,s=r.vendor,o,n,p;o=/WebKit/.test(q);p=o&&s.indexOf("Apple")!==-1;n=window.opera&&window.opera.buildNumber;return{windows:navigator.platform.indexOf("Win")!==-1,ie:!o&&!n&&(/MSIE/gi).test(q)&&(/Explorer/gi).test(r.appName),webkit:o,gecko:!o&&/Gecko/.test(q),safari:p,opera:!!n}}()),typeOf:function(n){return({}).toString.call(n).match(/\s([a-z|A-Z]+)/)[1].toLowerCase()},extend:function(n){g.each(arguments,function(o,p){if(p>0){g.each(o,function(r,q){n[q]=r})}});return n},cleanName:function(n){var o,p;p=[/[\300-\306]/g,"A",/[\340-\346]/g,"a",/\307/g,"C",/\347/g,"c",/[\310-\313]/g,"E",/[\350-\353]/g,"e",/[\314-\317]/g,"I",/[\354-\357]/g,"i",/\321/g,"N",/\361/g,"n",/[\322-\330]/g,"O",/[\362-\370]/g,"o",/[\331-\334]/g,"U",/[\371-\374]/g,"u"];for(o=0;o<p.length;o+=2){n=n.replace(p[o],p[o+1])}n=n.replace(/\s+/g,"_");n=n.replace(/[^a-z0-9_\-\.]+/gi,"");return n},addRuntime:function(n,o){o.name=n;k[n]=o;k.push(o);return o},guid:function(){var n=new Date().getTime().toString(32),o;for(o=0;o<5;o++){n+=Math.floor(Math.random()*65535).toString(32)}return(g.guidPrefix||"p")+n+(f++).toString(32)},buildUrl:function(o,n){var p="";g.each(n,function(r,q){p+=(p?"&":"")+encodeURIComponent(q)+"="+encodeURIComponent(r)});if(p){o+=(o.indexOf("?")>0?"&":"?")+p}return o},each:function(q,r){var p,o,n;if(q){p=q.length;if(p===b){for(o in q){if(q.hasOwnProperty(o)){if(r(q[o],o)===false){return}}}}else{for(n=0;n<p;n++){if(r(q[n],n)===false){return}}}}},formatSize:function(n){if(n===b||/\D/.test(n)){return g.translate("N/A")}if(n>1073741824){return Math.round(n/1073741824,1)+" GB"}if(n>1048576){return Math.round(n/1048576,1)+" MB"}if(n>1024){return Math.round(n/1024,1)+" KB"}return n+" b"},getPos:function(o,s){var t=0,r=0,v,u=document,p,q;o=o;s=s||u.body;function n(B){var z,A,w=0,C=0;if(B){A=B.getBoundingClientRect();z=u.compatMode==="CSS1Compat"?u.documentElement:u.body;w=A.left+z.scrollLeft;C=A.top+z.scrollTop}return{x:w,y:C}}if(o&&o.getBoundingClientRect&&((navigator.userAgent.indexOf("MSIE")>0)&&(u.documentMode<8))){p=n(o);q=n(s);return{x:p.x-q.x,y:p.y-q.y}}v=o;while(v&&v!=s&&v.nodeType){t+=v.offsetLeft||0;r+=v.offsetTop||0;v=v.offsetParent}v=o.parentNode;while(v&&v!=s&&v.nodeType){t-=v.scrollLeft||0;r-=v.scrollTop||0;v=v.parentNode}return{x:t,y:r}},getSize:function(n){return{w:n.offsetWidth||n.clientWidth,h:n.offsetHeight||n.clientHeight}},parseSize:function(n){var o;if(typeof(n)=="string"){n=/^([0-9]+)([mgk]?)$/.exec(n.toLowerCase().replace(/[^0-9mkg]/g,""));o=n[2];n=+n[1];if(o=="g"){n*=1073741824}if(o=="m"){n*=1048576}if(o=="k"){n*=1024}}return n},xmlEncode:function(n){return n?(""+n).replace(l,function(o){return a[o]?"&"+a[o]+";":o}):n},toArray:function(p){var o,n=[];for(o=0;o<p.length;o++){n[o]=p[o]}return n},inArray:function(p,q){if(q){if(Array.prototype.indexOf){return Array.prototype.indexOf.call(q,p)}for(var n=0,o=q.length;n<o;n++){if(q[n]===p){return n}}}return -1},addI18n:function(n){return g.extend(m,n)},translate:function(n){return m[n]||n},isEmptyObj:function(n){if(n===b){return true}for(var o in n){return false}return true},hasClass:function(p,o){var n;if(p.className==""){return false}n=new RegExp("(^|\\s+)"+o+"(\\s+|$)");return n.test(p.className)},addClass:function(o,n){if(!g.hasClass(o,n)){o.className=o.className==""?n:o.className.replace(/\s+$/,"")+" "+n}},removeClass:function(p,o){var n=new RegExp("(^|\\s+)"+o+"(\\s+|$)");p.className=p.className.replace(n,function(r,q,s){return q===" "&&s===" "?" ":""})},getStyle:function(o,n){if(o.currentStyle){return o.currentStyle[n]}else{if(window.getComputedStyle){return window.getComputedStyle(o,null)[n]}}},addEvent:function(s,n,t){var r,q,p,o;o=arguments[3];n=n.toLowerCase();if(e===b){e="Plupload_"+g.guid()}if(s.addEventListener){r=t;s.addEventListener(n,r,false)}else{if(s.attachEvent){r=function(){var u=window.event;if(!u.target){u.target=u.srcElement}u.preventDefault=h;u.stopPropagation=j;t(u)};s.attachEvent("on"+n,r)}}if(s[e]===b){s[e]=g.guid()}if(!d.hasOwnProperty(s[e])){d[s[e]]={}}q=d[s[e]];if(!q.hasOwnProperty(n)){q[n]=[]}q[n].push({func:r,orig:t,key:o})},removeEvent:function(s,n){var q,t,p;if(typeof(arguments[2])=="function"){t=arguments[2]}else{p=arguments[2]}n=n.toLowerCase();if(s[e]&&d[s[e]]&&d[s[e]][n]){q=d[s[e]][n]}else{return}for(var o=q.length-1;o>=0;o--){if(q[o].key===p||q[o].orig===t){if(s.removeEventListener){s.removeEventListener(n,q[o].func,false)}else{if(s.detachEvent){s.detachEvent("on"+n,q[o].func)}}q[o].orig=null;q[o].func=null;q.splice(o,1);if(t!==b){break}}}if(!q.length){delete d[s[e]][n]}if(g.isEmptyObj(d[s[e]])){delete d[s[e]];try{delete s[e]}catch(r){s[e]=b}}},removeAllEvents:function(o){var n=arguments[1];if(o[e]===b||!o[e]){return}g.each(d[o[e]],function(q,p){g.removeEvent(o,p,n)})}};g.Uploader=function(r){var o={},u,t=[],q,p=false;u=new g.QueueProgress();r=g.extend({chunk_size:0,multipart:true,multi_selection:true,file_data_name:"file",filters:[]},r);function s(){var w,x=0,v;if(this.state==g.STARTED){for(v=0;v<t.length;v++){if(!w&&t[v].status==g.QUEUED){w=t[v];w.status=g.UPLOADING;if(this.trigger("BeforeUpload",w)){this.trigger("UploadFile",w)}}else{x++}}if(x==t.length){this.stop();this.trigger("UploadComplete",t)}}}function n(){var w,v;u.reset();for(w=0;w<t.length;w++){v=t[w];if(v.size!==b){u.size+=v.size;u.loaded+=v.loaded}else{u.size=b}if(v.status==g.DONE){u.uploaded++}else{if(v.status==g.FAILED){u.failed++}else{u.queued++}}}if(u.size===b){u.percent=t.length>0?Math.ceil(u.uploaded/t.length*100):0}else{u.bytesPerSec=Math.ceil(u.loaded/((+new Date()-q||1)/1000));u.percent=u.size>0?Math.ceil(u.loaded/u.size*100):0}}g.extend(this,{state:g.STOPPED,runtime:"",features:{},files:t,settings:r,total:u,id:g.guid(),init:function(){var A=this,B,x,w,z=0,y;if(typeof(r.preinit)=="function"){r.preinit(A)}else{g.each(r.preinit,function(D,C){A.bind(C,D)})}r.page_url=r.page_url||document.location.pathname.replace(/\/[^\/]+$/g,"/");if(!/^(\w+:\/\/|\/)/.test(r.url)){r.url=r.page_url+r.url}r.chunk_size=g.parseSize(r.chunk_size);r.max_file_size=g.parseSize(r.max_file_size);A.bind("FilesAdded",function(C,F){var E,D,H=0,I,G=r.filters;if(G&&G.length){I=[];g.each(G,function(J){g.each(J.extensions.split(/,/),function(K){if(/^\s*\*\s*$/.test(K)){I.push("\\.*")}else{I.push("\\."+K.replace(new RegExp("["+("/^$.*+?|()[]{}\\".replace(/./g,"\\$&"))+"]","g"),"\\$&"))}})});I=new RegExp(I.join("|")+"$","i")}for(E=0;E<F.length;E++){D=F[E];D.loaded=0;D.percent=0;D.status=g.QUEUED;if(I&&!I.test(D.name)){C.trigger("Error",{code:g.FILE_EXTENSION_ERROR,message:g.translate("File extension error."),file:D});continue}if(D.size!==b&&D.size>r.max_file_size){C.trigger("Error",{code:g.FILE_SIZE_ERROR,message:g.translate("File size error."),file:D});continue}t.push(D);H++}if(H){c(function(){A.trigger("QueueChanged");A.refresh()},1)}else{return false}});if(r.unique_names){A.bind("UploadFile",function(C,D){var F=D.name.match(/\.([^.]+)$/),E="tmp";if(F){E=F[1]}D.target_name=D.id+"."+E})}A.bind("UploadProgress",function(C,D){D.percent=D.size>0?Math.ceil(D.loaded/D.size*100):100;n()});A.bind("StateChanged",function(C){if(C.state==g.STARTED){q=(+new Date())}else{if(C.state==g.STOPPED){for(B=C.files.length-1;B>=0;B--){if(C.files[B].status==g.UPLOADING){C.files[B].status=g.QUEUED;n()}}}}});A.bind("QueueChanged",n);A.bind("Error",function(C,D){if(D.file){D.file.status=g.FAILED;n();if(C.state==g.STARTED){c(function(){s.call(A)},1)}}});A.bind("FileUploaded",function(C,D){D.status=g.DONE;D.loaded=D.size;C.trigger("UploadProgress",D);c(function(){s.call(A)},1)});if(r.runtimes){x=[];y=r.runtimes.split(/\s?,\s?/);for(B=0;B<y.length;B++){if(k[y[B]]){x.push(k[y[B]])}}}else{x=k}function v(){var F=x[z++],E,C,D;if(F){E=F.getFeatures();C=A.settings.required_features;if(C){C=C.split(",");for(D=0;D<C.length;D++){if(!E[C[D]]){v();return}}}F.init(A,function(G){if(G&&G.success){A.features=E;A.runtime=F.name;A.trigger("Init",{runtime:F.name});A.trigger("PostInit");A.refresh()}else{v()}})}else{A.trigger("Error",{code:g.INIT_ERROR,message:g.translate("Init error.")})}}v();if(typeof(r.init)=="function"){r.init(A)}else{g.each(r.init,function(D,C){A.bind(C,D)})}},refresh:function(){this.trigger("Refresh")},start:function(){if(t.length&&this.state!=g.STARTED){this.state=g.STARTED;this.trigger("StateChanged");s.call(this)}},stop:function(){if(this.state!=g.STOPPED){this.state=g.STOPPED;this.trigger("CancelUpload");this.trigger("StateChanged")}},disableBrowse:function(){p=arguments[0]!==b?arguments[0]:true;this.trigger("DisableBrowse",p)},getFile:function(w){var v;for(v=t.length-1;v>=0;v--){if(t[v].id===w){return t[v]}}},removeFile:function(w){var v;for(v=t.length-1;v>=0;v--){if(t[v].id===w.id){return this.splice(v,1)[0]}}},splice:function(x,v){var w;w=t.splice(x===b?0:x,v===b?t.length:v);this.trigger("FilesRemoved",w);this.trigger("QueueChanged");return w},trigger:function(w){var y=o[w.toLowerCase()],x,v;if(y){v=Array.prototype.slice.call(arguments);v[0]=this;for(x=0;x<y.length;x++){if(y[x].func.apply(y[x].scope,v)===false){return false}}}return true},hasEventListener:function(v){return !!o[v.toLowerCase()]},bind:function(v,x,w){var y;v=v.toLowerCase();y=o[v]||[];y.push({func:x,scope:w||this});o[v]=y},unbind:function(v){v=v.toLowerCase();var y=o[v],w,x=arguments[1];if(y){if(x!==b){for(w=y.length-1;w>=0;w--){if(y[w].func===x){y.splice(w,1);break}}}else{y=[]}if(!y.length){delete o[v]}}},unbindAll:function(){var v=this;g.each(o,function(x,w){v.unbind(w)})},destroy:function(){this.stop();this.trigger("Destroy");this.unbindAll()}})};g.File=function(q,o,p){var n=this;n.id=q;n.name=o;n.size=p;n.loaded=0;n.percent=0;n.status=0};g.Runtime=function(){this.getFeatures=function(){};this.init=function(n,o){}};g.QueueProgress=function(){var n=this;n.size=0;n.loaded=0;n.uploaded=0;n.failed=0;n.queued=0;n.percent=0;n.bytesPerSec=0;n.reset=function(){n.size=n.loaded=n.uploaded=n.failed=n.queued=n.percent=n.bytesPerSec=0}};g.runtimes={};window.plupload=g})();
(function(h,k,j,e){var c={},g;function m(o,p){var n;if("FileReader" in h){n=new FileReader();n.readAsDataURL(o);n.onload=function(){p(n.result)}}else{return p(o.getAsDataURL())}}function l(o,p){var n;if("FileReader" in h){n=new FileReader();n.readAsBinaryString(o);n.onload=function(){p(n.result)}}else{return p(o.getAsBinary())}}function d(r,p,n,v){var q,o,u,s,t=this;m(c[r.id],function(w){q=k.createElement("canvas");q.style.display="none";k.body.appendChild(q);o=q.getContext("2d");u=new Image();u.onerror=u.onabort=function(){v({success:false})};u.onload=function(){var B,x,z,y,A;if(!p.width){p.width=u.width}if(!p.height){p.height=u.height}s=Math.min(p.width/u.width,p.height/u.height);if(s<1||(s===1&&n==="image/jpeg")){B=Math.round(u.width*s);x=Math.round(u.height*s);q.width=B;q.height=x;o.drawImage(u,0,0,B,x);if(n==="image/jpeg"){y=new f(atob(w.substring(w.indexOf("base64,")+7)));if(y.headers&&y.headers.length){A=new a();if(A.init(y.get("exif")[0])){A.setExif("PixelXDimension",B);A.setExif("PixelYDimension",x);y.set("exif",A.getBinary());if(t.hasEventListener("ExifData")){t.trigger("ExifData",r,A.EXIF())}if(t.hasEventListener("GpsData")){t.trigger("GpsData",r,A.GPS())}}}if(p.quality){try{w=q.toDataURL(n,p.quality/100)}catch(C){w=q.toDataURL(n)}}}else{w=q.toDataURL(n)}w=w.substring(w.indexOf("base64,")+7);w=atob(w);if(y&&y.headers&&y.headers.length){w=y.restore(w);y.purge()}q.parentNode.removeChild(q);v({success:true,data:w})}else{v({success:false})}};u.src=w})}j.runtimes.Html5=j.addRuntime("html5",{getFeatures:function(){var s,o,r,q,p,n;o=r=p=n=false;if(h.XMLHttpRequest){s=new XMLHttpRequest();r=!!s.upload;o=!!(s.sendAsBinary||s.upload)}if(o){q=!!(s.sendAsBinary||(h.Uint8Array&&h.ArrayBuffer));p=!!(File&&(File.prototype.getAsDataURL||h.FileReader)&&q);n=!!(File&&(File.prototype.mozSlice||File.prototype.webkitSlice||File.prototype.slice))}g=j.ua.safari&&j.ua.windows;return{html5:o,dragdrop:(function(){var t=k.createElement("div");return("draggable" in t)||("ondragstart" in t&&"ondrop" in t)}()),jpgresize:p,pngresize:p,multipart:p||!!h.FileReader||!!h.FormData,canSendBinary:q,cantSendBlobInFormData:!!(j.ua.gecko&&h.FormData&&h.FileReader&&!FileReader.prototype.readAsArrayBuffer),progress:r,chunks:n,multi_selection:!(j.ua.safari&&j.ua.windows),triggerDialog:(j.ua.gecko&&h.FormData||j.ua.webkit)}},init:function(p,r){var n,q;function o(w){var u,t,v=[],x,s={};for(t=0;t<w.length;t++){u=w[t];if(s[u.name]){continue}s[u.name]=true;x=j.guid();c[x]=u;v.push(new j.File(x,u.fileName||u.name,u.fileSize||u.size))}if(v.length){p.trigger("FilesAdded",v)}}n=this.getFeatures();if(!n.html5){r({success:false});return}p.bind("Init",function(w){var G,F,C=[],v,D,t=w.settings.filters,u,B,s=k.body,E;G=k.createElement("div");G.id=w.id+"_html5_container";j.extend(G.style,{position:"absolute",background:p.settings.shim_bgcolor||"transparent",width:"100px",height:"100px",overflow:"hidden",zIndex:99999,opacity:p.settings.shim_bgcolor?"":0});G.className="plupload html5";if(p.settings.container){s=k.getElementById(p.settings.container);if(j.getStyle(s,"position")==="static"){s.style.position="relative"}}s.appendChild(G);no_type_restriction:for(v=0;v<t.length;v++){u=t[v].extensions.split(/,/);for(D=0;D<u.length;D++){if(u[D]==="*"){C=[];break no_type_restriction}B=j.mimeTypes[u[D]];if(B&&j.inArray(B,C)===-1){C.push(B)}}}G.innerHTML='<input id="'+p.id+'_html5"  style="font-size:999px" type="file" accept="'+C.join(",")+'" '+(p.settings.multi_selection&&p.features.multi_selection?'multiple="multiple"':"")+" />";G.scrollTop=100;E=k.getElementById(p.id+"_html5");if(w.features.triggerDialog){j.extend(E.style,{position:"absolute",width:"100%",height:"100%"})}else{j.extend(E.style,{cssFloat:"right",styleFloat:"right"})}E.onchange=function(){o(this.files);this.value=""};F=k.getElementById(w.settings.browse_button);if(F){var z=w.settings.browse_button_hover,A=w.settings.browse_button_active,x=w.features.triggerDialog?F:G;if(z){j.addEvent(x,"mouseover",function(){j.addClass(F,z)},w.id);j.addEvent(x,"mouseout",function(){j.removeClass(F,z)},w.id)}if(A){j.addEvent(x,"mousedown",function(){j.addClass(F,A)},w.id);j.addEvent(k.body,"mouseup",function(){j.removeClass(F,A)},w.id)}if(w.features.triggerDialog){j.addEvent(F,"click",function(H){var y=k.getElementById(w.id+"_html5");if(y&&!y.disabled){y.click()}H.preventDefault()},w.id)}}});p.bind("PostInit",function(){var s=k.getElementById(p.settings.drop_element);if(s){if(g){j.addEvent(s,"dragenter",function(w){var v,t,u;v=k.getElementById(p.id+"_drop");if(!v){v=k.createElement("input");v.setAttribute("type","file");v.setAttribute("id",p.id+"_drop");v.setAttribute("multiple","multiple");j.addEvent(v,"change",function(){o(this.files);j.removeEvent(v,"change",p.id);v.parentNode.removeChild(v)},p.id);s.appendChild(v)}t=j.getPos(s,k.getElementById(p.settings.container));u=j.getSize(s);if(j.getStyle(s,"position")==="static"){j.extend(s.style,{position:"relative"})}j.extend(v.style,{position:"absolute",display:"block",top:0,left:0,width:u.w+"px",height:u.h+"px",opacity:0})},p.id);return}j.addEvent(s,"dragover",function(t){t.preventDefault()},p.id);j.addEvent(s,"drop",function(u){var t=u.dataTransfer;if(t&&t.files){o(t.files)}u.preventDefault()},p.id)}});p.bind("Refresh",function(s){var t,u,v,x,w;t=k.getElementById(p.settings.browse_button);if(t){u=j.getPos(t,k.getElementById(s.settings.container));v=j.getSize(t);x=k.getElementById(p.id+"_html5_container");j.extend(x.style,{top:u.y+"px",left:u.x+"px",width:v.w+"px",height:v.h+"px"});if(p.features.triggerDialog){if(j.getStyle(t,"position")==="static"){j.extend(t.style,{position:"relative"})}w=parseInt(j.getStyle(t,"z-index"),10);if(isNaN(w)){w=0}j.extend(t.style,{zIndex:w});j.extend(x.style,{zIndex:w-1})}}});p.bind("DisableBrowse",function(s,u){var t=k.getElementById(s.id+"_html5");if(t){t.disabled=u}});p.bind("CancelUpload",function(){if(q&&q.abort){q.abort()}});p.bind("UploadFile",function(s,u){var v=s.settings,y,t;function x(A,D,z){var B;if(File.prototype.slice){try{A.slice();return A.slice(D,z)}catch(C){return A.slice(D,z-D)}}else{if(B=File.prototype.webkitSlice||File.prototype.mozSlice){return B.call(A,D,z)}else{return null}}}function w(A){var D=0,C=0,z=("FileReader" in h)?new FileReader:null;function B(){var I,M,K,L,H,J,F,E=s.settings.url;function G(V){var T=0,N="----pluploadboundary"+j.guid(),O,P="--",U="\r\n",R="";q=new XMLHttpRequest;if(q.upload){q.upload.onprogress=function(W){u.loaded=Math.min(u.size,C+W.loaded-T);s.trigger("UploadProgress",u)}}q.onreadystatechange=function(){var W,Y;if(q.readyState==4&&s.state!==j.STOPPED){try{W=q.status}catch(X){W=0}if(W>=400){s.trigger("Error",{code:j.HTTP_ERROR,message:j.translate("HTTP Error."),file:u,status:W})}else{if(K){Y={chunk:D,chunks:K,response:q.responseText,status:W};s.trigger("ChunkUploaded",u,Y);C+=J;if(Y.cancelled){u.status=j.FAILED;return}u.loaded=Math.min(u.size,(D+1)*H)}else{u.loaded=u.size}s.trigger("UploadProgress",u);V=I=O=R=null;if(!K||++D>=K){u.status=j.DONE;s.trigger("FileUploaded",u,{response:q.responseText,status:W})}else{B()}}}};if(s.settings.multipart&&n.multipart){L.name=u.target_name||u.name;q.open("post",E,true);j.each(s.settings.headers,function(X,W){q.setRequestHeader(W,X)});if(typeof(V)!=="string"&&!!h.FormData){O=new FormData();j.each(j.extend(L,s.settings.multipart_params),function(X,W){O.append(W,X)});O.append(s.settings.file_data_name,V);q.send(O);return}if(typeof(V)==="string"){q.setRequestHeader("Content-Type","multipart/form-data; boundary="+N);j.each(j.extend(L,s.settings.multipart_params),function(X,W){R+=P+N+U+'Content-Disposition: form-data; name="'+W+'"'+U+U;R+=unescape(encodeURIComponent(X))+U});F=j.mimeTypes[u.name.replace(/^.+\.([^.]+)/,"$1").toLowerCase()]||"application/octet-stream";R+=P+N+U+'Content-Disposition: form-data; name="'+s.settings.file_data_name+'"; filename="'+unescape(encodeURIComponent(u.name))+'"'+U+"Content-Type: "+F+U+U+V+U+P+N+P+U;T=R.length-V.length;V=R;if(q.sendAsBinary){q.sendAsBinary(V)}else{if(n.canSendBinary){var S=new Uint8Array(V.length);for(var Q=0;Q<V.length;Q++){S[Q]=(V.charCodeAt(Q)&255)}q.send(S.buffer)}}return}}E=j.buildUrl(s.settings.url,j.extend(L,s.settings.multipart_params));q.open("post",E,true);q.setRequestHeader("Content-Type","application/octet-stream");j.each(s.settings.headers,function(X,W){q.setRequestHeader(W,X)});q.send(V)}if(u.status==j.DONE||u.status==j.FAILED||s.state==j.STOPPED){return}L={name:u.target_name||u.name};if(v.chunk_size&&u.size>v.chunk_size&&(n.chunks||typeof(A)=="string")){H=v.chunk_size;K=Math.ceil(u.size/H);J=Math.min(H,u.size-(D*H));if(typeof(A)=="string"){I=A.substring(D*H,D*H+J)}else{I=x(A,D*H,D*H+J)}L.chunk=D;L.chunks=K}else{J=u.size;I=A}if(s.settings.multipart&&n.multipart&&typeof(I)!=="string"&&z&&n.cantSendBlobInFormData&&n.chunks&&s.settings.chunk_size){z.onload=function(){G(z.result)};z.readAsBinaryString(I)}else{G(I)}}B()}y=c[u.id];if(n.jpgresize&&s.settings.resize&&/\.(png|jpg|jpeg)$/i.test(u.name)){d.call(s,u,s.settings.resize,/\.png$/i.test(u.name)?"image/png":"image/jpeg",function(z){if(z.success){u.size=z.data.length;w(z.data)}else{if(n.chunks){w(y)}else{l(y,w)}}})}else{if(!n.chunks&&n.jpgresize){l(y,w)}else{w(y)}}});p.bind("Destroy",function(s){var u,v,t=k.body,w={inputContainer:s.id+"_html5_container",inputFile:s.id+"_html5",browseButton:s.settings.browse_button,dropElm:s.settings.drop_element};for(u in w){v=k.getElementById(w[u]);if(v){j.removeAllEvents(v,s.id)}}j.removeAllEvents(k.body,s.id);if(s.settings.container){t=k.getElementById(s.settings.container)}t.removeChild(k.getElementById(w.inputContainer))});r({success:true})}});function b(){var q=false,o;function r(t,v){var s=q?0:-8*(v-1),w=0,u;for(u=0;u<v;u++){w|=(o.charCodeAt(t+u)<<Math.abs(s+u*8))}return w}function n(u,s,t){var t=arguments.length===3?t:o.length-s-1;o=o.substr(0,s)+u+o.substr(t+s)}function p(t,u,w){var x="",s=q?0:-8*(w-1),v;for(v=0;v<w;v++){x+=String.fromCharCode((u>>Math.abs(s+v*8))&255)}n(x,t,w)}return{II:function(s){if(s===e){return q}else{q=s}},init:function(s){q=false;o=s},SEGMENT:function(s,u,t){switch(arguments.length){case 1:return o.substr(s,o.length-s-1);case 2:return o.substr(s,u);case 3:n(t,s,u);break;default:return o}},BYTE:function(s){return r(s,1)},SHORT:function(s){return r(s,2)},LONG:function(s,t){if(t===e){return r(s,4)}else{p(s,t,4)}},SLONG:function(s){var t=r(s,4);return(t>2147483647?t-4294967296:t)},STRING:function(s,t){var u="";for(t+=s;s<t;s++){u+=String.fromCharCode(r(s,1))}return u}}}function f(s){var u={65505:{app:"EXIF",name:"APP1",signature:"Exif\0"},65506:{app:"ICC",name:"APP2",signature:"ICC_PROFILE\0"},65517:{app:"IPTC",name:"APP13",signature:"Photoshop 3.0\0"}},t=[],r,n,p=e,q=0,o;r=new b();r.init(s);if(r.SHORT(0)!==65496){return}n=2;o=Math.min(1048576,s.length);while(n<=o){p=r.SHORT(n);if(p>=65488&&p<=65495){n+=2;continue}if(p===65498||p===65497){break}q=r.SHORT(n+2)+2;if(u[p]&&r.STRING(n+4,u[p].signature.length)===u[p].signature){t.push({hex:p,app:u[p].app.toUpperCase(),name:u[p].name.toUpperCase(),start:n,length:q,segment:r.SEGMENT(n,q)})}n+=q}r.init(null);return{headers:t,restore:function(y){r.init(y);var w=new f(y);if(!w.headers){return false}for(var x=w.headers.length;x>0;x--){var z=w.headers[x-1];r.SEGMENT(z.start,z.length,"")}w.purge();n=r.SHORT(2)==65504?4+r.SHORT(4):2;for(var x=0,v=t.length;x<v;x++){r.SEGMENT(n,0,t[x].segment);n+=t[x].length}return r.SEGMENT()},get:function(x){var y=[];for(var w=0,v=t.length;w<v;w++){if(t[w].app===x.toUpperCase()){y.push(t[w].segment)}}return y},set:function(y,x){var z=[];if(typeof(x)==="string"){z.push(x)}else{z=x}for(var w=ii=0,v=t.length;w<v;w++){if(t[w].app===y.toUpperCase()){t[w].segment=z[ii];t[w].length=z[ii].length;ii++}if(ii>=z.length){break}}},purge:function(){t=[];r.init(null)}}}function a(){var q,n,o={},t;q=new b();n={tiff:{274:"Orientation",34665:"ExifIFDPointer",34853:"GPSInfoIFDPointer"},exif:{36864:"ExifVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",36867:"DateTimeOriginal",33434:"ExposureTime",33437:"FNumber",34855:"ISOSpeedRatings",37377:"ShutterSpeedValue",37378:"ApertureValue",37383:"MeteringMode",37384:"LightSource",37385:"Flash",41986:"ExposureMode",41987:"WhiteBalance",41990:"SceneCaptureType",41988:"DigitalZoomRatio",41992:"Contrast",41993:"Saturation",41994:"Sharpness"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude"}};t={ColorSpace:{1:"sRGB",0:"Uncalibrated"},MeteringMode:{0:"Unknown",1:"Average",2:"CenterWeightedAverage",3:"Spot",4:"MultiSpot",5:"Pattern",6:"Partial",255:"Other"},LightSource:{1:"Daylight",2:"Fliorescent",3:"Tungsten",4:"Flash",9:"Fine weather",10:"Cloudy weather",11:"Shade",12:"Daylight fluorescent (D 5700 - 7100K)",13:"Day white fluorescent (N 4600 -5400K)",14:"Cool white fluorescent (W 3900 - 4500K)",15:"White fluorescent (WW 3200 - 3700K)",17:"Standard light A",18:"Standard light B",19:"Standard light C",20:"D55",21:"D65",22:"D75",23:"D50",24:"ISO studio tungsten",255:"Other"},Flash:{0:"Flash did not fire.",1:"Flash fired.",5:"Strobe return light not detected.",7:"Strobe return light detected.",9:"Flash fired, compulsory flash mode",13:"Flash fired, compulsory flash mode, return light not detected",15:"Flash fired, compulsory flash mode, return light detected",16:"Flash did not fire, compulsory flash mode",24:"Flash did not fire, auto mode",25:"Flash fired, auto mode",29:"Flash fired, auto mode, return light not detected",31:"Flash fired, auto mode, return light detected",32:"No flash function",65:"Flash fired, red-eye reduction mode",69:"Flash fired, red-eye reduction mode, return light not detected",71:"Flash fired, red-eye reduction mode, return light detected",73:"Flash fired, compulsory flash mode, red-eye reduction mode",77:"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",79:"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",89:"Flash fired, auto mode, red-eye reduction mode",93:"Flash fired, auto mode, return light not detected, red-eye reduction mode",95:"Flash fired, auto mode, return light detected, red-eye reduction mode"},ExposureMode:{0:"Auto exposure",1:"Manual exposure",2:"Auto bracket"},WhiteBalance:{0:"Auto white balance",1:"Manual white balance"},SceneCaptureType:{0:"Standard",1:"Landscape",2:"Portrait",3:"Night scene"},Contrast:{0:"Normal",1:"Soft",2:"Hard"},Saturation:{0:"Normal",1:"Low saturation",2:"High saturation"},Sharpness:{0:"Normal",1:"Soft",2:"Hard"},GPSLatitudeRef:{N:"North latitude",S:"South latitude"},GPSLongitudeRef:{E:"East longitude",W:"West longitude"}};function p(u,C){var w=q.SHORT(u),z,F,G,B,A,v,x,D,E=[],y={};for(z=0;z<w;z++){x=v=u+12*z+2;G=C[q.SHORT(x)];if(G===e){continue}B=q.SHORT(x+=2);A=q.LONG(x+=2);x+=4;E=[];switch(B){case 1:case 7:if(A>4){x=q.LONG(x)+o.tiffHeader}for(F=0;F<A;F++){E[F]=q.BYTE(x+F)}break;case 2:if(A>4){x=q.LONG(x)+o.tiffHeader}y[G]=q.STRING(x,A-1);continue;case 3:if(A>2){x=q.LONG(x)+o.tiffHeader}for(F=0;F<A;F++){E[F]=q.SHORT(x+F*2)}break;case 4:if(A>1){x=q.LONG(x)+o.tiffHeader}for(F=0;F<A;F++){E[F]=q.LONG(x+F*4)}break;case 5:x=q.LONG(x)+o.tiffHeader;for(F=0;F<A;F++){E[F]=q.LONG(x+F*4)/q.LONG(x+F*4+4)}break;case 9:x=q.LONG(x)+o.tiffHeader;for(F=0;F<A;F++){E[F]=q.SLONG(x+F*4)}break;case 10:x=q.LONG(x)+o.tiffHeader;for(F=0;F<A;F++){E[F]=q.SLONG(x+F*4)/q.SLONG(x+F*4+4)}break;default:continue}D=(A==1?E[0]:E);if(t.hasOwnProperty(G)&&typeof D!="object"){y[G]=t[G][D]}else{y[G]=D}}return y}function s(){var v=e,u=o.tiffHeader;q.II(q.SHORT(u)==18761);if(q.SHORT(u+=2)!==42){return false}o.IFD0=o.tiffHeader+q.LONG(u+=2);v=p(o.IFD0,n.tiff);o.exifIFD=("ExifIFDPointer" in v?o.tiffHeader+v.ExifIFDPointer:e);o.gpsIFD=("GPSInfoIFDPointer" in v?o.tiffHeader+v.GPSInfoIFDPointer:e);return true}function r(w,u,z){var B,y,x,A=0;if(typeof(u)==="string"){var v=n[w.toLowerCase()];for(hex in v){if(v[hex]===u){u=hex;break}}}B=o[w.toLowerCase()+"IFD"];y=q.SHORT(B);for(i=0;i<y;i++){x=B+12*i+2;if(q.SHORT(x)==u){A=x+8;break}}if(!A){return false}q.LONG(A,z);return true}return{init:function(u){o={tiffHeader:10};if(u===e||!u.length){return false}q.init(u);if(q.SHORT(0)===65505&&q.STRING(4,5).toUpperCase()==="EXIF\0"){return s()}return false},EXIF:function(){var v;v=p(o.exifIFD,n.exif);if(v.ExifVersion&&j.typeOf(v.ExifVersion)==="array"){for(var w=0,u="";w<v.ExifVersion.length;w++){u+=String.fromCharCode(v.ExifVersion[w])}v.ExifVersion=u}return v},GPS:function(){var u;u=p(o.gpsIFD,n.gps);if(u.GPSVersionID){u.GPSVersionID=u.GPSVersionID.join(".")}return u},setExif:function(u,v){if(u!=="PixelXDimension"&&u!=="PixelYDimension"){return false}return r("exif",u,v)},getBinary:function(){return q.SEGMENT()}}}})(window,document,plupload);
(function(f,b,d,e){var a={},g={};function c(){var h;try{h=navigator.plugins["Shockwave Flash"];h=h.description}catch(j){try{h=new ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version")}catch(i){h="0.0"}}h=h.match(/\d+/g);return parseFloat(h[0]+"."+h[1])}d.flash={trigger:function(j,h,i){setTimeout(function(){var m=a[j],l,k;if(m){m.trigger("Flash:"+h,i)}},0)}};d.runtimes.Flash=d.addRuntime("flash",{getFeatures:function(){return{jpgresize:true,pngresize:true,maxWidth:8091,maxHeight:8091,chunks:true,progress:true,multipart:true,multi_selection:true}},init:function(m,o){var k,l,h=0,i=b.body;if(c()<10){o({success:false});return}g[m.id]=false;a[m.id]=m;k=b.getElementById(m.settings.browse_button);l=b.createElement("div");l.id=m.id+"_flash_container";d.extend(l.style,{position:"absolute",top:"0px",background:m.settings.shim_bgcolor||"transparent",zIndex:99999,width:"100%",height:"100%"});l.className="plupload flash";if(m.settings.container){i=b.getElementById(m.settings.container);if(d.getStyle(i,"position")==="static"){i.style.position="relative"}}i.appendChild(l);(function(){var p,q;p='<object id="'+m.id+'_flash" type="application/x-shockwave-flash" data="'+m.settings.flash_swf_url+'" ';if(d.ua.ie){p+='classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" '}p+='width="100%" height="100%" style="outline:0"><param name="movie" value="'+m.settings.flash_swf_url+'" /><param name="flashvars" value="id='+escape(m.id)+'" /><param name="wmode" value="transparent" /><param name="allowscriptaccess" value="always" /></object>';if(d.ua.ie){q=b.createElement("div");l.appendChild(q);q.outerHTML=p;q=null}else{l.innerHTML=p}}());function n(){return b.getElementById(m.id+"_flash")}function j(){if(h++>5000){o({success:false});return}if(g[m.id]===false){setTimeout(j,1)}}j();k=l=null;m.bind("Destroy",function(p){var q;d.removeAllEvents(b.body,p.id);delete g[p.id];delete a[p.id];q=b.getElementById(p.id+"_flash_container");if(q){i.removeChild(q)}});m.bind("Flash:Init",function(){var r={},q;try{n().setFileFilters(m.settings.filters,m.settings.multi_selection)}catch(p){o({success:false});return}if(g[m.id]){return}g[m.id]=true;m.bind("UploadFile",function(s,u){var v=s.settings,t=m.settings.resize||{};n().uploadFile(r[u.id],v.url,{name:u.target_name||u.name,mime:d.mimeTypes[u.name.replace(/^.+\.([^.]+)/,"$1").toLowerCase()]||"application/octet-stream",chunk_size:v.chunk_size,width:t.width,height:t.height,quality:t.quality,multipart:v.multipart,multipart_params:v.multipart_params||{},file_data_name:v.file_data_name,format:/\.(jpg|jpeg)$/i.test(u.name)?"jpg":"png",headers:v.headers,urlstream_upload:v.urlstream_upload})});m.bind("CancelUpload",function(){n().cancelUpload()});m.bind("Flash:UploadProcess",function(t,s){var u=t.getFile(r[s.id]);if(u.status!=d.FAILED){u.loaded=s.loaded;u.size=s.size;t.trigger("UploadProgress",u)}});m.bind("Flash:UploadChunkComplete",function(s,u){var v,t=s.getFile(r[u.id]);v={chunk:u.chunk,chunks:u.chunks,response:u.text};s.trigger("ChunkUploaded",t,v);if(t.status!==d.FAILED&&s.state!==d.STOPPED){n().uploadNextChunk()}if(u.chunk==u.chunks-1){t.status=d.DONE;s.trigger("FileUploaded",t,{response:u.text})}});m.bind("Flash:SelectFiles",function(s,v){var u,t,w=[],x;for(t=0;t<v.length;t++){u=v[t];x=d.guid();r[x]=u.id;r[u.id]=x;w.push(new d.File(x,u.name,u.size))}if(w.length){m.trigger("FilesAdded",w)}});m.bind("Flash:SecurityError",function(s,t){m.trigger("Error",{code:d.SECURITY_ERROR,message:d.translate("Security error."),details:t.message,file:m.getFile(r[t.id])})});m.bind("Flash:GenericError",function(s,t){m.trigger("Error",{code:d.GENERIC_ERROR,message:d.translate("Generic error."),details:t.message,file:m.getFile(r[t.id])})});m.bind("Flash:IOError",function(s,t){m.trigger("Error",{code:d.IO_ERROR,message:d.translate("IO error."),details:t.message,file:m.getFile(r[t.id])})});m.bind("Flash:ImageError",function(s,t){m.trigger("Error",{code:parseInt(t.code,10),message:d.translate("Image error."),file:m.getFile(r[t.id])})});m.bind("Flash:StageEvent:rollOver",function(s){var t,u;t=b.getElementById(m.settings.browse_button);u=s.settings.browse_button_hover;if(t&&u){d.addClass(t,u)}});m.bind("Flash:StageEvent:rollOut",function(s){var t,u;t=b.getElementById(m.settings.browse_button);u=s.settings.browse_button_hover;if(t&&u){d.removeClass(t,u)}});m.bind("Flash:StageEvent:mouseDown",function(s){var t,u;t=b.getElementById(m.settings.browse_button);u=s.settings.browse_button_active;if(t&&u){d.addClass(t,u);d.addEvent(b.body,"mouseup",function(){d.removeClass(t,u)},s.id)}});m.bind("Flash:StageEvent:mouseUp",function(s){var t,u;t=b.getElementById(m.settings.browse_button);u=s.settings.browse_button_active;if(t&&u){d.removeClass(t,u)}});m.bind("Flash:ExifData",function(s,t){m.trigger("ExifData",m.getFile(r[t.id]),t.data)});m.bind("Flash:GpsData",function(s,t){m.trigger("GpsData",m.getFile(r[t.id]),t.data)});m.bind("QueueChanged",function(s){m.refresh()});m.bind("FilesRemoved",function(s,u){var t;for(t=0;t<u.length;t++){n().removeFile(r[u[t].id])}});m.bind("StateChanged",function(s){m.refresh()});m.bind("Refresh",function(s){var t,u,v;n().setFileFilters(m.settings.filters,m.settings.multi_selection);t=b.getElementById(s.settings.browse_button);if(t){u=d.getPos(t,b.getElementById(s.settings.container));v=d.getSize(t);d.extend(b.getElementById(s.id+"_flash_container").style,{top:u.y+"px",left:u.x+"px",width:v.w+"px",height:v.h+"px"})}});m.bind("DisableBrowse",function(s,t){n().disableBrowse(t)});o({success:true})})}})})(window,document,plupload);
/*
	Paginator 3000
	- idea by ecto (ecto.ru)
	- coded by karaboz (karaboz.ru)

	How to implement:
	<div class="paginator" id="paginator_example"></div>
	<script type="text/javascript">
		paginator_example = new Paginator('paginator_example', 2048, 10, 1, 'http://www.yourwebsite.com/pages/');
	</script>

	Be sure that width of your paginator does not change after page is loaded
	If it happens you must call Paginator.resizePaginator(paginator_example) function to redraw paginator

*/

/*
	Paginator class
		paginatorHolderId - id of the html element where paginator will be placed as innerHTML (String): required
		pagesTotal - number of pages (Number, required)
		pagesSpan - number of pages which are visible at once (Number, required) 
		pageCurrent - the number of current page (Number, required)
		baseUrl - the url of the website (String)
			if baseUrl is 'http://www.yourwebsite.com/pages/' the links on the pages will be:
			http://www.yourwebsite.com/pages/1, http://www.yourwebsite.com/pages/2,	etc
*/
var Paginator = function(paginatorHolderId, pagesTotal, pagesSpan, pageCurrent, baseUrl, maxPages, controls, ajax, query){
	if(!document.getElementById(paginatorHolderId) || !pagesTotal || !pagesSpan) return false;

	this.inputData = {
		paginatorHolderId: paginatorHolderId,
		pagesTotal: pagesTotal,
		pagesSpan: pagesSpan < pagesTotal ? pagesSpan : pagesTotal,
		pageCurrent: pageCurrent,
		baseUrl: baseUrl ? baseUrl : '/pages/',
		maxPages : null || maxPages,
		prevControl: controls && controls.prev ? controls.prev : '',
		nextControl: controls && controls.next ? controls.next : '',
		ajax: ajax,
		query: query
	};

	this.html = {
		holder: null,

		table: null,
		trPages: null, 
		trScrollBar: null,
		tdsPages: null,

		scrollBar: null,
		scrollThumb: null,
			
		pageCurrentMark: null
	};


	this.prepareHtml();

	this.initScrollThumb();
	this.initPageCurrentMark();
	this.initEvents();

	this.scrollToPageCurrent();
};

/*
	Set all .html properties (links to dom objects)
*/
Paginator.prototype.prepareHtml = function(){

	this.html.holder = document.getElementById(this.inputData.paginatorHolderId);
	this.html.holder.innerHTML = this.makePagesTableHtml();

	this.html.table = this.html.holder.getElementsByTagName('table')[0];

	var trPages = this.html.table.getElementsByTagName('tr')[0]; 
	this.html.tdsPages = trPages.getElementsByTagName('td');

	this.html.scrollBar = $(this.html.table).getElement('.scroll_bar');
	this.html.scrollThumb = $(this.html.table).getElement('.scroll_thumb');
	this.html.pageCurrentMark = $(this.html.table).getElement('.current_page_mark');

	// hide scrollThumb if there is no scroll (we see all pages at once)
	if(this.inputData.pagesSpan == this.inputData.pagesTotal){
		$(this.html.holder).addClass('fullsize');
	}
	if (this.inputData.pageCurrent == 1) {
		$(this.html.holder).addClass('paginator_first_page');
	}
};

/*
	Make html for pages (table) 
*/
Paginator.prototype.makePagesTableHtml = function(){
	var tdWidth = (100 / this.inputData.pagesSpan) + '%';
	var tableWidth = this.inputData.pagesSpan * 10;
	$$('.paginator_go_to_pages').set('styles', {
		'width' : tableWidth + '%'
	});
	$(this.html.holder).set('styles', {
		'width' : tableWidth + '%'
	});
	var html = '' +
	'<table style="width:100%;">' +
		'<tr>' 
			for (var i=1; i<=this.inputData.pagesSpan; i++){
				html += '<td width="' + tdWidth + '"></td>';
			}
			html += '' + 
		'</tr>' +
		'<tr>' +
			'<td colspan="' + this.inputData.pagesSpan + '">' +
				'<div class="scroll_bar">' + 
					'<div class="scroll_trough"></div>' + 
					'<div class="scroll_thumb">' + 
						'<div class="scroll_knob"></div>' + 
					'</div>' + 
					'<div class="current_page_mark"></div>' + 
				'</div>' +
			'</td>' +
		'</tr>' +
	'</table>';

	return html;
};

/*
	Set all needed properties for scrollThumb and it's width
*/
Paginator.prototype.initScrollThumb = function(){
	this.html.scrollThumb.widthMin = '8'; // minimum width of the scrollThumb (px)
	this.html.scrollThumb.widthPercent = this.inputData.pagesSpan/this.inputData.pagesTotal * 100;

	this.html.scrollThumb.xPosPageCurrent = (this.inputData.pageCurrent - Math.round(this.inputData.pagesSpan/2))/this.inputData.pagesTotal * this.html.table.offsetWidth;
	this.html.scrollThumb.xPos = this.html.scrollThumb.xPosPageCurrent;

	this.html.scrollThumb.xPosMin = 0;
	this.html.scrollThumb.xPosMax;

	this.html.scrollThumb.widthActual;

	this.setScrollThumbWidth();
	
};

Paginator.prototype.setScrollThumbWidth = function(){
	// Try to set width in percents
	this.html.scrollThumb.style.width = this.html.scrollThumb.widthPercent + "%";

	// Fix the actual width in px
	this.html.scrollThumb.widthActual = this.html.scrollThumb.offsetWidth;

	// If actual width less then minimum which we set
	if(this.html.scrollThumb.widthActual < this.html.scrollThumb.widthMin){
		this.html.scrollThumb.style.width = this.html.scrollThumb.widthMin + 'px';
	}

	this.html.scrollThumb.xPosMax = this.html.table.offsetWidth - this.html.scrollThumb.widthActual;
};

Paginator.prototype.moveScrollThumb = function(){
	this.html.scrollThumb.style.left = this.html.scrollThumb.xPos + "px";
};


/*
	Set all needed properties for pageCurrentMark, it's width and move it
*/
Paginator.prototype.initPageCurrentMark = function(){
	this.html.pageCurrentMark.widthMin = '3';
	this.html.pageCurrentMark.widthPercent = 100 / this.inputData.pagesTotal;
	this.html.pageCurrentMark.widthActual;

	this.setPageCurrentPointWidth();
	this.movePageCurrentPoint();
};

Paginator.prototype.setPageCurrentPointWidth = function(){
	// Try to set width in percents
	this.html.pageCurrentMark.style.width = this.html.pageCurrentMark.widthPercent + '%';

	// Fix the actual width in px
	this.html.pageCurrentMark.widthActual = this.html.pageCurrentMark.offsetWidth;

	// If actual width less then minimum which we set
	if(this.html.pageCurrentMark.widthActual < this.html.pageCurrentMark.widthMin){
		this.html.pageCurrentMark.style.width = this.html.pageCurrentMark.widthMin + 'px';
	}
};

Paginator.prototype.movePageCurrentPoint = function(){
	var pageCurrent = this.inputData.pageCurrent > this.inputData.pagesTotal ? this.inputData.pagesTotal : this.inputData.pageCurrent;
	if(this.html.pageCurrentMark.widthActual < this.html.pageCurrentMark.offsetWidth){
		this.html.pageCurrentMark.style.left = (pageCurrent - 1)/this.inputData.pagesTotal * this.html.table.offsetWidth - this.html.pageCurrentMark.offsetWidth/2 + "px";
	} else {
		this.html.pageCurrentMark.style.left = (pageCurrent - 1)/this.inputData.pagesTotal * this.html.table.offsetWidth + "px";
	}
};



/*
	Drag, click and resize events
*/
Paginator.prototype.initEvents = function(){
	var _this = this;

	this.html.scrollThumb.onmousedown = function(e){
		if (!e) var e = window.event;
		e.cancelBubble = true;
		if (e.stopPropagation) e.stopPropagation();

		var dx = _this.getMousePosition(e).x - this.xPos;
		document.onmousemove = function(e){
			if (!e) var e = window.event;
			_this.html.scrollThumb.xPos = _this.getMousePosition(e).x - dx;

			// the first: draw pages, the second: move scrollThumb (it was logically but ie sucks!)
			_this.moveScrollThumb();
			_this.drawPages();
			
			
		}
		document.onmouseup = function(){
			document.onmousemove = null;
			_this.enableSelection();
		}
		_this.disableSelection();
	}

	this.html.scrollBar.onmousedown = function(e){
		if (!e) var e = window.event;
		if($(_this.paginatorBox).hasClass('fullsize')) return;
		
		_this.html.scrollThumb.xPos = _this.getMousePosition(e).x - _this.getPageX(_this.html.scrollBar) - _this.html.scrollThumb.offsetWidth/2;
		
		_this.moveScrollThumb();
		_this.drawPages();
		
		
	}

	// Comment the row beneath if you set paginator width fixed
	$(window).addEvent('resize', function(){Paginator.resizePaginator(_this)});
};

/*
	Redraw current span of pages
*/
Paginator.prototype.drawPages = function(){
	var percentFromLeft = this.html.scrollThumb.xPos/(this.html.table.offsetWidth);
	var cellFirstValue = Math.round(percentFromLeft * this.inputData.pagesTotal);
	
	var html = "";
	// drawing pages control the position of the scrollThumb on the edges!
	if(cellFirstValue < 1){
		cellFirstValue = 1;
		this.html.scrollThumb.xPos = 0;
		this.moveScrollThumb();
	} else if(cellFirstValue >= this.inputData.pagesTotal - this.inputData.pagesSpan) {
		cellFirstValue = this.inputData.pagesTotal - this.inputData.pagesSpan + 1;
		this.html.scrollThumb.xPos = this.html.table.offsetWidth - this.html.scrollThumb.offsetWidth;
		this.moveScrollThumb();
	}

	

	for(var i=0; i<this.html.tdsPages.length; i++){
		var cellCurrentValue = cellFirstValue + i;
		if (cellCurrentValue == this.inputData.pageCurrent){
			html = "<span>" + "<strong><em>" + cellCurrentValue + "</em></strong>" + "</span>";
		} else {
			if (this.inputData.maxPages && cellCurrentValue > this.inputData.maxPages) {
				var 
				html = "<span>" + "<a href='/archive'><em>архив</em></a>" + "</span>";
			} else {
				var query = this.inputData.query ? ('/?' + this.inputData.query) : '';
				html = "<span>" + "<a href='" + this.inputData.baseUrl + cellCurrentValue + query + "' " + (this.inputData.ajax ? "onclick='URIHandler.navigateToPage(this); scroll(0, $$(\".b-user_block\")[0].offsetTop); return false;'" : "") + "><em>" + cellCurrentValue + "</em></a>" + "</span>";
			}
		}
		this.html.tdsPages[i].innerHTML = html;
	}
};

/*
	Scroll to current page
*/
Paginator.prototype.scrollToPageCurrent = function(){
	this.html.scrollThumb.xPosPageCurrent = (this.inputData.pageCurrent - Math.round(this.inputData.pagesSpan/2))/this.inputData.pagesTotal * this.html.table.offsetWidth;
	this.html.scrollThumb.xPos = this.html.scrollThumb.xPosPageCurrent;
	
	this.moveScrollThumb();
	this.drawPages();
	
};



Paginator.prototype.disableSelection = function(){
	document.onselectstart = function(){
		return false;
	}
	this.html.scrollThumb.focus();	
};

Paginator.prototype.enableSelection = function(){
	document.onselectstart = function(){
		return true;
	}
};

Paginator.prototype.getPageX = function ( oElement ) {
	var iPosX = oElement.offsetLeft;
	while ( oElement.offsetParent != null ) {
		oElement = oElement.offsetParent;
		iPosX += oElement.offsetLeft;
		if (oElement.tagName == 'BODY') break;
	}
	return iPosX;
};

Paginator.prototype.getMousePosition = function (e) {
	if (e.pageX || e.pageY){
		var posX = e.pageX;
		var posY = e.pageY;
	}else if (e.clientX || e.clientY) 	{
		var posX = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
		var posY = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
	}
	return {x:posX, y:posY}	
};

Paginator.prototype.redraw = function (paginatorObj){
	this.prepareHtml();

	this.initScrollThumb();
	this.initPageCurrentMark();
	this.initEvents();

	this.scrollToPageCurrent();
	this.updateControls();
};

Paginator.prototype.updateControls = function (){
	if (this.inputData.nextControl) {
		if (this.inputData.pageCurrent == this.inputData.maxPages) {
			this.inputData.nextControl.href = '/archive';
		} else {
			if (this.inputData.pageCurrent == this.inputData.pagesTotal) {
				this.inputData.nextControl.addClass('hidden');
			} else {
				this.inputData.nextControl.href = this.inputData.baseUrl + (this.inputData.pageCurrent + 1);
			}
		}
	}
	if (this.inputData.prevControl) {
		this.inputData.prevControl.href = this.inputData.baseUrl + (this.inputData.pageCurrent - 1);
	}

	if (this.inputData.pageCurrent > 1) {
		this.inputData.prevControl.removeClass('hidden');
		$(this.html.holder).removeClass('paginator_first_page');
	}
};

/*
	Function is used when paginator was resized (window.onresize fires it automatically)
	Use it when you change paginator with DHTML
	Do not use it if you set fixed width of paginator
*/
Paginator.resizePaginator = function (paginatorObj){

	paginatorObj.setPageCurrentPointWidth();
	paginatorObj.movePageCurrentPoint();

	paginatorObj.setScrollThumbWidth();
	paginatorObj.scrollToPageCurrent();
};

/*
---
name: Locale.ru-RU.DatePicker
description: Russian Language File for DatePicker
authors: https://github.com/rwz
requires: [More/Locale]
provides: Locale.ru-RU.DatePicker
...
*/


Locale.define('ru-RU', 'DatePicker', {
	select_a_time: 'Выберите время',
	use_mouse_wheel: 'Используйте колесо мышки для быстрой смены значения',
	time_confirm_button: 'OK'
});

/*
---
name: Picker
description: Creates a Picker, which can be used for anything
authors: Arian Stolwijk
requires: [Core/Element.Dimensions, Core/Fx.Tween, Core/Fx.Transitions]
provides: Picker
...
*/


var Picker = new Class({

	Implements: [Options, Events],

	options: {/*
		onShow: function(){},
		onOpen: function(){},
		onHide: function(){},
		onClose: function(){},*/

		pickerClass: 'datepicker',
		inject: null,
		animationDuration: 400,
		useFadeInOut: true,
		positionOffset: {x: 0, y: 0},
		pickerPosition: 'bottom',
		draggable: true,
		showOnInit: true,
		columns: 1,
		footer: false
	},

	initialize: function(options){
		this.setOptions(options);
		this.constructPicker();
		if (this.options.showOnInit) this.show();
	},

	constructPicker: function(){
		var options = this.options;

		var picker = this.picker = new Element('div', {
			'class': options.pickerClass,
			styles: {
				left: 0,
				top: 0,
				display: 'none',
				opacity: 0
			}
		}).inject(options.inject || document.body);
		picker.addClass('column_' + options.columns);

		if (options.useFadeInOut){
			picker.set('tween', {
				duration: options.animationDuration,
				link: 'cancel'
			});
		}

		// Build the header
		var header = this.header = new Element('div.header').inject(picker);

		var title = this.title = new Element('div.title').inject(header);
		var titleID = this.titleID = 'pickertitle-' + String.uniqueID();
		this.titleText = new Element('div', {
			'role': 'heading',
			'class': 'titleText',
			'id': titleID,
			'aria-live': 'assertive',
			'aria-atomic': 'true'
		}).inject(title);

		this.closeButton = new Element('div.closeButton[text=x][role=button]')
			.addEvent('click', this.close.pass(false, this))
			.inject(header);

		// Build the body of the picker
		var body = this.body = new Element('div.body').inject(picker);

		if (options.footer){
			this.footer = new Element('div.footer').inject(picker);
			picker.addClass('footer');
		}

		// oldContents and newContents are used to slide from the old content to a new one.
		var slider = this.slider = new Element('div.slider', {
			styles: {
				position: 'absolute',
				top: 0,
				left: 0
			}
		}).set('tween', {
			duration: options.animationDuration,
			transition: Fx.Transitions.Quad.easeInOut
		}).inject(body);

		this.newContents = new Element('div', {
			styles: {
				position: 'absolute',
				top: 0,
				left: 0
			}
		}).inject(slider);

		this.oldContents = new Element('div', {
			styles: {
				position: 'absolute',
				top: 0
			}
		}).inject(slider);

		this.originalColumns = options.columns;
		this.setColumns(options.columns);

		// IFrameShim for select fields in IE
		var shim = this.shim = window['IframeShim'] ? new IframeShim(picker) : null;

		// Dragging
		if (options.draggable && typeOf(picker.makeDraggable) == 'function'){
			this.dragger = picker.makeDraggable(shim ? {
				onDrag: shim.position.bind(shim)
			} : null);
			picker.setStyle('cursor', 'move');
		}
	},

	open: function(noFx){
		if (this.opened == true) return this;
		this.opened = true;
		var self = this,
			picker = this.picker.setStyle('display', 'block').set('aria-hidden', 'false')
		if (this.shim) this.shim.show();
		this.fireEvent('open');
		if (this.options.useFadeInOut && !noFx){
			picker.get('tween').start('opacity', 1).chain(function(){
				self.fireEvent('show');
				this.callChain();
			});
		} else {
			picker.setStyle('opacity', 1);
			this.fireEvent('show');
		}
		return this;
	},

	show: function(){
		return this.open(true);
	},

	close: function(noFx){
		if (this.opened == false) return this;
		this.opened = false;
		this.fireEvent('close');
		var self = this, picker = this.picker, hide = function(){
			picker.setStyle('display', 'none').set('aria-hidden', 'true');
			if (self.shim) self.shim.hide();
			self.fireEvent('hide');
		};
		if (this.options.useFadeInOut && !noFx){
			picker.get('tween').start('opacity', 0).chain(hide);
		} else {
			picker.setStyle('opacity', 0);
			hide();
		}
		return this;
	},

	hide: function(){
		return this.close(true);
	},

	toggle: function(){
		return this[this.opened == true ? 'close' : 'open']();
	},

	destroy: function(){
		this.picker.destroy();
		if (this.shim) this.shim.destroy();
	},

	position: function(x, y){
		var offset = this.options.positionOffset,
			scroll = document.getScroll(),
			size = document.getSize(),
			pickersize = this.picker.getSize();

		if (typeOf(x) == 'element'){
			var element = x,
				where = y || this.options.pickerPosition;

			var elementCoords = element.getCoordinates();

			x = (where == 'left') ? elementCoords.left - pickersize.x
				: (where == 'bottom' || where == 'top') ? elementCoords.left
				: elementCoords.right
			y = (where == 'bottom') ? elementCoords.bottom
				: (where == 'top') ? elementCoords.top - pickersize.y
				: elementCoords.top;
		}

		x += offset.x * ((where && where == 'left') ? -1 : 1);
		y += offset.y * ((where && where == 'top') ? -1: 1);

		if ((x + pickersize.x) > (size.x + scroll.x)) x = (size.x + scroll.x) - pickersize.x;
		if ((y + pickersize.y) > (size.y + scroll.y)) y = (size.y + scroll.y) - pickersize.y;
		if (x < 0) x = 0;
		if (y < 0) y = 0;

		this.picker.setStyles({
			left: x,
			top: y
		});
		if (this.shim) this.shim.position();
		return this;
	},

	setBodySize: function(){
		var bodysize = this.bodysize = this.body.getSize();

		this.slider.setStyles({
			width: 2 * bodysize.x,
			height: bodysize.y
		});
		this.oldContents.setStyles({
			left: bodysize.x,
			width: bodysize.x,
			height: bodysize.y
		});
		this.newContents.setStyles({
			width: bodysize.x,
			height: bodysize.y
		});
	},

	setColumnContent: function(column, content){
		var columnElement = this.columns[column];
		if (!columnElement) return this;

		var type = typeOf(content);
		if (['string', 'number'].contains(type)) columnElement.set('text', content);
		else columnElement.empty().adopt(content);

		return this;
	},

	setColumnsContent: function(content, fx){
		var old = this.columns;
		this.columns = this.newColumns;
		this.newColumns = old;

		content.forEach(function(_content, i){
			this.setColumnContent(i, _content);
		}, this);
		return this.setContent(null, fx);
	},

	setColumns: function(columns){
		var _columns = this.columns = new Elements, _newColumns = this.newColumns = new Elements;
		for (var i = columns; i--;){
			_columns.push(new Element('div.column').addClass('column_' + (columns - i)));
			_newColumns.push(new Element('div.column').addClass('column_' + (columns - i)));
		}

		var oldClass = 'column_' + this.options.columns, newClass = 'column_' + columns;
		this.picker.removeClass(oldClass).addClass(newClass);

		this.options.columns = columns;
		return this;
	},

	setContent: function(content, fx){
		if (content) return this.setColumnsContent([content], fx);

		// swap contents so we can fill the newContents again and animate
		var old = this.oldContents;
		this.oldContents = this.newContents;
		this.newContents = old;
		this.newContents.empty();

		this.newContents.adopt(this.columns);

		this.setBodySize();

		if (fx){
			this.fx(fx);
		} else {
			this.slider.setStyle('left', 0);
			this.oldContents.setStyles({left: 0, opacity: 0});
			this.newContents.setStyles({left: 0, opacity: 1});
		}
		return this;
	},

	fx: function(fx){
		var oldContents = this.oldContents,
			newContents = this.newContents,
			slider = this.slider,
			bodysize = this.bodysize;
		if (fx == 'right'){
			oldContents.setStyles({left: 0, opacity: 1});
			newContents.setStyles({left: bodysize.x, opacity: 1});
			slider.setStyle('left', 0).tween('left', 0, -bodysize.x);
		} else if (fx == 'left'){
			oldContents.setStyles({left: bodysize.x, opacity: 1});
			newContents.setStyles({left: 0, opacity: 1});
			slider.setStyle('left', -bodysize.x).tween('left', -bodysize.x, 0);
		} else if (fx == 'fade'){
			slider.setStyle('left', 0);
			oldContents.setStyle('left', 0).set('tween', {
				duration: this.options.animationDuration / 2
			}).tween('opacity', 1, 0).get('tween').chain(function(){
				oldContents.setStyle('left', bodysize.x);
			});
			newContents.setStyles({opacity: 0, left: 0}).set('tween', {
				duration: this.options.animationDuration
			}).tween('opacity', 0, 1);
		}
	},

	toElement: function(){
		return this.picker;
	},

	setTitle: function(content, fn){
		if (!fn) fn = Function.from;
		this.titleText.empty().adopt(
			Array.from(content).map(function(item, i){
				return typeOf(item) == 'element'
					? item
					: new Element('div.column', {text: fn(item, this.options)}).addClass('column_' + (i + 1));
			}, this)
		);
		return this;
	},

	setTitleEvent: function(fn){
		this.titleText.removeEvents('click');
		if (fn) this.titleText.addEvent('click', fn);
		this.titleText.setStyle('cursor', fn ? 'pointer' : '');
		return this;
	}

});

/*
---
name: Picker.Attach
description: Adds attach and detach methods to the Picker, to attach it to element events
authors: Arian Stolwijk
requires: [Picker, Core/Element.Event]
provides: Picker.Attach
...
*/


Picker.Attach = new Class({

	Extends: Picker,

	options: {/*
		onAttached: function(event){},

		toggleElements: null, // deprecated
		toggle: null, // When set it deactivate toggling by clicking on the input */
		togglesOnly: true, // set to false to always make calendar popup on input element, if true, it depends on the toggles elements set.
		showOnInit: false, // overrides the Picker option
		blockKeydown: true
	},

	initialize: function(attachTo, options){
		this.parent(options);

		this.attachedEvents = [];
		this.attachedElements = [];
		this.toggles = [];
		this.inputs = [];

		var documentEvent = function(event){
			if (this.attachedElements.contains(event.target)) return;
			this.close();
		}.bind(this);
		var document = this.picker.getDocument().addEvent('click', documentEvent);

		var preventPickerClick = function(event){
			event.stopPropagation();
			return false;
		};
		this.picker.addEvent('click', preventPickerClick);

		// Support for deprecated toggleElements
		if (this.options.toggleElements) this.options.toggle = document.getElements(this.options.toggleElements);

		this.attach(attachTo, this.options.toggle);
	},

	attach: function(attachTo, toggle){
		if (typeOf(attachTo) == 'string') attachTo = document.id(attachTo);
		if (typeOf(toggle) == 'string') toggle = document.id(toggle);

		var elements = Array.from(attachTo),
			toggles = Array.from(toggle),
			allElements = [].append(elements).combine(toggles),
			self = this;

		var closeEvent = function(event){
			var stopInput = self.options.blockKeydown
					&& event.type == 'keydown'
					&& !(['tab', 'esc'].contains(event.key)),
				isCloseKey = event.type == 'keydown'
					&& (['tab', 'esc'].contains(event.key)),
				isA = event.target.get('tag') == 'a';

			if (stopInput || isA) event.preventDefault();
			if (isCloseKey || isA) self.close();
		};

		var getOpenEvent = function(element){
			return function(event){
				var tag = event.target.get('tag');
				if (tag == 'input' && event.type == 'click' && !element.match(':focus') || (self.opened && self.input == element)) return;
				if (tag == 'a') event.stop();
				self.position(element);
				self.open();
				self.fireEvent('attached', [event, element]);
			};
		};

		var getToggleEvent = function(open, close){
			return function(event){
				if (self.opened) close(event);
				else open(event);
			};
		};

		allElements.each(function(element){

			// The events are already attached!
			if (self.attachedElements.contains(element)) return;

			var events = {},
				tag = element.get('tag'),
				openEvent = getOpenEvent(element),
				// closeEvent does not have a depency on element
				toggleEvent = getToggleEvent(openEvent, closeEvent);

			if (tag == 'input'){
				// Fix in order to use togglers only
				if (!self.options.togglesOnly || !toggles.length){
					events = {
						focus: openEvent,
						click: openEvent,
						keydown: closeEvent
					};
				}
				self.inputs.push(element);
			} else {
				if (toggles.contains(element)){
					self.toggles.push(element);
					events.click = toggleEvent
				} else {
					events.click = openEvent;
				}
			}
			element.addEvents(events);
			self.attachedElements.push(element);
			self.attachedEvents.push(events);
		});
		return this;
	},

	detach: function(attachTo, toggle){
		if (typeOf(attachTo) == 'string') attachTo = document.id(attachTo);
		if (typeOf(toggle) == 'string') toggle = document.id(toggle);

		var elements = Array.from(attachTo),
			toggles = Array.from(toggle),
			allElements = [].append(elements).combine(toggles),
			self = this;

		if (!allElements.length) allElements = self.attachedElements;

		allElements.each(function(element){
			var i = self.attachedElements.indexOf(element);
			if (i < 0) return;

			var events = self.attachedEvents[i];
			element.removeEvents(events);
			delete self.attachedEvents[i];
			delete self.attachedElements[i];

			var toggleIndex = self.toggles.indexOf(element);
			if (toggleIndex != -1) delete self.toggles[toggleIndex];

			var inputIndex = self.inputs.indexOf(element);
			if (toggleIndex != -1) delete self.inputs[inputIndex];
		});
		return this;
	},

	destroy: function(){
		this.detach();
		return this.parent();
	}

});

/*
---
name: Picker.Date
description: Creates a DatePicker, can be used for picking years/months/days and time, or all of them
authors: Arian Stolwijk
requires: [Picker, Picker.Attach, Locale.en-US.DatePicker, More/Locale, More/Date]
provides: Picker.Date
...
*/


(function(){

this.DatePicker = Picker.Date = new Class({

	Extends: Picker.Attach,

	options: {/*
		onSelect: function(date){},

		minDate: new Date('3/4/2010'), // Date object or a string
		maxDate: new Date('3/4/2011'), // same as minDate
		availableDates: {}, //
		invertAvailable: false,

		format: null,*/

		timePicker: false,
		timePickerOnly: false, // deprecated, use onlyView = 'time'
		timeWheelStep: 1, // 10,15,20,30

		yearPicker: true,
		yearsPerPage: 20,

		startDay: 1, // Sunday (0) through Saturday (6) - be aware that this may affect your layout, since the days on the right might have a different margin
		rtl: false,

		startView: 'days', // allowed values: {time, days, months, years}
		openLastView: false,
		pickOnly: false, // 'years', 'months', 'days', 'time'
		canAlwaysGoUp: ['months', 'days'],
		updateAll : false, //whether or not to update all inputs when selecting a date

		weeknumbers: false,

		// if you like to use your own translations
		months_abbr: null,
		days_abbr: null,
		years_title: function(date, options){
			var year = date.get('year');
			return year + '-' + (year + options.yearsPerPage - 1);
		},
		months_title: function(date, options){
			return date.get('year');
		},
		days_title: function(date, options){
			return date.format('%b %Y');
		},
		time_title: function(date, options){
			return (options.pickOnly == 'time') ? Locale.get('DatePicker.select_a_time') : date.format('%d %B, %Y');
		}
	},

	initialize: function(attachTo, options){
		this.parent(attachTo, options);

		this.setOptions(options);
		options = this.options;

		// If we only want to use one picker / backwards compatibility
		['year', 'month', 'day', 'time'].some(function(what){
			if (options[what + 'PickerOnly']){
				options.pickOnly = what;
				return true;
			}
			return false;
		});
		if (options.pickOnly){
			options[options.pickOnly + 'Picker'] = true;
			options.startView = options.pickOnly;
		}

		// backward compatibility for startView
		var newViews = ['days', 'months', 'years'];
		['month', 'year', 'decades'].some(function(what, i){
			return (options.startView == what) && (options.startView = newViews[i]);
		});

		options.canAlwaysGoUp = options.canAlwaysGoUp ? Array.from(options.canAlwaysGoUp) : [];

		// Set the min and max dates as Date objects
		if (options.minDate){
			if (!(options.minDate instanceof Date)) options.minDate = Date.parse(options.minDate);
			options.minDate.clearTime();
		}
		if (options.maxDate){
			if (!(options.maxDate instanceof Date)) options.maxDate = Date.parse(options.maxDate);
			options.maxDate.clearTime();
		}

		if (!options.format){
			options.format = (options.pickOnly != 'time') ? Locale.get('Date.shortDate') : '';
			if (options.timePicker) options.format = (options.format) + (options.format ? ' ' : '') + Locale.get('Date.shortTime');
		}

		// Some link or input has fired an event!
		this.addEvent('attached', function(event, element){

			// This is where we store the selected date
			if (!this.currentView || !options.openLastView) this.currentView = options.startView;

			this.date = limitDate(new Date(), options.minDate, options.maxDate);
			var tag = element.get('tag'), input;
			if (tag == 'input') input = element;
			else {
				var index = this.toggles.indexOf(element);
				if (this.inputs[index]) input = this.inputs[index];
			}
			this.getInputDate(input);
			this.input = input;
			this.setColumns(this.originalColumns);
		}.bind(this), true);

	},

	getInputDate: function(input){
		this.date = new Date();
		if (!input) return;
		var date = Date.parse(input.get('value'));
		if (date == null || !date.isValid()){
			var storeDate = input.retrieve('datepicker:value');
			if (storeDate) date = Date.parse(storeDate);
		}
		if (date != null && date.isValid()) this.date = date;
	},

	// Control the previous and next elements

	constructPicker: function(){
		this.parent();

		if (!this.options.rtl){
			this.previous = new Element('div.previous[html=&#171;]').inject(this.header);
			this.next = new Element('div.next[html=&#187;]').inject(this.header);
		} else {
			this.next = new Element('div.previous[html=&#171;]').inject(this.header);
			this.previous = new Element('div.next[html=&#187;]').inject(this.header);
		}
	},

	hidePrevious: function(_next, _show){
		this[_next ? 'next' : 'previous'].setStyle('display', _show ? 'block' : 'none');
		return this;
	},

	showPrevious: function(_next){
		return this.hidePrevious(_next, true);
	},

	setPreviousEvent: function(fn, _next){
		this[_next ? 'next' : 'previous'].removeEvents('click');
		if (fn) this[_next ? 'next' : 'previous'].addEvent('click', fn);
		return this;
	},

	hideNext: function(){
		return this.hidePrevious(true);
	},

	showNext: function(){
		return this.showPrevious(true);
	},

	setNextEvent: function(fn){
		return this.setPreviousEvent(fn, true);
	},

	setColumns: function(columns, view, date, viewFx){
		var ret = this.parent(columns), method;

		if ((view || this.currentView)
			&& (method = 'render' + (view || this.currentView).capitalize())
			&& this[method]
		) this[method](date || this.date.clone(), viewFx);

		return ret;
	},

	// Render the Pickers

	renderYears: function(date, fx){
		var options = this.options, pages = options.columns, perPage = options.yearsPerPage,
			_columns = [], _dates = [];
		this.dateElements = [];

		// start neatly at interval (eg. 1980 instead of 1987)
		date = date.clone().decrement('year', date.get('year') % perPage);

		var iterateDate = date.clone().decrement('year', Math.floor((pages - 1) / 2) * perPage);

		for (var i = pages; i--;){
			var _date = iterateDate.clone();
			_dates.push(_date);
			_columns.push(renderers.years(
				timesSelectors.years(options, _date.clone()),
				options,
				this.date.clone(),
				this.dateElements,
				function(date){
					if (options.pickOnly == 'years') this.select(date);
					else this.renderMonths(date, 'fade');
					this.date = date;
				}.bind(this)
			));
			iterateDate.increment('year', perPage);
		}

		this.setColumnsContent(_columns, fx);
		this.setTitle(_dates, options.years_title);

		// Set limits
		var limitLeft = (options.minDate && date.get('year') <= options.minDate.get('year')),
			limitRight = (options.maxDate && (date.get('year') + options.yearsPerPage) >= options.maxDate.get('year'));
		this[(limitLeft ? 'hide' : 'show') + 'Previous']();
		this[(limitRight ? 'hide' : 'show') + 'Next']();

		this.setPreviousEvent(function(){
			this.renderYears(date.decrement('year', perPage), 'left');
		}.bind(this));

		this.setNextEvent(function(){
			this.renderYears(date.increment('year', perPage), 'right');
		}.bind(this));

		// We can't go up!
		this.setTitleEvent(null);

		this.currentView = 'years';
	},

	renderMonths: function(date, fx){
		var options = this.options, years = options.columns, _columns = [], _dates = [],
			iterateDate = date.clone().decrement('year', Math.floor((years - 1) / 2));
		this.dateElements = [];

		for (var i = years; i--;){
			var _date = iterateDate.clone();
			_dates.push(_date);
			_columns.push(renderers.months(
				timesSelectors.months(options, _date.clone()),
				options,
				this.date.clone(),
				this.dateElements,
				function(date){
					if (options.pickOnly == 'months') this.select(date);
					else this.renderDays(date, 'fade');
					this.date = date;
				}.bind(this)
			));
			iterateDate.increment('year', 1);
		}

		this.setColumnsContent(_columns, fx);
		this.setTitle(_dates, options.months_title);

		// Set limits
		var year = date.get('year'),
			limitLeft = (options.minDate && year <= options.minDate.get('year')),
			limitRight = (options.maxDate && year >= options.maxDate.get('year'));
		this[(limitLeft ? 'hide' : 'show') + 'Previous']();
		this[(limitRight ? 'hide' : 'show') + 'Next']();

		this.setPreviousEvent(function(){
			this.renderMonths(date.decrement('year', years), 'left');
		}.bind(this));

		this.setNextEvent(function(){
			this.renderMonths(date.increment('year', years), 'right');
		}.bind(this));

		var canGoUp = options.yearPicker && (options.pickOnly != 'months' || options.canAlwaysGoUp.contains('months'));
		var titleEvent = (canGoUp) ? function(){
			this.renderYears(date, 'fade');
		}.bind(this) : null;
		this.setTitleEvent(titleEvent);

		this.currentView = 'months';
	},

	renderDays: function(date, fx){
		var options = this.options, months = options.columns, _columns = [], _dates = [],
			iterateDate = date.clone().decrement('month', Math.floor((months - 1) / 2));
		this.dateElements = [];

		for (var i = months; i--;){
			_date = iterateDate.clone();
			_dates.push(_date);
			_columns.push(renderers.days(
				timesSelectors.days(options, _date.clone()),
				options,
				this.date.clone(),
				this.dateElements,
				function(date){
					if (options.pickOnly == 'days' || !options.timePicker) this.select(date)
					else this.renderTime(date, 'fade');
					this.date = date;
				}.bind(this)
			));
			iterateDate.increment('month', 1);
		}

		this.setColumnsContent(_columns, fx);
		this.setTitle(_dates, options.days_title);

		var yearmonth = date.format('%Y%m').toInt(),
			limitLeft = (options.minDate && yearmonth <= options.minDate.format('%Y%m')),
			limitRight = (options.maxDate && yearmonth >= options.maxDate.format('%Y%m'));
		this[(limitLeft ? 'hide' : 'show') + 'Previous']();
		this[(limitRight ? 'hide' : 'show') + 'Next']();

		this.setPreviousEvent(function(){
			this.renderDays(date.decrement('month', months), 'left');
		}.bind(this));

		this.setNextEvent(function(){
			this.renderDays(date.increment('month', months), 'right');
		}.bind(this));

		var canGoUp = options.pickOnly != 'days' || options.canAlwaysGoUp.contains('days');
		var titleEvent = (canGoUp) ? function(){
			this.renderMonths(date, 'fade');
		}.bind(this) : null;
		this.setTitleEvent(titleEvent);

		this.currentView = 'days';
	},

	renderTime: function(date, fx){
		var options = this.options;
		this.setTitle(date, options.time_title);

		var originalColumns = this.originalColumns = options.columns;
		this.currentView = null; // otherwise you'd get crazy recursion
		if (originalColumns != 1) this.setColumns(1);

		this.setContent(renderers.time(
			options,
			date.clone(),
			function(date){
				this.select(date);
			}.bind(this)
		), fx);

		// Hide « and » buttons
		this.hidePrevious()
			.hideNext()
			.setPreviousEvent(null)
			.setNextEvent(null);

		var canGoUp = options.pickOnly != 'time' || options.canAlwaysGoUp.contains('time');
		var titleEvent = (canGoUp) ? function(){
			this.setColumns(originalColumns, 'days', date, 'fade');
		}.bind(this) : null;
		this.setTitleEvent(titleEvent);

		this.currentView = 'time';
	},

	select: function(date, all){
		this.date = date;
		var formatted = date.format(this.options.format),
			time = date.strftime(),
			inputs = (!this.options.updateAll && !all && this.input) ? [this.input] : this.inputs;

		inputs.each(function(input){
			input.set('value', formatted).store('datepicker:value', time).fireEvent('change');
		}, this);

		this.fireEvent('select', [date].concat(inputs));
		this.close();
		return this;
	}

});


// Renderers only output elements and calculate the limits!

var timesSelectors = {

	years: function(options, date){
		var times = [];
		for (var i = 0; i < options.yearsPerPage; i++){
			times.push(+date);
			date.increment('year', 1);
		}
		return times;
	},

	months: function(options, date){
		var times = [];
		date.set('month', 0);
		for (var i = 0; i <= 11; i++){
			times.push(+date);
			date.increment('month', 1);
		}
		return times;
	},

	days: function(options, date){
		var times = [];
		date.set('date', 1);
		while (date.get('day') != options.startDay) date.set('date', date.get('date') - 1);
		for (var i = 0; i < 42; i++){
			times.push(+date);
			date.increment('day',  1);
		}
		return times;
	}

};

var renderers = {

	years: function(years, options, currentDate, dateElements, fn){
		var container = new Element('table.years'),
			today     = new Date(),
			rows      = [],
			element, classes;

		years.each(function(_year, i){
			var date = new Date(_year), year = date.get('year');
			if (i % 4 === 0) {
				rows.push(new Element('tr'));
				rows[rows.length - 1].inject(container)
			}
			classes = '.year.year' + i;
			if (year == today.get('year')) classes += '.today';
			if (year == currentDate.get('year')) classes += '.selected';
			element = new Element('td' + classes, {text: year}).inject(rows[rows.length - 1]);

			dateElements.push({element: element, time: _year});

			if (isUnavailable('year', date, options)) element.addClass('unavailable');
			else element.addEvent('click', fn.pass(date));
		});

		return container;
	},

	months: function(months, options, currentDate, dateElements, fn){
		var today        = new Date(),
			month        = today.get('month'),
			thisyear     = today.get('year'),
			selectedyear = currentDate.get('year'),
			container    = new Element('table.months'),
			monthsAbbr   = options.months_abbr || Locale.get('Date.months_abbr'),
			rows         = [],
			element, classes;

		months.each(function(_month, i){
			var date = new Date(_month), year = date.get('year');
			if (i % 3 === 0) {
				rows.push(new Element('tr'));
				rows[rows.length - 1].inject(container)
			}

			classes = '.month.month' + (i + 1);
			if (i == month && year == thisyear) classes += '.today';
			if (i == currentDate.get('month') && year == selectedyear) classes += '.selected';
			element = new Element('td' + classes, {text: monthsAbbr[i]}).inject(rows[rows.length - 1]);
			dateElements.push({element: element, time: _month});

			if (isUnavailable('month', date, options)) element.addClass('unavailable');
			else element.addEvent('click', fn.pass(date));
		});

		return container;
	},

	days: function(days, options, currentDate, dateElements, fn){
		var month = new Date(days[14]).get('month'),
			todayString = new Date().toDateString(),
			currentString = currentDate.toDateString(),
			weeknumbers = options.weeknumbers,
			container = new Element('table.days' + (weeknumbers ? '.weeknumbers' : ''), {
				role: 'grid', 'aria-labelledby': this.titleID
			}),
			header = new Element('thead').inject(container),
			body = new Element('tbody').inject(container),
			titles = new Element('tr.titles').inject(header),
			localeDaysShort = options.days_abbr || Locale.get('Date.days_abbr'),
			day, classes, element, weekcontainer, dateString,
			where = options.rtl ? 'top' : 'bottom';

		if (weeknumbers) new Element('th.title.day.weeknumber', {
			text: Locale.get('DatePicker.week')
		}).inject(titles);

		for (day = options.startDay; day < (options.startDay + 7); day++){
			new Element('th.title.day.day' + (day % 7), {
				text: localeDaysShort[(day % 7)],
				role: 'columnheader'
			}).inject(titles, where);
		}

		days.each(function(_date, i){
			var date = new Date(_date);

			if (i % 7 == 0){
				weekcontainer = new Element('tr.week.week' + (Math.floor(i / 7))).set('role', 'row').inject(body);
				if (weeknumbers) new Element('th.day.weeknumber', {text: date.get('week'), scope: 'row', role: 'rowheader'}).inject(weekcontainer);
			}

			dateString = date.toDateString();
			classes = '.day.day' + date.get('day');
			if (dateString == todayString) classes += '.today';
			if (date.get('month') != month) classes += '.otherMonth';
			element = new Element('td' + classes, {text: date.getDate(), role: 'gridcell'}).inject(weekcontainer, where);

			if (dateString == currentString) element.addClass('selected').set('aria-selected', 'true');
			else element.set('aria-selected', 'false');

			dateElements.push({element: element, time: _date});

			if (isUnavailable('date', date, options)) element.addClass('unavailable');
			else element.addEvent('click', fn.pass(date.clone()));
		});

		return container;
	},

	time: function(options, date, fn){
		var container = new Element('div.time'),
			// make sure that the minutes are timeWheelStep * k
			initMinutes = (date.get('minutes') / options.timeWheelStep).round() * options.timeWheelStep

		if (initMinutes >= 60) initMinutes = 0;
		date.set('minutes', initMinutes);

		var hoursInput = new Element('input.hour[type=text]', {
			title: Locale.get('DatePicker.use_mouse_wheel'),
			value: date.format('%H'),
			events: {
				click: function(event){
					event.target.focus();
					event.stop();
				},
				mousewheel: function(event){
					event.stop();
					hoursInput.focus();
					var value = hoursInput.get('value').toInt();
					value = (event.wheel > 0) ? ((value < 23) ? value + 1 : 0)
						: ((value > 0) ? value - 1 : 23)
					date.set('hours', value);
					hoursInput.set('value', date.format('%H'));
				}.bind(this)
			},
			maxlength: 2
		}).inject(container);

		new Element('div.separator[text=:]').inject(container);

		var minutesInput = new Element('input.minutes[type=text]', {
			title: Locale.get('DatePicker.use_mouse_wheel'),
			value: date.format('%M'),
			events: {
				click: function(event){
					event.target.focus();
					event.stop();
				},
				mousewheel: function(event){
					event.stop();
					minutesInput.focus();
					var value = minutesInput.get('value').toInt();
					value = (event.wheel > 0) ? ((value < 59) ? (value + options.timeWheelStep) : 0)
						: ((value > 0) ? (value - options.timeWheelStep) : (60 - options.timeWheelStep));
					if (value >= 60) value = 0;
					date.set('minutes', value);
					minutesInput.set('value', date.format('%M'));
				}.bind(this)
			},
			maxlength: 2
		}).inject(container);


		new Element('input.ok', {
			'type': 'submit',
			value: Locale.get('DatePicker.time_confirm_button'),
			events: {click: function(event){
				event.stop();
				date.set({
					hours: hoursInput.get('value').toInt(),
					minutes: minutesInput.get('value').toInt()
				});
				fn(date.clone());
			}}
		}).inject(container);

		return container;
	}

};


Picker.Date.defineRenderer = function(name, fn){
	renderers[name] = fn;
	return this;
};

Picker.Date.getRenderer = function(name) {
	return renderers[name];
}

var limitDate = function(date, min, max){
	if (min && date < min) return min;
	if (max && date > max) return max;
	return date;
};

var isUnavailable = function(type, date, options){
	var minDate = options.minDate,
		maxDate = options.maxDate,
		availableDates = options.availableDates,
		year, month, day, ms;

	if (!minDate && !maxDate && !availableDates) return false;
	date.clearTime();

	if (type == 'year'){
		year = date.get('year');
		return (
			(minDate && year < minDate.get('year')) ||
			(maxDate && year > maxDate.get('year')) ||
			(
				(availableDates != null &&  !options.invertAvailable) && (
					availableDates[year] == null ||
					Object.getLength(availableDates[year]) == 0 ||
					Object.getLength(
						Object.filter(availableDates[year], function(days){
							return (days.length > 0);
						})
					) == 0
				)
			)
		);
	}

	if (type == 'month'){
		year = date.get('year');
		month = date.get('month') + 1;
		ms = date.format('%Y%m').toInt();
		return (
			(minDate && ms < minDate.format('%Y%m').toInt()) ||
			(maxDate && ms > maxDate.format('%Y%m').toInt()) ||
			(
				(availableDates != null && !options.invertAvailable) && (
					availableDates[year] == null ||
					availableDates[year][month] == null ||
					availableDates[year][month].length == 0
				)
			)
		);
	}

	// type == 'date'
	year = date.get('year');
	month = date.get('month') + 1;
	day = date.get('date');

	var dateAllow = (minDate && date < minDate) || (maxDate && date > maxDate);
	if (availableDates != null){
		dateAllow = dateAllow
			|| availableDates[year] == null
			|| availableDates[year][month] == null
			|| !availableDates[year][month].contains(day);
		if (options.invertAvailable) dateAllow = !dateAllow;
	}

	return dateAllow;
};

})();

/*
  Keypress version 1.0.9 (c) 2013 David Mauro.
  Licensed under the Apache License, Version 2.0
  http://www.apache.org/licenses/LICENSE-2.0
*/
(function(){var w,x,j,S,T,U,V,y,z,A,H,I,J,B,m,W,X,Y,Z,K,$,aa,ba,ca,da,L,ea,r,s,g,M,t,fa,N,u,O,C,v,P,D,h,Q,E,p,F,R,G,ga,i=[].indexOf||function(a){for(var c=0,b=this.length;c<b;c++)if(c in this&&this[c]===a)return c;return-1},ha={}.hasOwnProperty;h=[];p=[];F=null;g=[];j=[];C=!1;N="ctrl";O="meta alt option ctrl shift cmd".split(" ");G=[];z={keys:[],count:0};B=function(a,c){var b;if(a.filter)return a.filter(c);var d,e,f;f=[];d=0;for(e=a.length;d<e;d++)b=a[d],c(b)&&f.push(b);return f};t=function(){return console.log.apply(console,
arguments)};A=function(a,c){var b,d,e;if(a.length!==c.length)return!1;d=0;for(e=a.length;d<e;d++)if(b=a[d],!(0<=i.call(c,b)))return!1;return!0};H=function(a,c){var b,d,e;if(a.length!==c.length)return!1;b=d=0;for(e=a.length;0<=e?d<e:d>e;b=0<=e?++d:--d)if(a[b]!==c[b])return!1;return!0};ba=function(a,c){var b,d,e;d=0;for(e=a.length;d<e;d++)if(b=a[d],0>i.call(c,b))return!1;return!0};ca=function(a,c){var b,d,e,f;e=d=0;for(f=a.length;e<f;e++)if(b=a[e],b=c.indexOf(b),b>=d)d=b;else return!1;return!0};v=function(a,
c){if((c||keypress.suppress_event_defaults)&&!keypress.force_event_defaults)if(a.preventDefault?a.preventDefault():a.returnValue=!1,a.stopPropagation)return a.stopPropagation()};U=function(a){if(a.prevent_repeat)return!1;if("function"===typeof a.on_keydown)return!0};M=function(a){var c,b,d,e;e=a.keys;b=0;for(d=e.length;b<d;b++)if(a=e[b],0<=i.call(g,a)){c=!0;break}return c};m=function(a,c,b){"function"===typeof c["on_"+a]&&v(b,!1===c["on_"+a].call(c["this"],b,c.count));"release"===a&&(c.count=0);if("keyup"===
a)return c.keyup_fired=!0};fa=function(a,c){var b,d,e;d=0;for(e=h.length;d<e;d++)b=h[d],(b.is_ordered&&H(a,b.keys)||!b.is_ordered&&A(a,b.keys))&&c(b)};W=function(a,c){var b,d,e;d=0;for(e=h.length;d<e;d++)b=h[d],(b.is_ordered&&ca(b.keys,a)||!b.is_ordered&&ba(b.keys,a))&&c(b)};y=function(a){return 0<=i.call(g,"cmd")&&0>i.call(a,"cmd")?!1:!0};X=function(a){var c,b;c=[];b=B(g,function(b){return b!==a});b.push(a);fa(b,function(a){if(y(a.keys))return c.push(a)});W(b,function(a){if(!(0<=i.call(c,a))&&!a.is_solitary&&
y(a.keys))return c.push(a)});return c};Z=function(a){var c,b,d,e;b=[];d=0;for(e=h.length;d<e;d++)c=h[d],c.is_sequence||0<=i.call(c.keys,a)&&y(c.keys)&&b.push(c);return b};T=function(a){var c,b,d,e,f,q,g,h,l,k,o;q=!1;f=!0;d=!1;if(0<=i.call(j,a))return!0;if(j.length){e=g=0;for(k=j.length;0<=k?g<k:g>k;e=0<=k?++g:--g)if((c=j[e])&&c.is_exclusive&&a.is_exclusive){c=c.keys;if(!q){h=0;for(l=c.length;h<l;h++)if(b=c[h],q=!0,0>i.call(a.keys,b)){q=!1;break}}if(f&&!q){o=a.keys;h=0;for(l=o.length;h<l;h++)if(b=
o[h],f=!1,0>i.call(c,b)){f=!0;break}}q&&(d?E(j.splice(e,1)):(E(j.splice(e,1,a)),d=!0),f=!1)}}f&&j.unshift(a);return q||f};Q=function(a){var c,b,d,e;b=d=0;for(e=j.length;0<=e?d<e:d>e;b=0<=e?++d:--d)if(c=j[b],c===a){E(j.splice(b,1));break}};E=function(a){if(a)return a.count=null,a.keyup_fired=null};S=function(a,c){var b,d,e,f;p.push(a);d=Y();if(d.length){e=0;for(f=d.length;e<f;e++)b=d[e],v(c,b.prevent_default);F&&clearTimeout(F);-1<keypress.sequence_delay&&(F=setTimeout(function(){return p=[]},keypress.sequence_delay))}else p=
[]};Y=function(){var a,c,b,d,e,f,g,n,j,l,k;d=[];f=0;for(j=h.length;f<j;f++){a=h[f];c=g=1;for(l=p.length;1<=l?g<=l:g>=l;c=1<=l?++g:--g)if(e=p.slice(-c),a.is_sequence){if(0>i.call(a.keys,"shift")&&(e=B(e,function(a){return"shift"!==a}),!e.length))continue;c=n=0;for(k=e.length;0<=k?n<k:n>k;c=0<=k?++n:--n)if(a.keys[c]===e[c])b=!0;else{b=!1;break}b&&d.push(a)}}return d};K=function(a){var c,b,d,e,f,g,j,m,l,k,o;g=0;for(l=h.length;g<l;g++)if(c=h[g],c.is_sequence){b=j=1;for(k=p.length;1<=k?j<=k:j>=k;b=1<=
k?++j:--j)if(f=B(p,function(a){return 0<=i.call(c.keys,"shift")?!0:"shift"!==a}).slice(-b),c.keys.length===f.length){b=m=0;for(o=f.length;0<=o?m<o:m>o;b=0<=o?++m:--m)if(e=f[b],!(0>i.call(c.keys,"shift")&&"shift"===e)&&!("shift"===a&&0>i.call(c.keys,"shift")))if(c.keys[b]===e)d=!0;else{d=!1;break}}if(d)return c}return!1};J=function(a,c){var b;if(!c.shiftKey)return!1;b=s[a];return null!=b?b:!1};$=function(a,c,b){if(0>i.call(a.keys,c))return!1;v(b,a&&a.prevent_default);if(0<=i.call(g,c)&&!U(a))return!1;
c=T(a,c);a.keyup_fired=!1;a.is_counting&&"function"===typeof a.on_keydown&&(a.count+=1);if(c)return m("keydown",a,b)};da=function(a,c){var b,d,e,f;(d=J(a,c))&&(a=d);S(a,c);(d=K(a))&&m("keydown",d,c);for(b in u)d=u[b],c[d]&&(b===a||0<=i.call(g,b)||g.push(b));for(b in u)if(d=u[b],b!==a&&0<=i.call(g,b)&&!c[d]){d=e=0;for(f=g.length;0<=f?e<f:e>f;d=0<=f?++e:--e)g[d]===b&&g.splice(d,1)}d=X(a);e=0;for(f=d.length;e<f;e++)b=d[e],$(b,a,c);d=Z(a);if(d.length){e=0;for(f=d.length;e<f;e++)b=d[e],v(c,b.prevent_default)}0>
i.call(g,a)&&g.push(a)};aa=function(a,c,b){var d,e;e=M(a);if(!a.keyup_fired&&(d=g.slice(),d.push(b),!a.is_solitary||A(d,a.keys)))m("keyup",a,c),a.is_counting&&("function"===typeof a.on_keyup&&"function"!==typeof a.on_keydown)&&(a.count+=1);e||(m("release",a,c),Q(a))};L=function(a,c){var b,d,e,f,h,n;d=a;(e=J(a,c))&&(a=e);e=s[d];c.shiftKey?e&&0<=i.call(g,e)||(a=d):d&&0<=i.call(g,d)||(a=e);(f=K(a))&&m("keyup",f,c);if(0>i.call(g,a))return!1;f=h=0;for(n=g.length;0<=n?h<n:h>n;f=0<=n?++h:--h)if((b=g[f])===
a||b===e||b===d){g.splice(f,1);break}d=j.length;e=[];f=0;for(h=j.length;f<h;f++)b=j[f],0<=i.call(b.keys,a)&&e.push(b);f=0;for(h=e.length;f<h;f++)b=e[f],aa(b,c,a);if(1<d){d=0;for(f=j.length;d<f;d++)b=j[d],void 0===b||0<=i.call(e,b)||M(b)||Q(b)}};D=function(a,c){var b;if(C)g.length&&(g=[]);else if(c||g.length)if(b=I(a.keyCode))return c?da(b,a):L(b,a)};R=function(a){var c,b,d,e;e=[];c=b=0;for(d=h.length;0<=d?b<d:b>d;c=0<=d?++b:--b)if(a===h[c]){h.splice(c,1);break}else e.push(void 0);return e};ga=function(a){var c,
b,d,e,f;a.keys.length||t("You're trying to bind a combo with no keys.");b=e=0;for(f=a.keys.length;0<=f?e<f:e>f;b=0<=f?++e:--e)d=a.keys[b],(c=ea[d])&&(d=a.keys[b]=c),"meta"===d&&a.keys.splice(b,1,N),"cmd"===d&&t('Warning: use the "meta" key rather than "cmd" for Windows compatibility');f=a.keys;c=0;for(e=f.length;c<e;c++)if(d=f[c],0>i.call(G,d))return t('Do not recognize the key "'+d+'"'),!1;if(0<=i.call(a.keys,"meta")||0<=i.call(a.keys,"cmd")){c=a.keys.slice();e=0;for(f=O.length;e<f;e++)d=O[e],-1<
(b=c.indexOf(d))&&c.splice(b,1);1<c.length&&t("META and CMD key combos cannot have more than 1 non-modifier keys",a,c)}return!0};V=function(a){var c;if(0<=i.call(g,"cmd")&&"cmd"!==(c=I(a.keyCode))&&"shift"!==c&&"alt"!==c&&"caps"!==c&&"tab"!==c)return D(a,!1)};window.keypress={};keypress.force_event_defaults=!1;keypress.suppress_event_defaults=!1;keypress.sequence_delay=800;keypress.get_registered_combos=function(){return h};keypress.reset=function(){h=[]};keypress.combo=function(a,c,b){null==b&&(b=
!1);return keypress.register_combo({keys:a,on_keydown:c,prevent_default:b})};keypress.counting_combo=function(a,c,b){null==b&&(b=!1);return keypress.register_combo({keys:a,is_counting:!0,is_ordered:!0,on_keydown:c,prevent_default:b})};keypress.sequence_combo=function(a,c,b){null==b&&(b=!1);return keypress.register_combo({keys:a,on_keydown:c,is_sequence:!0,prevent_default:b})};keypress.register_combo=function(a){var c,b;"string"===typeof a.keys&&(a.keys=a.keys.split(" "));for(c in z)ha.call(z,c)&&
(b=z[c],null==a[c]&&(a[c]=b));if(ga(a))return h.push(a),!0};keypress.register_many=function(a){var c,b,d,e;e=[];b=0;for(d=a.length;b<d;b++)c=a[b],e.push(keypress.register_combo(c));return e};keypress.unregister_combo=function(a){var c,b,d,e;if(!a)return!1;if(a.keys)return R(a);e=[];b=0;for(d=h.length;b<d;b++)if(c=h[b])"string"===typeof a&&(a=a.split(" ")),!c.is_ordered&&A(a,c.keys)||c.is_ordered&&H(a,c.keys)?e.push(R(c)):e.push(void 0);return e};keypress.unregister_many=function(a){var c,b,d,e;e=
[];b=0;for(d=a.length;b<d;b++)c=a[b],e.push(keypress.unregister_combo(c));return e};keypress.listen=function(){return C=!1};keypress.stop_listening=function(){return C=!0};I=function(a){return r[a]};u={cmd:"metaKey",ctrl:"ctrlKey",shift:"shiftKey",alt:"altKey"};ea={escape:"esc",control:"ctrl",command:"cmd","break":"pause",windows:"cmd",option:"alt",caps_lock:"caps",apostrophe:"'",semicolon:";",tilde:"~",accent:"`",scroll_lock:"scroll",num_lock:"num"};s={"/":"?",".":">",",":"<","'":'"',";":":","[":"{",
"]":"}","\\":"|","`":"~","=":"+","-":"_",1:"!",2:"@",3:"#",4:"$",5:"%",6:"^",7:"&",8:"*",9:"(","0":")"};r={"0":"\\",8:"backspace",9:"tab",12:"num",13:"enter",16:"shift",17:"ctrl",18:"alt",19:"pause",20:"caps",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",44:"print",45:"insert",46:"delete",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",
77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",91:"cmd",92:"cmd",93:"cmd",96:"num_0",97:"num_1",98:"num_2",99:"num_3",100:"num_4",101:"num_5",102:"num_6",103:"num_7",104:"num_8",105:"num_9",106:"num_multiply",107:"num_add",108:"num_enter",109:"num_subtract",110:"num_decimal",111:"num_divide",124:"print",144:"num",145:"scroll",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'",223:"`",224:"cmd",57392:"ctrl",63289:"num"};
for(x in r)w=r[x],G.push(w);for(x in s)w=s[x],G.push(w);-1!==navigator.userAgent.indexOf("Mac OS X")&&(N="cmd");-1!==navigator.userAgent.indexOf("Opera")&&(r["17"]="cmd");P=function(a){return(document.attachEvent?"complete"===document.readyState:"loading"!==document.readyState)?a():setTimeout(function(){return P(a)},9)};P(function(){var a;a=function(a,b,d){if(a.addEventListener)return a.addEventListener(b,d);if(a.attachEvent)return a.attachEvent("on"+b,d)};a(document.body,"keydown",function(a){a=
a||window.event;D(a,!0);return V(a)});a(document.body,"keyup",function(a){a=a||window.event;return D(a,!1)});return a(window,"blur",function(){var a,b,d;b=0;for(d=g.length;b<d;b++)a=g[b],L(a,{});g=[];return[]})})}).call(this);

/*
 *  Copyright 2012-2013 (c) Pierre Duquesne <stackp@online.fr>
 *  Licensed under the New BSD License.
 *  https://github.com/stackp/promisejs
 */
(function(a){function b(a,b){return function(){return a.apply(b,arguments);};}function c(){this._callbacks=[];}c.prototype.then=function(a,c){var d=b(a,c);if(this._isdone)d(this.error,this.result);else this._callbacks.push(d);};c.prototype.done=function(a,b){this._isdone=true;this.error=a;this.result=b;for(var c=0;c<this._callbacks.length;c++)this._callbacks[c](a,b);this._callbacks=[];};function d(a){var b=a.length;var d=0;var e=new c();var f=[];var g=[];function h(a){return function(c,h){d+=1;f[a]=c;g[a]=h;if(d===b)e.done(f,g);};}for(var i=0;i<b;i++)a[i]().then(h(i));return e;}function e(a,b,d){var f=new c();if(a.length===0)f.done(b,d);else a[0](b,d).then(function(b,c){a.splice(0,1);e(a,b,c).then(function(a,b){f.done(a,b);});});return f;}function f(a){var b="";if(typeof a==="string")b=a;else{var c=encodeURIComponent;for(var d in a)if(a.hasOwnProperty(d))b+='&'+c(d)+'='+c(a[d]);}return b;}function g(){var a;if(window.XMLHttpRequest)a=new XMLHttpRequest();else if(window.ActiveXObject)try{a=new ActiveXObject("Msxml2.XMLHTTP");}catch(b){a=new ActiveXObject("Microsoft.XMLHTTP");}return a;}function h(b,d,e,h){var i=new c();var j,k;e=e||{};h=h||{};try{j=g();}catch(l){i.done(-1,"");return i;}k=f(e);if(b==='GET'&&k){d+='?'+k;k=null;}j.open(b,d);j.setRequestHeader('Content-type','application/x-www-form-urlencoded');for(var m in h)if(h.hasOwnProperty(m))j.setRequestHeader(m,h[m]);function n(){j.abort();i.done(a.promise.ETIMEOUT,"");};var o=a.promise.ajaxTimeout;if(o)var p=setTimeout(n,o);j.onreadystatechange=function(){if(o)clearTimeout(p);if(j.readyState===4)if(j.status===200)i.done(null,j.responseText);else i.done(j.status,"");};j.send(k);return i;}function i(a){return function(b,c,d){return h(a,b,c,d);};}var j={Promise:c,join:d,chain:e,ajax:h,get:i('GET'),post:i('POST'),put:i('PUT'),del:i('DELETE'),ENOXHR:1,ETIMEOUT:2,ajaxTimeout:0};if(typeof define==='function'&&define.amd)define(function(){return j;});else a.promise=j;})(this);
/*! Browser bundle of nunjucks 2.2.0  */
var nunjucks=function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";var i=n(4),r=n(10),s=n(15),o=n(14),a=n(3);e.exports={},e.exports.Environment=r.Environment,e.exports.Template=r.Template,e.exports.Loader=s,e.exports.FileSystemLoader=o.FileSystemLoader,e.exports.PrecompiledLoader=o.PrecompiledLoader,e.exports.WebLoader=o.WebLoader,e.exports.compiler=n(1),e.exports.parser=n(6),e.exports.lexer=n(7),e.exports.runtime=n(9),e.exports.lib=i,e.exports.installJinjaCompat=n(18);var l;e.exports.configure=function(e,t){t=t||{},i.isObject(e)&&(t=e,e=null);var n;return o.FileSystemLoader?n=new o.FileSystemLoader(e,{watch:t.watch,noCache:t.noCache}):o.WebLoader&&(n=new o.WebLoader(e,{useCache:t.web&&t.web.useCache,async:t.web&&t.web.async})),l=new r.Environment(n,t),t&&t.express&&l.express(t.express),l},e.exports.compile=function(t,n,i,r){return l||e.exports.configure(),new e.exports.Template(t,n,i,r)},e.exports.render=function(t,n,i){return l||e.exports.configure(),l.render(t,n,i)},e.exports.renderString=function(t,n,i){return l||e.exports.configure(),l.renderString(t,n,i)},a&&(e.exports.precompile=a.precompile,e.exports.precompileString=a.precompileString)},function(e,t,n){"use strict";function i(e){return function(t,n){this.compile(t.left,n),this.emit(e),this.compile(t.right,n)}}var r=n(4),s=n(6),o=n(8),a=n(2),l=n(5),c=n(9).Frame,h={"==":"==","!=":"!=","<":"<",">":">","<=":"<=",">=":">="},u=l.extend({init:function(e,t){this.templateName=e,this.codebuf=[],this.lastId=0,this.buffer=null,this.bufferStack=[],this.scopeClosers="",this.inBlock=!1,this.throwOnUndefined=t},fail:function(e,t,n){throw void 0!==t&&(t+=1),void 0!==n&&(n+=1),new r.TemplateError(e,t,n)},pushBufferId:function(e){this.bufferStack.push(this.buffer),this.buffer=e,this.emit("var "+this.buffer+' = "";')},popBufferId:function(){this.buffer=this.bufferStack.pop()},emit:function(e){this.codebuf.push(e)},emitLine:function(e){this.emit(e+"\n")},emitLines:function(){r.each(r.toArray(arguments),function(e){this.emitLine(e)},this)},emitFuncBegin:function(e){this.buffer="output",this.scopeClosers="",this.emitLine("function "+e+"(env, context, frame, runtime, cb) {"),this.emitLine("var lineno = null;"),this.emitLine("var colno = null;"),this.emitLine("var "+this.buffer+' = "";'),this.emitLine("try {")},emitFuncEnd:function(e){e||this.emitLine("cb(null, "+this.buffer+");"),this.closeScopeLevels(),this.emitLine("} catch (e) {"),this.emitLine("  cb(runtime.handleError(e, lineno, colno));"),this.emitLine("}"),this.emitLine("}"),this.buffer=null},addScopeLevel:function(){this.scopeClosers+="})"},closeScopeLevels:function(){this.emitLine(this.scopeClosers+";"),this.scopeClosers=""},withScopedSyntax:function(e){var t=this.scopeClosers;this.scopeClosers="",e.call(this),this.closeScopeLevels(),this.scopeClosers=t},makeCallback:function(e){var t=this.tmpid();return"function("+t+(e?","+e:"")+") {\nif("+t+") { cb("+t+"); return; }"},tmpid:function(){return this.lastId++,"t_"+this.lastId},_templateName:function(){return null==this.templateName?"undefined":JSON.stringify(this.templateName)},_compileChildren:function(e,t){for(var n=e.children,i=0,r=n.length;r>i;i++)this.compile(n[i],t)},_compileAggregate:function(e,t,n,i){n&&this.emit(n);for(var r=0;r<e.children.length;r++)r>0&&this.emit(","),this.compile(e.children[r],t);i&&this.emit(i)},_compileExpression:function(e,t){this.assertType(e,a.Literal,a.Symbol,a.Group,a.Array,a.Dict,a.FunCall,a.Caller,a.Filter,a.LookupVal,a.Compare,a.InlineIf,a.In,a.And,a.Or,a.Not,a.Add,a.Concat,a.Sub,a.Mul,a.Div,a.FloorDiv,a.Mod,a.Pow,a.Neg,a.Pos,a.Compare,a.NodeList),this.compile(e,t)},assertType:function(e){for(var t=r.toArray(arguments).slice(1),n=!1,i=0;i<t.length;i++)e instanceof t[i]&&(n=!0);n||this.fail("assertType: invalid type: "+e.typename,e.lineno,e.colno)},compileCallExtension:function(e,t,n){var i=e.args,s=e.contentArgs,o="boolean"==typeof e.autoescape?e.autoescape:!0;if(n||this.emit(this.buffer+" += runtime.suppressValue("),this.emit('env.getExtension("'+e.extName+'")["'+e.prop+'"]('),this.emit("context"),(i||s)&&this.emit(","),i&&(i instanceof a.NodeList||this.fail("compileCallExtension: arguments must be a NodeList, use `parser.parseSignature`"),r.each(i.children,function(e,n){this._compileExpression(e,t),(n!==i.children.length-1||s.length)&&this.emit(",")},this)),s.length&&r.each(s,function(e,n){if(n>0&&this.emit(","),e){var i=this.tmpid();this.emitLine("function(cb) {"),this.emitLine("if(!cb) { cb = function(err) { if(err) { throw err; }}}"),this.pushBufferId(i),this.withScopedSyntax(function(){this.compile(e,t),this.emitLine("cb(null, "+i+");")}),this.popBufferId(),this.emitLine("return "+i+";"),this.emitLine("}")}else this.emit("null")},this),n){var l=this.tmpid();this.emitLine(", "+this.makeCallback(l)),this.emitLine(this.buffer+" += runtime.suppressValue("+l+", "+o+" && env.opts.autoescape);"),this.addScopeLevel()}else this.emit(")"),this.emit(", "+o+" && env.opts.autoescape);\n")},compileCallExtensionAsync:function(e,t){this.compileCallExtension(e,t,!0)},compileNodeList:function(e,t){this._compileChildren(e,t)},compileLiteral:function(e){if("string"==typeof e.value){var t=e.value.replace(/\\/g,"\\\\");t=t.replace(/"/g,'\\"'),t=t.replace(/\n/g,"\\n"),t=t.replace(/\r/g,"\\r"),t=t.replace(/\t/g,"\\t"),this.emit('"'+t+'"')}else null===e.value?this.emit("null"):this.emit(e.value.toString())},compileSymbol:function(e,t){var n,i=e.value;(n=t.lookup(i))?this.emit(n):this.emit('runtime.contextOrFrameLookup(context, frame, "'+i+'")')},compileGroup:function(e,t){this._compileAggregate(e,t,"(",")")},compileArray:function(e,t){this._compileAggregate(e,t,"[","]")},compileDict:function(e,t){this._compileAggregate(e,t,"{","}")},compilePair:function(e,t){var n=e.key,i=e.value;n instanceof a.Symbol?n=new a.Literal(n.lineno,n.colno,n.value):n instanceof a.Literal&&"string"==typeof n.value||this.fail("compilePair: Dict keys must be strings or names",n.lineno,n.colno),this.compile(n,t),this.emit(": "),this._compileExpression(i,t)},compileInlineIf:function(e,t){this.emit("("),this.compile(e.cond,t),this.emit("?"),this.compile(e.body,t),this.emit(":"),null!==e.else_?this.compile(e.else_,t):this.emit('""'),this.emit(")")},compileIn:function(e,t){this.emit("("),this.compile(e.right,t),this.emit(".indexOf("),this.compile(e.left,t),this.emit(") !== -1)")},compileOr:i(" || "),compileAnd:i(" && "),compileAdd:i(" + "),compileConcat:i(' + "" + '),compileSub:i(" - "),compileMul:i(" * "),compileDiv:i(" / "),compileMod:i(" % "),compileNot:function(e,t){this.emit("!"),this.compile(e.target,t)},compileFloorDiv:function(e,t){this.emit("Math.floor("),this.compile(e.left,t),this.emit(" / "),this.compile(e.right,t),this.emit(")")},compilePow:function(e,t){this.emit("Math.pow("),this.compile(e.left,t),this.emit(", "),this.compile(e.right,t),this.emit(")")},compileNeg:function(e,t){this.emit("-"),this.compile(e.target,t)},compilePos:function(e,t){this.emit("+"),this.compile(e.target,t)},compileCompare:function(e,t){this.compile(e.expr,t);for(var n=0;n<e.ops.length;n++){var i=e.ops[n];this.emit(" "+h[i.type]+" "),this.compile(i.expr,t)}},compileLookupVal:function(e,t){this.emit("runtime.memberLookup(("),this._compileExpression(e.target,t),this.emit("),"),this._compileExpression(e.val,t),this.emit(")")},_getNodeName:function(e){switch(e.typename){case"Symbol":return e.value;case"FunCall":return"the return value of ("+this._getNodeName(e.name)+")";case"LookupVal":return this._getNodeName(e.target)+'["'+this._getNodeName(e.val)+'"]';case"Literal":return e.value.toString().substr(0,10);default:return"--expression--"}},compileFunCall:function(e,t){this.emit("(lineno = "+e.lineno+", colno = "+e.colno+", "),this.emit("runtime.callWrap("),this._compileExpression(e.name,t),this.emit(', "'+this._getNodeName(e.name).replace(/"/g,'\\"')+'", context, '),this._compileAggregate(e.args,t,"[","])"),this.emit(")")},compileFilter:function(e,t){var n=e.name;this.assertType(n,a.Symbol),this.emit('env.getFilter("'+n.value+'").call(context, '),this._compileAggregate(e.args,t),this.emit(")")},compileFilterAsync:function(e,t){var n=e.name;this.assertType(n,a.Symbol);var i=e.symbol.value;t.set(i,i),this.emit('env.getFilter("'+n.value+'").call(context, '),this._compileAggregate(e.args,t),this.emitLine(", "+this.makeCallback(i)),this.addScopeLevel()},compileKeywordArgs:function(e,t){var n=[];r.each(e.children,function(e){n.push(e.key.value)}),this.emit("runtime.makeKeywordArgs("),this.compileDict(e,t),this.emit(")")},compileSet:function(e,t){var n=[];r.each(e.targets,function(e){var i=e.value,r=t.lookup(i);(null===r||void 0===r)&&(r=this.tmpid(),this.emitLine("var "+r+";")),n.push(r)},this),this.emit(n.join(" = ")+" = "),this._compileExpression(e.value,t),this.emitLine(";"),r.each(e.targets,function(e,t){var i=n[t],r=e.value;this.emitLine('frame.set("'+r+'", '+i+", true);"),this.emitLine("if(frame.topLevel) {"),this.emitLine('context.setVariable("'+r+'", '+i+");"),this.emitLine("}"),"_"!==r.charAt(0)&&(this.emitLine("if(frame.topLevel) {"),this.emitLine('context.addExport("'+r+'", '+i+");"),this.emitLine("}"))},this)},compileIf:function(e,t,n){this.emit("if("),this._compileExpression(e.cond,t),this.emitLine(") {"),this.withScopedSyntax(function(){this.compile(e.body,t),n&&this.emit("cb()")}),e.else_?(this.emitLine("}\nelse {"),this.withScopedSyntax(function(){this.compile(e.else_,t),n&&this.emit("cb()")})):n&&(this.emitLine("}\nelse {"),this.emit("cb()")),this.emitLine("}")},compileIfAsync:function(e,t){this.emit("(function(cb) {"),this.compileIf(e,t,!0),this.emit("})(function() {"),this.addScopeLevel()},emitLoopBindings:function(e,t,n,i){var r={index:n+" + 1",index0:n,revindex:i+" - "+n,revindex0:i+" - "+n+" - 1",first:n+" === 0",last:n+" === "+i+" - 1",length:i};for(var s in r)this.emitLine('frame.set("loop.'+s+'", '+r[s]+");")},compileFor:function(e,t){var n,i=this.tmpid(),r=this.tmpid(),s=this.tmpid();if(t=t.push(),this.emitLine("frame = frame.push();"),this.emit("var "+s+" = "),this._compileExpression(e.arr,t),this.emitLine(";"),this.emit("if("+s+") {"),e.name instanceof a.Array){this.emitLine("var "+i+";"),this.emitLine("if(runtime.isArray("+s+")) {"),this.emitLine("var "+r+" = "+s+".length;"),this.emitLine("for("+i+"=0; "+i+" < "+s+".length; "+i+"++) {");for(var o=0;o<e.name.children.length;o++){var l=this.tmpid();this.emitLine("var "+l+" = "+s+"["+i+"]["+o+"]"),this.emitLine('frame.set("'+e.name.children[o].value+'", '+s+"["+i+"]["+o+"]);"),t.set(e.name.children[o].value,l)}this.emitLoopBindings(e,s,i,r),this.withScopedSyntax(function(){this.compile(e.body,t)}),this.emitLine("}"),this.emitLine("} else {");var c=e.name.children[0],h=e.name.children[1],u=this.tmpid();n=this.tmpid(),t.set(c.value,u),t.set(h.value,n),this.emitLine(i+" = -1;"),this.emitLine("var "+r+" = runtime.keys("+s+").length;"),this.emitLine("for(var "+u+" in "+s+") {"),this.emitLine(i+"++;"),this.emitLine("var "+n+" = "+s+"["+u+"];"),this.emitLine('frame.set("'+c.value+'", '+u+");"),this.emitLine('frame.set("'+h.value+'", '+n+");"),this.emitLoopBindings(e,s,i,r),this.withScopedSyntax(function(){this.compile(e.body,t)}),this.emitLine("}"),this.emitLine("}")}else n=this.tmpid(),t.set(e.name.value,n),this.emitLine("var "+r+" = "+s+".length;"),this.emitLine("for(var "+i+"=0; "+i+" < "+s+".length; "+i+"++) {"),this.emitLine("var "+n+" = "+s+"["+i+"];"),this.emitLine('frame.set("'+e.name.value+'", '+n+");"),this.emitLoopBindings(e,s,i,r),this.withScopedSyntax(function(){this.compile(e.body,t)}),this.emitLine("}");this.emitLine("}"),e.else_&&(this.emitLine("if (!"+r+") {"),this.compile(e.else_,t),this.emitLine("}")),this.emitLine("frame = frame.pop();")},_compileAsyncLoop:function(e,t,n){var i=this.tmpid(),s=this.tmpid(),o=this.tmpid(),l=n?"asyncAll":"asyncEach";if(t=t.push(),this.emitLine("frame = frame.push();"),this.emit("var "+o+" = "),this._compileExpression(e.arr,t),this.emitLine(";"),e.name instanceof a.Array)this.emit("runtime."+l+"("+o+", "+e.name.children.length+", function("),r.each(e.name.children,function(e){this.emit(e.value+",")},this),this.emit(i+","+s+",next) {"),r.each(e.name.children,function(e){var n=e.value;t.set(n,n),this.emitLine('frame.set("'+n+'", '+n+");")},this);else{var c=e.name.value;this.emitLine("runtime."+l+"("+o+", 1, function("+c+", "+i+", "+s+",next) {"),this.emitLine('frame.set("'+c+'", '+c+");"),t.set(c,c)}this.emitLoopBindings(e,o,i,s),this.withScopedSyntax(function(){var r;n&&(r=this.tmpid(),this.pushBufferId(r)),this.compile(e.body,t),this.emitLine("next("+i+(r?","+r:"")+");"),n&&this.popBufferId()});var h=this.tmpid();this.emitLine("}, "+this.makeCallback(h)),this.addScopeLevel(),n&&this.emitLine(this.buffer+" += "+h+";"),e.else_&&(this.emitLine("if (!"+o+".length) {"),this.compile(e.else_,t),this.emitLine("}")),this.emitLine("frame = frame.pop();")},compileAsyncEach:function(e,t){this._compileAsyncLoop(e,t)},compileAsyncAll:function(e,t){this._compileAsyncLoop(e,t,!0)},_compileMacro:function(e,t){var n=[],i=null,s="macro_"+this.tmpid();r.each(e.args.children,function(t,r){r===e.args.children.length-1&&t instanceof a.Dict?i=t:(this.assertType(t,a.Symbol),n.push(t))},this);var o=r.map(n,function(e){return"l_"+e.value});o.push("kwargs");var l=r.map(n,function(e){return'"'+e.value+'"'}),c=r.map(i&&i.children||[],function(e){return'"'+e.key.value+'"'});t=t.push(),this.emitLines("var "+s+" = runtime.makeMacro(","["+l.join(", ")+"], ","["+c.join(", ")+"], ","function ("+o.join(", ")+") {","frame = frame.push();","kwargs = kwargs || {};",'if (kwargs.hasOwnProperty("caller")) {','frame.set("caller", kwargs.caller); }'),r.each(n,function(e){this.emitLine('frame.set("'+e.value+'", l_'+e.value+");"),t.set(e.value,"l_"+e.value)},this),i&&r.each(i.children,function(e){var n=e.key.value;this.emit('frame.set("'+n+'", kwargs.hasOwnProperty("'+n+'") ? kwargs["'+n+'"] : '),this._compileExpression(e.value,t),this.emitLine(");")},this);var h=this.tmpid();return this.pushBufferId(h),this.withScopedSyntax(function(){this.compile(e.body,t)}),t=t.pop(),this.emitLine("frame = frame.pop();"),this.emitLine("return new runtime.SafeString("+h+");"),this.emitLine("});"),this.popBufferId(),s},compileMacro:function(e,t){var n=this._compileMacro(e,t),i=e.name.value;t.set(i,n),t.parent?this.emitLine('frame.set("'+i+'", '+n+");"):("_"!==e.name.value.charAt(0)&&this.emitLine('context.addExport("'+i+'");'),this.emitLine('context.setVariable("'+i+'", '+n+");"))},compileCaller:function(e,t){this.emit("(function (){");var n=this._compileMacro(e,t);this.emit("return "+n+";})()")},compileImport:function(e,t){var n=this.tmpid(),i=e.target.value;this.emit("env.getTemplate("),this._compileExpression(e.template,t),this.emitLine(", false, "+this._templateName()+", false, "+this.makeCallback(n)),this.addScopeLevel(),this.emitLine(n+".getExported("+(e.withContext?"context.getVariables(), frame, ":"")+this.makeCallback(n)),this.addScopeLevel(),t.set(i,n),t.parent?this.emitLine('frame.set("'+i+'", '+n+");"):this.emitLine('context.setVariable("'+i+'", '+n+");")},compileFromImport:function(e,t){var n=this.tmpid();this.emit("env.getTemplate("),this._compileExpression(e.template,t),this.emitLine(", false, "+this._templateName()+", false, "+this.makeCallback(n)),this.addScopeLevel(),this.emitLine(n+".getExported("+(e.withContext?"context.getVariables(), frame, ":"")+this.makeCallback(n)),this.addScopeLevel(),r.each(e.names.children,function(e){var i,r,s=this.tmpid();e instanceof a.Pair?(i=e.key.value,r=e.value.value):(i=e.value,r=i),this.emitLine("if("+n+'.hasOwnProperty("'+i+'")) {'),this.emitLine("var "+s+" = "+n+"."+i+";"),this.emitLine("} else {"),this.emitLine("cb(new Error(\"cannot import '"+i+"'\")); return;"),this.emitLine("}"),t.set(r,s),t.parent?this.emitLine('frame.set("'+r+'", '+s+");"):this.emitLine('context.setVariable("'+r+'", '+s+");")},this)},compileBlock:function(e){var t=this.tmpid();this.inBlock||this.emit('(parentTemplate ? function(e, c, f, r, cb) { cb(""); } : '),this.emit('context.getBlock("'+e.name.value+'")'),this.inBlock||this.emit(")"),this.emitLine("(env, context, frame, runtime, "+this.makeCallback(t)),this.emitLine(this.buffer+" += "+t+";"),this.addScopeLevel()},compileSuper:function(e,t){var n=e.blockName.value,i=e.symbol.value;this.emitLine('context.getSuper(env, "'+n+'", b_'+n+", frame, runtime, "+this.makeCallback(i)),this.emitLine(i+" = runtime.markSafe("+i+");"),this.addScopeLevel(),t.set(i,i)},compileExtends:function(e,t){var n=this.tmpid();this.emit("env.getTemplate("),this._compileExpression(e.template,t),this.emitLine(", true, "+this._templateName()+", false, "+this.makeCallback("_parentTemplate")),this.emitLine("parentTemplate = _parentTemplate"),this.emitLine("for(var "+n+" in parentTemplate.blocks) {"),this.emitLine("context.addBlock("+n+", parentTemplate.blocks["+n+"]);"),this.emitLine("}"),this.addScopeLevel()},compileInclude:function(e,t){var n=this.tmpid(),i=this.tmpid();this.emit("env.getTemplate("),this._compileExpression(e.template,t),this.emitLine(", false, "+this._templateName()+", "+e.ignoreMissing+", "+this.makeCallback(n)),this.addScopeLevel(),this.emitLine(n+".render(context.getVariables(), frame, "+this.makeCallback(i)),this.emitLine(this.buffer+" += "+i),this.addScopeLevel()},compileTemplateData:function(e,t){this.compileLiteral(e,t)},compileOutput:function(e,t){for(var n=e.children,i=0,r=n.length;r>i;i++)n[i]instanceof a.TemplateData?n[i].value&&(this.emit(this.buffer+" += "),this.compileLiteral(n[i],t),this.emitLine(";")):(this.emit(this.buffer+" += runtime.suppressValue("),this.throwOnUndefined&&this.emit("runtime.ensureDefined("),this.compile(n[i],t),this.throwOnUndefined&&this.emit(","+e.lineno+","+e.colno+")"),this.emit(", env.opts.autoescape);\n"))},compileRoot:function(e,t){t&&this.fail("compileRoot: root node can't have frame"),t=new c,this.emitFuncBegin("root"),this.emitLine("var parentTemplate = null;"),this._compileChildren(e,t),this.emitLine("if(parentTemplate) {"),this.emitLine("parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);"),this.emitLine("} else {"),this.emitLine("cb(null, "+this.buffer+");"),this.emitLine("}"),this.emitFuncEnd(!0),this.inBlock=!0;var n,i,r,s=e.findAll(a.Block);for(n=0;n<s.length;n++){r=s[n],i=r.name.value,this.emitFuncBegin("b_"+i);var o=new c;this.compile(r.body,o),this.emitFuncEnd()}for(this.emitLine("return {"),n=0;n<s.length;n++)r=s[n],i="b_"+r.name.value,this.emitLine(i+": "+i+",");this.emitLine("root: root\n};")},compile:function(e,t){var n=this["compile"+e.typename];n?n.call(this,e,t):this.fail("compile: Cannot compile node: "+e.typename,e.lineno,e.colno)},getCode:function(){return this.codebuf.join("")}});e.exports={compile:function(e,t,n,i,r){var a=new u(i,r.throwOnUndefined);if(n&&n.length)for(var l=0;l<n.length;l++)"preprocess"in n[l]&&(e=n[l].preprocess(e,i));return a.compile(o.transform(s.parse(e,n,r),t,i)),a.getCode()},Compiler:u}},function(e,t,n){(function(t){"use strict";function i(e,t,n){e instanceof t&&n.push(e),e instanceof a&&e.findAll(t,n)}function r(e,n){function i(e,n,i){for(var r=e.split("\n"),s=0;s<r.length;s++){if(r[s]&&(i&&s>0||!i))for(var o=0;n>o;o++)t.stdout.write(" ");s===r.length-1?t.stdout.write(r[s]):t.stdout.write(r[s]+"\n")}}if(n=n||0,i(e.typename+": ",n),e instanceof c)i("\n"),s.each(e.children,function(e){r(e,n+2)});else if(e instanceof re)i(e.extName+"."+e.prop),i("\n"),e.args&&r(e.args,n+2),e.contentArgs&&s.each(e.contentArgs,function(e){r(e,n+2)});else{var o=null,l=null;if(e.iterFields(function(e,t){e instanceof a?(o=o||{},o[t]=e):(l=l||{},l[t]=e)}),l?i(JSON.stringify(l,null,2)+"\n",null,!0):i("\n"),o)for(var h in o)r(o[h],n+2)}}var s=n(4),o=n(5),a=o.extend("Node",{init:function(e,t){this.lineno=e,this.colno=t;for(var n=this.fields,i=0,r=n.length;r>i;i++){var s=n[i],o=arguments[i+2];void 0===o&&(o=null),this[s]=o}},findAll:function(e,t){t=t||[];var n,r;if(this instanceof c){var s=this.children;for(n=0,r=s.length;r>n;n++)i(s[n],e,t)}else{var o=this.fields;for(n=0,r=o.length;r>n;n++)i(this[o[n]],e,t)}return t},iterFields:function(e){s.each(this.fields,function(t){e(this[t],t)},this)}}),l=a.extend("Value",{fields:["value"]}),c=a.extend("NodeList",{fields:["children"],init:function(e,t,n){this.parent(e,t,n||[])},addChild:function(e){this.children.push(e)}}),h=c.extend("Root"),u=l.extend("Literal"),p=l.extend("Symbol"),f=c.extend("Group"),m=c.extend("Array"),d=a.extend("Pair",{fields:["key","value"]}),v=c.extend("Dict"),g=a.extend("LookupVal",{fields:["target","val"]}),y=a.extend("If",{fields:["cond","body","else_"]}),k=y.extend("IfAsync"),x=a.extend("InlineIf",{fields:["cond","body","else_"]}),b=a.extend("For",{fields:["arr","name","body","else_"]}),E=b.extend("AsyncEach"),w=b.extend("AsyncAll"),T=a.extend("Macro",{fields:["name","args","body"]}),L=T.extend("Caller"),_=a.extend("Import",{fields:["template","target","withContext"]}),O=a.extend("FromImport",{fields:["template","names","withContext"],init:function(e,t,n,i,r){this.parent(e,t,n,i||new c,r)}}),A=a.extend("FunCall",{fields:["name","args"]}),S=A.extend("Filter"),N=S.extend("FilterAsync",{fields:["name","args","symbol"]}),C=v.extend("KeywordArgs"),B=a.extend("Block",{fields:["name","body"]}),F=a.extend("Super",{fields:["blockName","symbol"]}),K=a.extend("TemplateRef",{fields:["template"]}),R=K.extend("Extends"),I=a.extend("Include",{fields:["template","ignoreMissing"]}),M=a.extend("Set",{fields:["targets","value"]}),P=c.extend("Output"),D=u.extend("TemplateData"),V=a.extend("UnaryOp",{fields:["target"]}),j=a.extend("BinOp",{fields:["left","right"]}),U=j.extend("In"),W=j.extend("Or"),G=j.extend("And"),Y=V.extend("Not"),H=j.extend("Add"),$=j.extend("Concat"),z=j.extend("Sub"),X=j.extend("Mul"),q=j.extend("Div"),J=j.extend("FloorDiv"),Q=j.extend("Mod"),Z=j.extend("Pow"),ee=V.extend("Neg"),te=V.extend("Pos"),ne=a.extend("Compare",{fields:["expr","ops"]}),ie=a.extend("CompareOperand",{fields:["expr","type"]}),re=a.extend("CallExtension",{fields:["extName","prop","args","contentArgs"],init:function(e,t,n,i){this.extName=e._name||e,this.prop=t,this.args=n||new c,this.contentArgs=i||[],this.autoescape=e.autoescape}}),se=re.extend("CallExtensionAsync");e.exports={Node:a,Root:h,NodeList:c,Value:l,Literal:u,Symbol:p,Group:f,Array:m,Pair:d,Dict:v,Output:P,TemplateData:D,If:y,IfAsync:k,InlineIf:x,For:b,AsyncEach:E,AsyncAll:w,Macro:T,Caller:L,Import:_,FromImport:O,FunCall:A,Filter:S,FilterAsync:N,KeywordArgs:C,Block:B,Super:F,Extends:R,Include:I,Set:M,LookupVal:g,BinOp:j,In:U,Or:W,And:G,Not:Y,Add:H,Concat:$,Sub:z,Mul:X,Div:q,FloorDiv:J,Mod:Q,Pow:Z,Neg:ee,Pos:te,Compare:ne,CompareOperand:ie,CallExtension:re,CallExtensionAsync:se,printNodes:r}}).call(t,n(3))},function(e,t){},function(e,t){"use strict";var n=Array.prototype,i=Object.prototype,r={"&":"&amp;",'"':"&quot;","'":"&#39;","<":"&lt;",">":"&gt;"},s=/[&"'<>]/g,o=function(e){return r[e]},t=e.exports={};t.prettifyError=function(e,n,i){if(i.Update||(i=new t.TemplateError(i)),i.Update(e),!n){var r=i;i=new Error(r.message),i.name=r.name}return i},t.TemplateError=function(e,t,n){var i=this;if(e instanceof Error){i=e,e=e.name+": "+e.message;try{i.name=""}catch(r){i=this}}else Error.captureStackTrace&&Error.captureStackTrace(i);return i.name="Template render error",i.message=e,i.lineno=t,i.colno=n,i.firstUpdate=!0,i.Update=function(e){var t="("+(e||"unknown path")+")";return this.firstUpdate&&(this.lineno&&this.colno?t+=" [Line "+this.lineno+", Column "+this.colno+"]":this.lineno&&(t+=" [Line "+this.lineno+"]")),t+="\n ",this.firstUpdate&&(t+=" "),this.message=t+(this.message||""),this.firstUpdate=!1,this},i},t.TemplateError.prototype=Error.prototype,t.escape=function(e){return e.replace(s,o)},t.isFunction=function(e){return"[object Function]"===i.toString.call(e)},t.isArray=Array.isArray||function(e){return"[object Array]"===i.toString.call(e)},t.isString=function(e){return"[object String]"===i.toString.call(e)},t.isObject=function(e){return"[object Object]"===i.toString.call(e)},t.groupBy=function(e,n){for(var i={},r=t.isFunction(n)?n:function(e){return e[n]},s=0;s<e.length;s++){var o=e[s],a=r(o,s);(i[a]||(i[a]=[])).push(o)}return i},t.toArray=function(e){return Array.prototype.slice.call(e)},t.without=function(e){var n=[];if(!e)return n;for(var i=-1,r=e.length,s=t.toArray(arguments).slice(1);++i<r;)-1===t.indexOf(s,e[i])&&n.push(e[i]);return n},t.extend=function(e,t){for(var n in t)e[n]=t[n];return e},t.repeat=function(e,t){for(var n="",i=0;t>i;i++)n+=e;return n},t.each=function(e,t,i){if(null!=e)if(n.each&&e.each===n.each)e.forEach(t,i);else if(e.length===+e.length)for(var r=0,s=e.length;s>r;r++)t.call(i,e[r],r,e)},t.map=function(e,t){var i=[];if(null==e)return i;if(n.map&&e.map===n.map)return e.map(t);for(var r=0;r<e.length;r++)i[i.length]=t(e[r],r);return e.length===+e.length&&(i.length=e.length),i},t.asyncIter=function(e,t,n){function i(){r++,r<e.length?t(e[r],r,i,n):n()}var r=-1;i()},t.asyncFor=function(e,n,i){function r(){a++;var t=s[a];o>a?n(t,e[t],a,o,r):i()}var s=t.keys(e),o=s.length,a=-1;r()},t.indexOf=Array.prototype.indexOf?function(e,t,n){return Array.prototype.indexOf.call(e,t,n)}:function(e,t,n){var i=this.length>>>0;for(n=+n||0,Math.abs(n)===1/0&&(n=0),0>n&&(n+=i,0>n&&(n=0));i>n;n++)if(e[n]===t)return n;return-1},Array.prototype.map||(Array.prototype.map=function(){throw new Error("map is unimplemented for this js engine")}),t.keys=function(e){if(Object.prototype.keys)return e.keys();var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(n);return t}},function(e,t){"use strict";function n(e,t,i){var r=function(){};r.prototype=e.prototype;var s=new r,o=/xyz/.test(function(){xyz})?/\bparent\b/:/.*/;i=i||{};for(var a in i){var l=i[a],c=s[a];"function"==typeof c&&"function"==typeof l&&o.test(l)?s[a]=function(e,t){return function(){var n=this.parent;this.parent=t;var i=e.apply(this,arguments);return this.parent=n,i}}(l,c):s[a]=l}s.typename=t;var h=function(){s.init&&s.init.apply(this,arguments)};return h.prototype=s,h.prototype.constructor=h,h.extend=function(e,t){return"object"==typeof e&&(t=e,e="anonymous"),n(h,e,t)},h}e.exports=n(Object,"Object",{})},function(e,t,n){"use strict";var i=n(7),r=n(2),s=n(5),o=n(4),a=s.extend({init:function(e){this.tokens=e,this.peeked=null,this.breakOnBlocks=null,this.dropLeadingWhitespace=!1,this.extensions=[]},nextToken:function(e){var t;if(this.peeked){if(e||this.peeked.type!==i.TOKEN_WHITESPACE)return t=this.peeked,this.peeked=null,t;this.peeked=null}if(t=this.tokens.nextToken(),!e)for(;t&&t.type===i.TOKEN_WHITESPACE;)t=this.tokens.nextToken();return t},peekToken:function(){return this.peeked=this.peeked||this.nextToken(),this.peeked},pushToken:function(e){if(this.peeked)throw new Error("pushToken: can only push one token on between reads");this.peeked=e},fail:function(e,t,n){if((void 0===t||void 0===n)&&this.peekToken()){var i=this.peekToken();t=i.lineno,n=i.colno}throw void 0!==t&&(t+=1),void 0!==n&&(n+=1),new o.TemplateError(e,t,n)},skip:function(e){var t=this.nextToken();return t&&t.type===e?!0:(this.pushToken(t),!1)},expect:function(e){var t=this.nextToken();return t.type!==e&&this.fail("expected "+e+", got "+t.type,t.lineno,t.colno),t},skipValue:function(e,t){var n=this.nextToken();return n&&n.type===e&&n.value===t?!0:(this.pushToken(n),!1)},skipSymbol:function(e){return this.skipValue(i.TOKEN_SYMBOL,e)},advanceAfterBlockEnd:function(e){var t;return e||(t=this.peekToken(),t||this.fail("unexpected end of file"),t.type!==i.TOKEN_SYMBOL&&this.fail("advanceAfterBlockEnd: expected symbol token or explicit name to be passed"),e=this.nextToken().value),t=this.nextToken(),t&&t.type===i.TOKEN_BLOCK_END?"-"===t.value.charAt(0)&&(this.dropLeadingWhitespace=!0):this.fail("expected block end in "+e+" statement"),t},advanceAfterVariableEnd:function(){this.skip(i.TOKEN_VARIABLE_END)||this.fail("expected variable end")},parseFor:function(){var e,t,n=this.peekToken();this.skipSymbol("for")?(e=new r.For(n.lineno,n.colno),t="endfor"):this.skipSymbol("asyncEach")?(e=new r.AsyncEach(n.lineno,n.colno),t="endeach"):this.skipSymbol("asyncAll")?(e=new r.AsyncAll(n.lineno,n.colno),t="endall"):this.fail("parseFor: expected for{Async}",n.lineno,n.colno),e.name=this.parsePrimary(),e.name instanceof r.Symbol||this.fail("parseFor: variable name expected for loop");var s=this.peekToken().type;if(s===i.TOKEN_COMMA){var o=e.name;for(e.name=new r.Array(o.lineno,o.colno),e.name.addChild(o);this.skip(i.TOKEN_COMMA);){var a=this.parsePrimary();e.name.addChild(a)}}return this.skipSymbol("in")||this.fail('parseFor: expected "in" keyword for loop',n.lineno,n.colno),e.arr=this.parseExpression(),this.advanceAfterBlockEnd(n.value),e.body=this.parseUntilBlocks(t,"else"),this.skipSymbol("else")&&(this.advanceAfterBlockEnd("else"),e.else_=this.parseUntilBlocks(t)),this.advanceAfterBlockEnd(),e},parseMacro:function(){var e=this.peekToken();this.skipSymbol("macro")||this.fail("expected macro");var t=this.parsePrimary(!0),n=this.parseSignature(),i=new r.Macro(e.lineno,e.colno,t,n);return this.advanceAfterBlockEnd(e.value),i.body=this.parseUntilBlocks("endmacro"),this.advanceAfterBlockEnd(),i},parseCall:function(){var e=this.peekToken();this.skipSymbol("call")||this.fail("expected call");var t=this.parseSignature(!0)||new r.NodeList,n=this.parsePrimary();this.advanceAfterBlockEnd(e.value);var i=this.parseUntilBlocks("endcall");this.advanceAfterBlockEnd();var s=new r.Symbol(e.lineno,e.colno,"caller"),o=new r.Caller(e.lineno,e.colno,s,t,i),a=n.args.children;a[a.length-1]instanceof r.KeywordArgs||a.push(new r.KeywordArgs);var l=a[a.length-1];return l.addChild(new r.Pair(e.lineno,e.colno,s,o)),new r.Output(e.lineno,e.colno,[n])},parseWithContext:function(){var e=this.peekToken(),t=null;return this.skipSymbol("with")?t=!0:this.skipSymbol("without")&&(t=!1),null!==t&&(this.skipSymbol("context")||this.fail("parseFrom: expected context after with/without",e.lineno,e.colno)),t},parseImport:function(){var e=this.peekToken();this.skipSymbol("import")||this.fail("parseImport: expected import",e.lineno,e.colno);var t=this.parseExpression();this.skipSymbol("as")||this.fail('parseImport: expected "as" keyword',e.lineno,e.colno);var n=this.parsePrimary(),i=this.parseWithContext(),s=new r.Import(e.lineno,e.colno,t,n,i);return this.advanceAfterBlockEnd(e.value),s},parseFrom:function(){var e=this.peekToken();this.skipSymbol("from")||this.fail("parseFrom: expected from");var t=this.parsePrimary();this.skipSymbol("import")||this.fail("parseFrom: expected import",e.lineno,e.colno);for(var n,s=new r.NodeList;;){var o=this.peekToken();if(o.type===i.TOKEN_BLOCK_END){s.children.length||this.fail("parseFrom: Expected at least one import name",e.lineno,e.colno),"-"===o.value.charAt(0)&&(this.dropLeadingWhitespace=!0),this.nextToken();break}s.children.length>0&&!this.skip(i.TOKEN_COMMA)&&this.fail("parseFrom: expected comma",e.lineno,e.colno);var a=this.parsePrimary();if("_"===a.value.charAt(0)&&this.fail("parseFrom: names starting with an underscore cannot be imported",a.lineno,a.colno),this.skipSymbol("as")){var l=this.parsePrimary();s.addChild(new r.Pair(a.lineno,a.colno,a,l))}else s.addChild(a);n=this.parseWithContext()}return new r.FromImport(e.lineno,e.colno,t,s,n)},parseBlock:function(){var e=this.peekToken();this.skipSymbol("block")||this.fail("parseBlock: expected block",e.lineno,e.colno);var t=new r.Block(e.lineno,e.colno);return t.name=this.parsePrimary(),t.name instanceof r.Symbol||this.fail("parseBlock: variable name expected",e.lineno,e.colno),this.advanceAfterBlockEnd(e.value),t.body=this.parseUntilBlocks("endblock"),this.peekToken()||this.fail("parseBlock: expected endblock, got end of file"),this.advanceAfterBlockEnd(),t},parseExtends:function(){var e="extends",t=this.peekToken();this.skipSymbol(e)||this.fail("parseTemplateRef: expected "+e);var n=new r.Extends(t.lineno,t.colno);return n.template=this.parseExpression(),
this.advanceAfterBlockEnd(t.value),n},parseInclude:function(){var e="include",t=this.peekToken();this.skipSymbol(e)||this.fail("parseInclude: expected "+e);var n=new r.Include(t.lineno,t.colno);return n.template=this.parseExpression(),this.skipSymbol("ignore")&&this.skipSymbol("missing")&&(n.ignoreMissing=!0),this.advanceAfterBlockEnd(t.value),n},parseIf:function(){var e,t=this.peekToken();this.skipSymbol("if")||this.skipSymbol("elif")?e=new r.If(t.lineno,t.colno):this.skipSymbol("ifAsync")?e=new r.IfAsync(t.lineno,t.colno):this.fail("parseIf: expected if or elif",t.lineno,t.colno),e.cond=this.parseExpression(),this.advanceAfterBlockEnd(t.value),e.body=this.parseUntilBlocks("elif","else","endif");var n=this.peekToken();switch(n&&n.value){case"elif":e.else_=this.parseIf();break;case"else":this.advanceAfterBlockEnd(),e.else_=this.parseUntilBlocks("endif"),this.advanceAfterBlockEnd();break;case"endif":e.else_=null,this.advanceAfterBlockEnd();break;default:this.fail("parseIf: expected elif, else, or endif, got end of file")}return e},parseSet:function(){var e=this.peekToken();this.skipSymbol("set")||this.fail("parseSet: expected set",e.lineno,e.colno);for(var t,n=new r.Set(e.lineno,e.colno,[]);(t=this.parsePrimary())&&(n.targets.push(t),this.skip(i.TOKEN_COMMA)););return this.skipValue(i.TOKEN_OPERATOR,"=")||this.fail("parseSet: expected = in set tag",e.lineno,e.colno),n.value=this.parseExpression(),this.advanceAfterBlockEnd(e.value),n},parseStatement:function(){var e,t=this.peekToken();if(t.type!==i.TOKEN_SYMBOL&&this.fail("tag name expected",t.lineno,t.colno),this.breakOnBlocks&&-1!==o.indexOf(this.breakOnBlocks,t.value))return null;switch(t.value){case"raw":return this.parseRaw();case"if":case"ifAsync":return this.parseIf();case"for":case"asyncEach":case"asyncAll":return this.parseFor();case"block":return this.parseBlock();case"extends":return this.parseExtends();case"include":return this.parseInclude();case"set":return this.parseSet();case"macro":return this.parseMacro();case"call":return this.parseCall();case"import":return this.parseImport();case"from":return this.parseFrom();case"filter":return this.parseFilterStatement();default:if(this.extensions.length)for(var n=0;n<this.extensions.length;n++){var s=this.extensions[n];if(-1!==o.indexOf(s.tags||[],t.value))return s.parse(this,r,i)}this.fail("unknown block tag: "+t.value,t.lineno,t.colno)}return e},parseRaw:function(){for(var e=/([\s\S]*?){%\s*(raw|endraw)\s*(?=%})%}/,t=1,n="",i=null,s=this.advanceAfterBlockEnd();(i=this.tokens._extractRegex(e))&&t>0;){var o=i[0],a=i[1],l=i[2];"raw"===l?t+=1:"endraw"===l&&(t-=1),0===t?(n+=a,this.tokens.backN(o.length-a.length)):n+=o}return new r.Output(s.lineno,s.colno,[new r.TemplateData(s.lineno,s.colno,n)])},parsePostfix:function(e){for(var t,n=this.peekToken();n;){if(n.type===i.TOKEN_LEFT_PAREN)e=new r.FunCall(n.lineno,n.colno,e,this.parseSignature());else if(n.type===i.TOKEN_LEFT_BRACKET)t=this.parseAggregate(),t.children.length>1&&this.fail("invalid index"),e=new r.LookupVal(n.lineno,n.colno,e,t.children[0]);else{if(n.type!==i.TOKEN_OPERATOR||"."!==n.value)break;this.nextToken();var s=this.nextToken();s.type!==i.TOKEN_SYMBOL&&this.fail("expected name as lookup value, got "+s.value,s.lineno,s.colno),t=new r.Literal(s.lineno,s.colno,s.value),e=new r.LookupVal(n.lineno,n.colno,e,t)}n=this.peekToken()}return e},parseExpression:function(){var e=this.parseInlineIf();return e},parseInlineIf:function(){var e=this.parseOr();if(this.skipSymbol("if")){var t=this.parseOr(),n=e;e=new r.InlineIf(e.lineno,e.colno),e.body=n,e.cond=t,this.skipSymbol("else")?e.else_=this.parseOr():e.else_=null}return e},parseOr:function(){for(var e=this.parseAnd();this.skipSymbol("or");){var t=this.parseAnd();e=new r.Or(e.lineno,e.colno,e,t)}return e},parseAnd:function(){for(var e=this.parseNot();this.skipSymbol("and");){var t=this.parseNot();e=new r.And(e.lineno,e.colno,e,t)}return e},parseNot:function(){var e=this.peekToken();return this.skipSymbol("not")?new r.Not(e.lineno,e.colno,this.parseNot()):this.parseIn()},parseIn:function(){for(var e=this.parseCompare();;){var t=this.nextToken();if(!t)break;var n=t.type===i.TOKEN_SYMBOL&&"not"===t.value;if(n||this.pushToken(t),!this.skipSymbol("in")){n&&this.pushToken(t);break}var s=this.parseCompare();e=new r.In(e.lineno,e.colno,e,s),n&&(e=new r.Not(e.lineno,e.colno,e))}return e},parseCompare:function(){for(var e=["==","!=","<",">","<=",">="],t=this.parseConcat(),n=[];;){var i=this.nextToken();if(!i)break;if(-1===o.indexOf(e,i.value)){this.pushToken(i);break}n.push(new r.CompareOperand(i.lineno,i.colno,this.parseConcat(),i.value))}return n.length?new r.Compare(n[0].lineno,n[0].colno,t,n):t},parseConcat:function(){for(var e=this.parseAdd();this.skipValue(i.TOKEN_TILDE,"~");){var t=this.parseAdd();e=new r.Concat(e.lineno,e.colno,e,t)}return e},parseAdd:function(){for(var e=this.parseSub();this.skipValue(i.TOKEN_OPERATOR,"+");){var t=this.parseSub();e=new r.Add(e.lineno,e.colno,e,t)}return e},parseSub:function(){for(var e=this.parseMul();this.skipValue(i.TOKEN_OPERATOR,"-");){var t=this.parseMul();e=new r.Sub(e.lineno,e.colno,e,t)}return e},parseMul:function(){for(var e=this.parseDiv();this.skipValue(i.TOKEN_OPERATOR,"*");){var t=this.parseDiv();e=new r.Mul(e.lineno,e.colno,e,t)}return e},parseDiv:function(){for(var e=this.parseFloorDiv();this.skipValue(i.TOKEN_OPERATOR,"/");){var t=this.parseFloorDiv();e=new r.Div(e.lineno,e.colno,e,t)}return e},parseFloorDiv:function(){for(var e=this.parseMod();this.skipValue(i.TOKEN_OPERATOR,"//");){var t=this.parseMod();e=new r.FloorDiv(e.lineno,e.colno,e,t)}return e},parseMod:function(){for(var e=this.parsePow();this.skipValue(i.TOKEN_OPERATOR,"%");){var t=this.parsePow();e=new r.Mod(e.lineno,e.colno,e,t)}return e},parsePow:function(){for(var e=this.parseUnary();this.skipValue(i.TOKEN_OPERATOR,"**");){var t=this.parseUnary();e=new r.Pow(e.lineno,e.colno,e,t)}return e},parseUnary:function(e){var t,n=this.peekToken();return t=this.skipValue(i.TOKEN_OPERATOR,"-")?new r.Neg(n.lineno,n.colno,this.parseUnary(!0)):this.skipValue(i.TOKEN_OPERATOR,"+")?new r.Pos(n.lineno,n.colno,this.parseUnary(!0)):this.parsePrimary(),e||(t=this.parseFilter(t)),t},parsePrimary:function(e){var t,n=this.nextToken(),s=null;return n?n.type===i.TOKEN_STRING?t=n.value:n.type===i.TOKEN_INT?t=parseInt(n.value,10):n.type===i.TOKEN_FLOAT?t=parseFloat(n.value):n.type===i.TOKEN_BOOLEAN?"true"===n.value?t=!0:"false"===n.value?t=!1:this.fail("invalid boolean: "+n.value,n.lineno,n.colno):n.type===i.TOKEN_NONE?t=null:n.type===i.TOKEN_REGEX&&(t=new RegExp(n.value.body,n.value.flags)):this.fail("expected expression, got end of file"),void 0!==t?s=new r.Literal(n.lineno,n.colno,t):n.type===i.TOKEN_SYMBOL?(s=new r.Symbol(n.lineno,n.colno,n.value),e||(s=this.parsePostfix(s))):(this.pushToken(n),s=this.parseAggregate()),s?s:void this.fail("unexpected token: "+n.value,n.lineno,n.colno)},parseFilterName:function(){for(var e=this.expect(i.TOKEN_SYMBOL),t=e.value;this.skipValue(i.TOKEN_OPERATOR,".");)t+="."+this.expect(i.TOKEN_SYMBOL).value;return new r.Symbol(e.lineno,e.colno,t)},parseFilterArgs:function(e){if(this.peekToken().type===i.TOKEN_LEFT_PAREN){var t=this.parsePostfix(e);return t.args.children}return[]},parseFilter:function(e){for(;this.skip(i.TOKEN_PIPE);){var t=this.parseFilterName();e=new r.Filter(t.lineno,t.colno,t,new r.NodeList(t.lineno,t.colno,[e].concat(this.parseFilterArgs(e))))}return e},parseFilterStatement:function(){var e=this.peekToken();this.skipSymbol("filter")||this.fail("parseFilterStatement: expected filter");var t=this.parseFilterName(),n=this.parseFilterArgs(t);this.advanceAfterBlockEnd(e.value);var i=this.parseUntilBlocks("endfilter");this.advanceAfterBlockEnd();var s=new r.Filter(t.lineno,t.colno,t,new r.NodeList(t.lineno,t.colno,i.children[0].children.concat(n)));return new r.Output(t.lineno,t.colno,[s])},parseAggregate:function(){var e,t=this.nextToken();switch(t.type){case i.TOKEN_LEFT_PAREN:e=new r.Group(t.lineno,t.colno);break;case i.TOKEN_LEFT_BRACKET:e=new r.Array(t.lineno,t.colno);break;case i.TOKEN_LEFT_CURLY:e=new r.Dict(t.lineno,t.colno);break;default:return null}for(;;){var n=this.peekToken().type;if(n===i.TOKEN_RIGHT_PAREN||n===i.TOKEN_RIGHT_BRACKET||n===i.TOKEN_RIGHT_CURLY){this.nextToken();break}if(e.children.length>0&&(this.skip(i.TOKEN_COMMA)||this.fail("parseAggregate: expected comma after expression",t.lineno,t.colno)),e instanceof r.Dict){var s=this.parsePrimary();this.skip(i.TOKEN_COLON)||this.fail("parseAggregate: expected colon after dict key",t.lineno,t.colno);var o=this.parseExpression();e.addChild(new r.Pair(s.lineno,s.colno,s,o))}else{var a=this.parseExpression();e.addChild(a)}}return e},parseSignature:function(e,t){var n=this.peekToken();if(!t&&n.type!==i.TOKEN_LEFT_PAREN){if(e)return null;this.fail("expected arguments",n.lineno,n.colno)}n.type===i.TOKEN_LEFT_PAREN&&(n=this.nextToken());for(var s=new r.NodeList(n.lineno,n.colno),o=new r.KeywordArgs(n.lineno,n.colno),a=!1;;){if(n=this.peekToken(),!t&&n.type===i.TOKEN_RIGHT_PAREN){this.nextToken();break}if(t&&n.type===i.TOKEN_BLOCK_END)break;if(a&&!this.skip(i.TOKEN_COMMA))this.fail("parseSignature: expected comma after expression",n.lineno,n.colno);else{var l=this.parseExpression();this.skipValue(i.TOKEN_OPERATOR,"=")?o.addChild(new r.Pair(l.lineno,l.colno,l,this.parseExpression())):s.addChild(l)}a=!0}return o.children.length&&s.addChild(o),s},parseUntilBlocks:function(){var e=this.breakOnBlocks;this.breakOnBlocks=o.toArray(arguments);var t=this.parse();return this.breakOnBlocks=e,t},parseNodes:function(){for(var e,t=[];e=this.nextToken();)if(e.type===i.TOKEN_DATA){var n=e.value,s=this.peekToken(),o=s&&s.value;this.dropLeadingWhitespace&&(n=n.replace(/^\s*/,""),this.dropLeadingWhitespace=!1),s&&s.type===i.TOKEN_BLOCK_START&&"-"===o.charAt(o.length-1)&&(n=n.replace(/\s*$/,"")),t.push(new r.Output(e.lineno,e.colno,[new r.TemplateData(e.lineno,e.colno,n)]))}else if(e.type===i.TOKEN_BLOCK_START){var a=this.parseStatement();if(!a)break;t.push(a)}else if(e.type===i.TOKEN_VARIABLE_START){var l=this.parseExpression();this.advanceAfterVariableEnd(),t.push(new r.Output(e.lineno,e.colno,[l]))}else e.type!==i.TOKEN_COMMENT&&this.fail("Unexpected token at top-level: "+e.type,e.lineno,e.colno);return t},parse:function(){return new r.NodeList(0,0,this.parseNodes())},parseAsRoot:function(){return new r.Root(0,0,this.parseNodes())}});e.exports={parse:function(e,t,n){var r=new a(i.lex(e,n));return void 0!==t&&(r.extensions=t),r.parseAsRoot()}}},function(e,t,n){"use strict";function i(e,t,n,i){return{type:e,value:t,lineno:n,colno:i}}function r(e,t){this.str=e,this.index=0,this.len=e.length,this.lineno=0,this.colno=0,this.in_code=!1,t=t||{};var n=t.tags||{};this.tags={BLOCK_START:n.blockStart||c,BLOCK_END:n.blockEnd||h,VARIABLE_START:n.variableStart||u,VARIABLE_END:n.variableEnd||p,COMMENT_START:n.commentStart||f,COMMENT_END:n.commentEnd||m},this.trimBlocks=!!t.trimBlocks,this.lstripBlocks=!!t.lstripBlocks}var s=n(4),o=" \n	\r ",a="()[]{}%*-+~/#,:|.<>=!",l="0123456789",c="{%",h="%}",u="{{",p="}}",f="{#",m="#}",d="string",v="whitespace",g="data",y="block-start",k="block-end",x="variable-start",b="variable-end",E="comment",w="left-paren",T="right-paren",L="left-bracket",_="right-bracket",O="left-curly",A="right-curly",S="operator",N="comma",C="colon",B="tilde",F="pipe",K="int",R="float",I="boolean",M="none",P="symbol",D="special",V="regex";r.prototype.nextToken=function(){var e,t=this.lineno,n=this.colno;if(this.in_code){var r=this.current();if(this.is_finished())return null;if('"'===r||"'"===r)return i(d,this.parseString(r),t,n);if(e=this._extract(o))return i(v,e,t,n);if((e=this._extractString(this.tags.BLOCK_END))||(e=this._extractString("-"+this.tags.BLOCK_END)))return this.in_code=!1,this.trimBlocks&&(r=this.current(),"\n"===r?this.forward():"\r"===r&&(this.forward(),r=this.current(),"\n"===r?this.forward():this.back())),i(k,e,t,n);if(e=this._extractString(this.tags.VARIABLE_END))return this.in_code=!1,i(b,e,t,n);if("r"===r&&"/"===this.str.charAt(this.index+1)){this.forwardN(2);for(var c="";!this.is_finished();){if("/"===this.current()&&"\\"!==this.previous()){this.forward();break}c+=this.current(),this.forward()}for(var h=["g","i","m","y"],u="";!this.is_finished();){var p=-1!==h.indexOf(this.current());if(!p)break;u+=this.current(),this.forward()}return i(V,{body:c,flags:u},t,n)}if(-1!==a.indexOf(r)){this.forward();var f,m=["==","!=","<=",">=","//","**"],D=r+this.current();switch(-1!==s.indexOf(m,D)&&(this.forward(),r=D),r){case"(":f=w;break;case")":f=T;break;case"[":f=L;break;case"]":f=_;break;case"{":f=O;break;case"}":f=A;break;case",":f=N;break;case":":f=C;break;case"~":f=B;break;case"|":f=F;break;default:f=S}return i(f,r,t,n)}if(e=this._extractUntil(o+a),e.match(/^[-+]?[0-9]+$/)){if("."===this.current()){this.forward();var j=this._extract(l);return i(R,e+"."+j,t,n)}return i(K,e,t,n)}if(e.match(/^(true|false)$/))return i(I,e,t,n);if("none"===e)return i(M,e,t,n);if(e)return i(P,e,t,n);throw new Error("Unexpected value while parsing: "+e)}var U=this.tags.BLOCK_START.charAt(0)+this.tags.VARIABLE_START.charAt(0)+this.tags.COMMENT_START.charAt(0)+this.tags.COMMENT_END.charAt(0);if(this.is_finished())return null;if((e=this._extractString(this.tags.BLOCK_START+"-"))||(e=this._extractString(this.tags.BLOCK_START)))return this.in_code=!0,i(y,e,t,n);if(e=this._extractString(this.tags.VARIABLE_START))return this.in_code=!0,i(x,e,t,n);e="";var W,G=!1;for(this._matches(this.tags.COMMENT_START)&&(G=!0,e=this._extractString(this.tags.COMMENT_START));null!==(W=this._extractUntil(U));){if(e+=W,(this._matches(this.tags.BLOCK_START)||this._matches(this.tags.VARIABLE_START)||this._matches(this.tags.COMMENT_START))&&!G){if(this.lstripBlocks&&this._matches(this.tags.BLOCK_START)&&this.colno>0&&this.colno<=e.length){var Y=e.slice(-this.colno);if(/^\s+$/.test(Y)&&(e=e.slice(0,-this.colno),!e.length))return this.nextToken()}break}if(this._matches(this.tags.COMMENT_END)){if(!G)throw new Error("unexpected end of comment");e+=this._extractString(this.tags.COMMENT_END);break}e+=this.current(),this.forward()}if(null===W&&G)throw new Error("expected end of comment, got end of file");return i(G?E:g,e,t,n)},r.prototype.parseString=function(e){this.forward();for(var t="";!this.is_finished()&&this.current()!==e;){var n=this.current();if("\\"===n){switch(this.forward(),this.current()){case"n":t+="\n";break;case"t":t+="	";break;case"r":t+="\r";break;default:t+=this.current()}this.forward()}else t+=n,this.forward()}return this.forward(),t},r.prototype._matches=function(e){if(this.index+e.length>this.len)return null;var t=this.str.slice(this.index,this.index+e.length);return t===e},r.prototype._extractString=function(e){return this._matches(e)?(this.index+=e.length,e):null},r.prototype._extractUntil=function(e){return this._extractMatching(!0,e||"")},r.prototype._extract=function(e){return this._extractMatching(!1,e)},r.prototype._extractMatching=function(e,t){if(this.is_finished())return null;var n=t.indexOf(this.current());if(e&&-1===n||!e&&-1!==n){var i=this.current();this.forward();for(var r=t.indexOf(this.current());(e&&-1===r||!e&&-1!==r)&&!this.is_finished();)i+=this.current(),this.forward(),r=t.indexOf(this.current());return i}return""},r.prototype._extractRegex=function(e){var t=this.currentStr().match(e);return t?(this.forwardN(t[0].length),t):null},r.prototype.is_finished=function(){return this.index>=this.len},r.prototype.forwardN=function(e){for(var t=0;e>t;t++)this.forward()},r.prototype.forward=function(){this.index++,"\n"===this.previous()?(this.lineno++,this.colno=0):this.colno++},r.prototype.backN=function(e){for(var t=0;e>t;t++)this.back()},r.prototype.back=function(){if(this.index--,"\n"===this.current()){this.lineno--;var e=this.src.lastIndexOf("\n",this.index-1);-1===e?this.colno=this.index:this.colno=this.index-e}else this.colno--},r.prototype.current=function(){return this.is_finished()?"":this.str.charAt(this.index)},r.prototype.currentStr=function(){return this.is_finished()?"":this.str.substr(this.index)},r.prototype.previous=function(){return this.str.charAt(this.index-1)},e.exports={lex:function(e,t){return new r(e,t)},TOKEN_STRING:d,TOKEN_WHITESPACE:v,TOKEN_DATA:g,TOKEN_BLOCK_START:y,TOKEN_BLOCK_END:k,TOKEN_VARIABLE_START:x,TOKEN_VARIABLE_END:b,TOKEN_COMMENT:E,TOKEN_LEFT_PAREN:w,TOKEN_RIGHT_PAREN:T,TOKEN_LEFT_BRACKET:L,TOKEN_RIGHT_BRACKET:_,TOKEN_LEFT_CURLY:O,TOKEN_RIGHT_CURLY:A,TOKEN_OPERATOR:S,TOKEN_COMMA:N,TOKEN_COLON:C,TOKEN_TILDE:B,TOKEN_PIPE:F,TOKEN_INT:K,TOKEN_FLOAT:R,TOKEN_BOOLEAN:I,TOKEN_NONE:M,TOKEN_SYMBOL:P,TOKEN_SPECIAL:D,TOKEN_REGEX:V}},function(e,t,n){"use strict";function i(){return"hole_"+d++}function r(e,t){for(var n=null,i=0;i<e.length;i++){var r=t(e[i]);r!==e[i]&&(n||(n=e.slice()),n[i]=r)}return n||e}function s(e,t,n){if(!(e instanceof f.Node))return e;if(!n){var i=t(e);if(i&&i!==e)return i}if(e instanceof f.NodeList){var o=r(e.children,function(e){return s(e,t,n)});o!==e.children&&(e=new f[e.typename](e.lineno,e.colno,o))}else if(e instanceof f.CallExtension){var a=s(e.args,t,n),l=r(e.contentArgs,function(e){return s(e,t,n)});(a!==e.args||l!==e.contentArgs)&&(e=new f[e.typename](e.extName,e.prop,a,l))}else{var c=e.fields.map(function(t){return e[t]}),h=r(c,function(e){return s(e,t,n)});h!==c&&(e=new f[e.typename](e.lineno,e.colno),h.forEach(function(t,n){e[e.fields[n]]=t}))}return n?t(e)||e:e}function o(e,t){return s(e,t,!0)}function a(e,t,n){var r=[],s=o(n?e[n]:e,function(e){if(e instanceof f.Block)return e;if(e instanceof f.Filter&&-1!==m.indexOf(t,e.name.value)||e instanceof f.CallExtensionAsync){var n=new f.Symbol(e.lineno,e.colno,i());return r.push(new f.FilterAsync(e.lineno,e.colno,e.name,e.args,n)),n}});return n?e[n]=s:e=s,r.length?(r.push(e),new f.NodeList(e.lineno,e.colno,r)):e}function l(e,t){return o(e,function(e){return e instanceof f.Output?a(e,t):e instanceof f.Set?a(e,t,"value"):e instanceof f.For?a(e,t,"arr"):e instanceof f.If?a(e,t,"cond"):e instanceof f.CallExtension?a(e,t,"args"):void 0})}function c(e){return s(e,function(e){if(e instanceof f.Block){var t=!1,n=i();e.body=s(e.body,function(e){return e instanceof f.FunCall&&"super"===e.name.value?(t=!0,new f.Symbol(e.lineno,e.colno,n)):void 0}),t&&e.body.children.unshift(new f.Super(0,0,e.name,new f.Symbol(0,0,n)))}})}function h(e){return o(e,function(e){if(e instanceof f.If||e instanceof f.For){var t=!1;if(s(e,function(e){return e instanceof f.FilterAsync||e instanceof f.IfAsync||e instanceof f.AsyncEach||e instanceof f.AsyncAll||e instanceof f.CallExtensionAsync||e instanceof f.Include?(t=!0,e):void 0}),t){if(e instanceof f.If)return new f.IfAsync(e.lineno,e.colno,e.cond,e.body,e.else_);if(e instanceof f.For)return new f.AsyncEach(e.lineno,e.colno,e.arr,e.name,e.body,e.else_)}}})}function u(e,t){return h(c(l(e,t)))}function p(e,t){return u(e,t||[])}var f=n(2),m=n(4),d=0;e.exports={transform:p}},function(e,t,n){"use strict";function i(e,t,n){return function(){var i,r,a=o(arguments),l=s(arguments);if(a>e.length){i=Array.prototype.slice.call(arguments,0,e.length);var c=Array.prototype.slice.call(arguments,i.length,a);for(r=0;r<c.length;r++)r<t.length&&(l[t[r]]=c[r]);i.push(l)}else if(a<e.length){for(i=Array.prototype.slice.call(arguments,0,a),r=a;r<e.length;r++){var h=e[r];i.push(l[h]),delete l[h]}i.push(l)}else i=arguments;return n.apply(this,i)}}function r(e){return e.__keywords=!0,e}function s(e){var t=e.length;if(t){var n=e[t-1];if(n&&n.hasOwnProperty("__keywords"))return n}return{}}function o(e){var t=e.length;if(0===t)return 0;var n=e[t-1];return n&&n.hasOwnProperty("__keywords")?t-1:t}function a(e){return"string"!=typeof e?e:(this.val=e,void(this.length=e.length))}function l(e,t){return e instanceof a?new a(t):t.toString()}function c(e){var t=typeof e;return"string"===t?new a(e):"function"!==t?e:function(){var t=e.apply(this,arguments);return"string"==typeof t?new a(t):t}}function h(e,t){return e=void 0!==e&&null!==e?e:"",t&&"string"==typeof e&&(e=y.escape(e)),e}function u(e,t,n){if(null===e||void 0===e)throw new y.TemplateError("attempted to output null or undefined value",t+1,n+1);return e}function p(e,t){return e=e||{},"function"==typeof e[t]?function(){return e[t].apply(e,arguments)}:e[t]}function f(e,t,n,i){if(!e)throw new Error("Unable to call `"+t+"`, which is undefined or falsey");if("function"!=typeof e)throw new Error("Unable to call `"+t+"`, which is not a function");return e.apply(n,i)}function m(e,t,n){var i=t.lookup(n);return void 0!==i&&null!==i?i:e.lookup(n)}function d(e,t,n){return e.lineno?e:new y.TemplateError(e,t,n)}function v(e,t,n,i){if(y.isArray(e)){var r=e.length;y.asyncIter(e,function(e,i,s){switch(t){case 1:n(e,i,r,s);break;case 2:n(e[0],e[1],i,r,s);break;case 3:n(e[0],e[1],e[2],i,r,s);break;default:e.push(i,s),n.apply(this,e)}},i)}else y.asyncFor(e,function(e,t,i,r,s){n(e,t,i,r,s)},i)}function g(e,t,n,i){function r(e,t){l++,a[e]=t,l===s&&i(null,a.join(""))}var s,o,a,l=0;if(y.isArray(e))if(s=e.length,a=new Array(s),0===s)i(null,"");else for(o=0;o<e.length;o++){var c=e[o];switch(t){case 1:n(c,o,s,r);break;case 2:n(c[0],c[1],o,s,r);break;case 3:n(c[0],c[1],c[2],o,s,r);break;default:c.push(o,r),n.apply(this,c)}}else{var h=y.keys(e);if(s=h.length,a=new Array(s),0===s)i(null,"");else for(o=0;o<h.length;o++){var u=h[o];n(u,e[u],o,s,r)}}}var y=n(4),k=n(5),x=k.extend({init:function(e){this.variables={},this.parent=e,this.topLevel=!1},set:function(e,t,n){var i=e.split("."),r=this.variables,s=this;if(n){if(s=this.resolve(i[0]))return void s.set(e,t);s=this}for(var o=0;o<i.length-1;o++){var a=i[o];r[a]||(r[a]={}),r=r[a]}r[i[i.length-1]]=t},get:function(e){var t=this.variables[e];return void 0!==t&&null!==t?t:null},lookup:function(e){var t=this.parent,n=this.variables[e];return void 0!==n&&null!==n?n:t&&t.lookup(e)},resolve:function(e){var t=this.parent,n=this.variables[e];return void 0!==n&&null!==n?this:t&&t.resolve(e)},push:function(){return new x(this)},pop:function(){return this.parent}});a.prototype=Object.create(String.prototype,{length:{writable:!0,configurable:!0,value:0}}),a.prototype.valueOf=function(){return this.val},a.prototype.toString=function(){return this.val},e.exports={Frame:x,makeMacro:i,makeKeywordArgs:r,numArgs:o,suppressValue:h,ensureDefined:u,memberLookup:p,contextOrFrameLookup:m,callWrap:f,handleError:d,isArray:y.isArray,keys:y.keys,SafeString:a,copySafeness:l,markSafe:c,asyncEach:v,asyncAll:g}},function(e,t,n){"use strict";function i(e,t,n){o(function(){e(t,n)})}var r,s=n(3),o=n(12),a=n(4),l=n(5),c=n(1),h=n(11),u=n(14),p=n(9),f=n(17),m=p.Frame;u.PrecompiledLoader=n(16);var d=l.extend({init:function(e,t){t=this.opts=t||{},this.opts.dev=!!t.dev,this.opts.autoescape=null!=t.autoescape?t.autoescape:!0,this.opts.throwOnUndefined=!!t.throwOnUndefined,this.opts.trimBlocks=!!t.trimBlocks,this.opts.lstripBlocks=!!t.lstripBlocks,this.loaders=[],e?this.loaders=a.isArray(e)?e:[e]:u.FileSystemLoader?this.loaders=[new u.FileSystemLoader("views")]:u.WebLoader&&(this.loaders=[new u.WebLoader("/views")]),window.nunjucksPrecompiled&&this.loaders.unshift(new u.PrecompiledLoader(window.nunjucksPrecompiled)),this.initCache(),this.globals=f(),this.filters={},this.asyncFilters=[],this.extensions={},this.extensionsList=[];for(var n in h)this.addFilter(n,h[n])},initCache:function(){a.each(this.loaders,function(e){e.cache={},"function"==typeof e.on&&e.on("update",function(t){e.cache[t]=null})})},addExtension:function(e,t){return t._name=e,this.extensions[e]=t,this.extensionsList.push(t),this},removeExtension:function(e){var t=this.getExtension(e);t&&(this.extensionsList=a.without(this.extensionsList,t),delete this.extensions[e])},getExtension:function(e){return this.extensions[e]},hasExtension:function(e){return!!this.extensions[e]},addGlobal:function(e,t){return this.globals[e]=t,this},getGlobal:function(e){if(!this.globals[e])throw new Error("global not found: "+e);return this.globals[e]},addFilter:function(e,t,n){var i=t;return n&&this.asyncFilters.push(e),this.filters[e]=i,this},getFilter:function(e){if(!this.filters[e])throw new Error("filter not found: "+e);return this.filters[e]},resolveTemplate:function(e,t,n){var i=e.isRelative&&t?e.isRelative(n):!1;return i&&e.resolve?e.resolve(t,n):n},getTemplate:function(e,t,n,i,s){var o=this,l=null;if(e&&e.raw&&(e=e.raw),a.isFunction(n)&&(s=n,n=null,t=t||!1),a.isFunction(t)&&(s=t,t=!1),e instanceof r)l=e;else{if("string"!=typeof e)throw new Error("template names must be a string: "+e);for(var c=0;c<this.loaders.length;c++){var h=this.resolveTemplate(this.loaders[c],n,e);if(l=this.loaders[c].cache[h])break}}if(!l){var u,p=this,f=function(n,o){if(o||n||i||(n=new Error("template not found: "+e)),n){if(!s)throw n;s(n)}else{var a;o?(a=new r(o.src,p,o.path,t),o.noCache||(o.loader.cache[e]=a)):a=new r("",p,"",t),s?s(null,a):u=a}};return a.asyncIter(this.loaders,function(t,i,r,s){function a(e,n){e?s(e):n?(n.loader=t,s(null,n)):r()}e=o.resolveTemplate(t,n,e),t.async?t.getSource(e,a):a(null,t.getSource(e))},f),u}return t&&l.compile(),s?void s(null,l):l},express:function(e){function t(e,t){if(this.name=e,this.path=e,this.defaultEngine=t.defaultEngine,this.ext=s.extname(e),!this.ext&&!this.defaultEngine)throw new Error("No default engine was specified and no extension was provided.");this.ext||(this.name+=this.ext=("."!==this.defaultEngine[0]?".":"")+this.defaultEngine)}var n=this;return t.prototype.render=function(e,t){n.render(this.name,e,t)},e.set("view",t),this},render:function(e,t,n){a.isFunction(t)&&(n=t,t=null);var r=null;return this.getTemplate(e,function(e,s){if(e&&n)i(n,e);else{if(e)throw e;r=s.render(t,n)}}),r},renderString:function(e,t,n,i){a.isFunction(n)&&(i=n,n={}),n=n||{};var s=new r(e,this,n.path);return s.render(t,i)}}),v=l.extend({init:function(e,t,n){this.env=n||new d,this.ctx={};for(var i in e)e.hasOwnProperty(i)&&(this.ctx[i]=e[i]);this.blocks={},this.exported=[];for(var r in t)this.addBlock(r,t[r])},lookup:function(e){return e in this.env.globals&&!(e in this.ctx)?this.env.globals[e]:this.ctx[e]},setVariable:function(e,t){this.ctx[e]=t},getVariables:function(){return this.ctx},addBlock:function(e,t){return this.blocks[e]=this.blocks[e]||[],this.blocks[e].push(t),this},getBlock:function(e){if(!this.blocks[e])throw new Error('unknown block "'+e+'"');return this.blocks[e][0]},getSuper:function(e,t,n,i,r,s){var o=a.indexOf(this.blocks[t]||[],n),l=this.blocks[t][o+1],c=this;if(-1===o||!l)throw new Error('no super block available for "'+t+'"');l(e,c,i,r,s)},addExport:function(e){this.exported.push(e)},getExported:function(){for(var e={},t=0;t<this.exported.length;t++){var n=this.exported[t];e[n]=this.ctx[n]}return e}});r=l.extend({init:function(e,t,n,i){if(this.env=t||new d,a.isObject(e))switch(e.type){case"code":this.tmplProps=e.obj;break;case"string":this.tmplStr=e.obj}else{if(!a.isString(e))throw new Error("src must be a string or an object describing the source");this.tmplStr=e}if(this.path=n,i){var r=this;try{r._compile()}catch(s){throw a.prettifyError(this.path,this.env.dev,s)}}else this.compiled=!1},render:function(e,t,n){"function"==typeof e?(n=e,e={}):"function"==typeof t&&(n=t,t=null);var r=!0;t&&(r=!1);var s=this;try{s.compile()}catch(o){var l=a.prettifyError(this.path,this.env.dev,o);if(n)return i(n,l);throw l}var c=new v(e||{},s.blocks,s.env),h=t?t.push():new m;h.topLevel=!0;var u=null;return s.rootRenderFunc(s.env,c,h||new m,p,function(e,t){if(e&&(e=a.prettifyError(s.path,s.env.dev,e)),n)r?i(n,e,t):n(e,t);else{if(e)throw e;u=t}}),u},getExported:function(e,t,n){"function"==typeof e&&(n=e,e={}),"function"==typeof t&&(n=t,t=null);try{this.compile()}catch(i){if(n)return n(i);throw i}var r=t?t.push():new m;r.topLevel=!0;var s=new v(e||{},this.blocks,this.env);this.rootRenderFunc(this.env,s,r,p,function(e){e?n(e,null):n(null,s.getExported())})},compile:function(){this.compiled||this._compile()},_compile:function(){var e;if(this.tmplProps)e=this.tmplProps;else{var t=c.compile(this.tmplStr,this.env.asyncFilters,this.env.extensionsList,this.path,this.env.opts),n=new Function(t);e=n()}this.blocks=this._getBlocks(e),this.rootRenderFunc=e.root,this.compiled=!0},_getBlocks:function(e){var t={};for(var n in e)"b_"===n.slice(0,2)&&(t[n.slice(2)]=e[n]);return t}}),e.exports={Environment:d,Template:r}},function(e,t,n){"use strict";function i(e,t){return null===e||void 0===e||e===!1?t:e}var r=n(4),s=n(9),o={abs:function(e){return Math.abs(e)},batch:function(e,t,n){var i,r=[],s=[];for(i=0;i<e.length;i++)i%t===0&&s.length&&(r.push(s),s=[]),s.push(e[i]);if(s.length){if(n)for(i=s.length;t>i;i++)s.push(n);r.push(s)}return r},capitalize:function(e){e=i(e,"");var t=e.toLowerCase();return s.copySafeness(e,t.charAt(0).toUpperCase()+t.slice(1))},center:function(e,t){if(e=i(e,""),t=t||80,e.length>=t)return e;var n=t-e.length,o=r.repeat(" ",n/2-n%2),a=r.repeat(" ",n/2);return s.copySafeness(e,o+e+a)},"default":function(e,t,n){return n?e?e:t:void 0!==e?e:t},dictsort:function(e,t,n){if(!r.isObject(e))throw new r.TemplateError("dictsort filter: val must be an object");var i=[];for(var s in e)i.push([s,e[s]]);var o;if(void 0===n||"key"===n)o=0;else{if("value"!==n)throw new r.TemplateError("dictsort filter: You can only sort by either key or value");o=1}return i.sort(function(e,n){var i=e[o],s=n[o];return t||(r.isString(i)&&(i=i.toUpperCase()),r.isString(s)&&(s=s.toUpperCase())),i>s?1:i===s?0:-1}),i},dump:function(e){return JSON.stringify(e)},escape:function(e){return"string"==typeof e||e instanceof s.SafeString?r.escape(e):e},safe:function(e){return s.markSafe(e)},first:function(e){return e[0]},groupby:function(e,t){return r.groupBy(e,t)},indent:function(e,t,n){if(e=i(e,""),""===e)return"";t=t||4;for(var o="",a=e.split("\n"),l=r.repeat(" ",t),c=0;c<a.length;c++)o+=0!==c||n?l+a[c]+"\n":a[c]+"\n";return s.copySafeness(e,o)},join:function(e,t,n){return t=t||"",n&&(e=r.map(e,function(e){return e[n]})),e.join(t)},last:function(e){return e[e.length-1]},length:function(e){var t=i(e,"");return void 0!==t?t.length:0},list:function(e){if(r.isString(e))return e.split("");if(r.isObject(e)){var t=[];if(Object.keys)t=Object.keys(e);else for(var n in e)t.push(n);return r.map(t,function(t){return{key:t,value:e[t]}})}if(r.isArray(e))return e;throw new r.TemplateError("list filter: type not iterable")},lower:function(e){return e=i(e,""),e.toLowerCase()},random:function(e){return e[Math.floor(Math.random()*e.length)]},rejectattr:function(e,t){return e.filter(function(e){return!e[t]})},selectattr:function(e,t){return e.filter(function(e){return!!e[t]})},replace:function(e,t,n,i){var r=e;if(t instanceof RegExp)return e.replace(t,n);"undefined"==typeof i&&(i=-1);var o="";if("number"==typeof t)t+="";else if("string"!=typeof t)return e;if("number"==typeof e&&(e+=""),"string"!=typeof e&&!(e instanceof s.SafeString))return e;if(""===t)return o=n+e.split("").join(n)+n,s.copySafeness(e,o);var a=e.indexOf(t);if(0===i||-1===a)return e;for(var l=0,c=0;a>-1&&(-1===i||i>c);)o+=e.substring(l,a)+n,l=a+t.length,c++,a=e.indexOf(t,l);return l<e.length&&(o+=e.substring(l)),s.copySafeness(r,o)},reverse:function(e){var t;return t=r.isString(e)?o.list(e):r.map(e,function(e){return e}),t.reverse(),r.isString(e)?s.copySafeness(e,t.join("")):t},round:function(e,t,n){t=t||0;var i,r=Math.pow(10,t);return i="ceil"===n?Math.ceil:"floor"===n?Math.floor:Math.round,i(e*r)/r},slice:function(e,t,n){for(var i=Math.floor(e.length/t),r=e.length%t,s=0,o=[],a=0;t>a;a++){var l=s+a*i;r>a&&s++;var c=s+(a+1)*i,h=e.slice(l,c);n&&a>=r&&h.push(n),o.push(h)}return o},sort:s.makeMacro(["value","reverse","case_sensitive","attribute"],[],function(e,t,n,i){return e=r.map(e,function(e){return e}),e.sort(function(e,s){var o,a;return i?(o=e[i],a=s[i]):(o=e,a=s),!n&&r.isString(o)&&r.isString(a)&&(o=o.toLowerCase(),a=a.toLowerCase()),a>o?t?1:-1:o>a?t?-1:1:0}),e}),string:function(e){return s.copySafeness(e,e)},striptags:function(e){e=i(e,"");var t=/<\/?([a-z][a-z0-9]*)\b[^>]*>|<!--[\s\S]*?-->/gi;return s.copySafeness(e,o.trim(e.replace(t,"")).replace(/\s+/gi," "));
},title:function(e){e=i(e,"");for(var t=e.split(" "),n=0;n<t.length;n++)t[n]=o.capitalize(t[n]);return s.copySafeness(e,t.join(" "))},trim:function(e){return s.copySafeness(e,e.replace(/^\s*|\s*$/g,""))},truncate:function(e,t,n,r){var o=e;if(e=i(e,""),t=t||255,e.length<=t)return e;if(n)e=e.substring(0,t);else{var a=e.lastIndexOf(" ",t);-1===a&&(a=t),e=e.substring(0,a)}return e+=void 0!==r&&null!==r?r:"...",s.copySafeness(o,e)},upper:function(e){return e=i(e,""),e.toUpperCase()},urlencode:function(e){var t=encodeURIComponent;if(r.isString(e))return t(e);var n;if(r.isArray(e))n=e.map(function(e){return t(e[0])+"="+t(e[1])});else{n=[];for(var i in e)e.hasOwnProperty(i)&&n.push(t(i)+"="+t(e[i]))}return n.join("&")},urlize:function(e,t,n){isNaN(t)&&(t=1/0);var i=n===!0?' rel="nofollow"':"",r=/^(?:\(|<|&lt;)?(.*?)(?:\.|,|\)|\n|&gt;)?$/,s=/^[\w.!#$%&'*+\-\/=?\^`{|}~]+@[a-z\d\-]+(\.[a-z\d\-]+)+$/i,o=/^https?:\/\/.*$/,a=/^www\./,l=/\.(?:org|net|com)(?:\:|\/|$)/,c=e.split(/\s+/).filter(function(e){return e&&e.length}).map(function(e){var n=e.match(r),c=n&&n[1]||e;return o.test(c)?'<a href="'+c+'"'+i+">"+c.substr(0,t)+"</a>":a.test(c)?'<a href="http://'+c+'"'+i+">"+c.substr(0,t)+"</a>":s.test(c)?'<a href="mailto:'+c+'">'+c+"</a>":l.test(c)?'<a href="http://'+c+'"'+i+">"+c.substr(0,t)+"</a>":e});return c.join(" ")},wordcount:function(e){e=i(e,"");var t=e?e.match(/\w+/g):null;return t?t.length:null},"float":function(e,t){var n=parseFloat(e);return isNaN(n)?t:n},"int":function(e,t){var n=parseInt(e,10);return isNaN(n)?t:n}};o.d=o["default"],o.e=o.escape,e.exports=o},function(e,t,n){"use strict";function i(){if(l.length)throw l.shift()}function r(e){var t;t=a.length?a.pop():new s,t.task=e,o(t)}function s(){this.task=null}var o=n(13),a=[],l=[],c=o.makeRequestCallFromTimer(i);e.exports=r,s.prototype.call=function(){try{this.task.call()}catch(e){r.onerror?r.onerror(e):(l.push(e),c())}finally{this.task=null,a[a.length]=this}}},function(e,t){(function(t){"use strict";function n(e){a.length||(o(),l=!0),a[a.length]=e}function i(){for(;c<a.length;){var e=c;if(c+=1,a[e].call(),c>h){for(var t=0,n=a.length-c;n>t;t++)a[t]=a[t+c];a.length-=c,c=0}}a.length=0,c=0,l=!1}function r(e){var t=1,n=new u(e),i=document.createTextNode("");return n.observe(i,{characterData:!0}),function(){t=-t,i.data=t}}function s(e){return function(){function t(){clearTimeout(n),clearInterval(i),e()}var n=setTimeout(t,0),i=setInterval(t,50)}}e.exports=n;var o,a=[],l=!1,c=0,h=1024,u=t.MutationObserver||t.WebKitMutationObserver;o="function"==typeof u?r(i):s(i),n.requestFlush=o,n.makeRequestCallFromTimer=s}).call(t,function(){return this}())},function(e,t,n){"use strict";var i=n(15),r=n(16),s=i.extend({init:function(e,t){this.baseURL=e||".",t=t||{},this.useCache=!!t.useCache,this.async=!!t.async},resolve:function(e,t){throw new Error("relative templates not support in the browser yet")},getSource:function(e,t){var n,i=this.useCache;return this.fetch(this.baseURL+"/"+e,function(r,s){if(r){if(!t)throw r;t(r)}else n={src:s,path:e,noCache:!i},t&&t(null,n)}),n},fetch:function(e,t){var n,i=!0;window.XMLHttpRequest?n=new XMLHttpRequest:window.ActiveXObject&&(n=new ActiveXObject("Microsoft.XMLHTTP")),n.onreadystatechange=function(){4===n.readyState&&i&&(i=!1,0===n.status||200===n.status?t(null,n.responseText):t(n.responseText))},e+=(-1===e.indexOf("?")?"?":"&")+"s="+(new Date).getTime(),n.open("GET",e,this.async),n.send()}});e.exports={WebLoader:s,PrecompiledLoader:r}},function(e,t,n){"use strict";var i=n(3),r=n(5),s=n(4),o=r.extend({on:function(e,t){this.listeners=this.listeners||{},this.listeners[e]=this.listeners[e]||[],this.listeners[e].push(t)},emit:function(e){var t=Array.prototype.slice.call(arguments,1);this.listeners&&this.listeners[e]&&s.each(this.listeners[e],function(e){e.apply(null,t)})},resolve:function(e,t){return i.resolve(i.dirname(e),t)},isRelative:function(e){return 0===e.indexOf("./")||0===e.indexOf("../")}});e.exports=o},function(e,t,n){"use strict";var i=n(15),r=i.extend({init:function(e){this.precompiled=e||{}},getSource:function(e){return this.precompiled[e]?{src:{type:"code",obj:this.precompiled[e]},path:e}:null}});e.exports=r},function(e,t){"use strict";function n(e){var t=-1;return{current:null,reset:function(){t=-1,this.current=null},next:function(){return t++,t>=e.length&&(t=0),this.current=e[t],this.current}}}function i(e){e=e||",";var t=!0;return function(){var n=t?"":e;return t=!1,n}}function r(){return{range:function(e,t,n){t?n||(n=1):(t=e,e=0,n=1);var i,r=[];if(n>0)for(i=e;t>i;i+=n)r.push(i);else for(i=e;i>t;i+=n)r.push(i);return r},cycler:function(){return n(Array.prototype.slice.call(arguments))},joiner:function(e){return i(e)}}}e.exports=r},function(e,t){function n(){"use strict";var e=this.runtime,t=this.lib,n=e.contextOrFrameLookup;e.contextOrFrameLookup=function(e,t,i){var r=n.apply(this,arguments);if(void 0===r)switch(i){case"True":return!0;case"False":return!1;case"None":return null}return r};var i=e.memberLookup,r={pop:function(e){if(void 0===e)return this.pop();if(e>=this.length||0>e)throw new Error("KeyError");return this.splice(e,1)},remove:function(e){for(var t=0;t<this.length;t++)if(this[t]===e)return this.splice(t,1);throw new Error("ValueError")},count:function(e){for(var t=0,n=0;n<this.length;n++)this[n]===e&&t++;return t},index:function(e){var t;if(-1===(t=this.indexOf(e)))throw new Error("ValueError");return t},find:function(e){return this.indexOf(e)},insert:function(e,t){return this.splice(e,0,t)}},s={items:function(){var e=[];for(var t in this)e.push([t,this[t]]);return e},values:function(){var e=[];for(var t in this)e.push(this[t]);return e},keys:function(){var e=[];for(var t in this)e.push(t);return e},get:function(e,t){var n=this[e];return void 0===n&&(n=t),n},has_key:function(e){return this.hasOwnProperty(e)},pop:function(e,t){var n=this[e];if(void 0===n&&void 0!==t)n=t;else{if(void 0===n)throw new Error("KeyError");delete this[e]}return n},popitem:function(){for(var e in this){var t=this[e];return delete this[e],[e,t]}throw new Error("KeyError")},setdefault:function(e,t){return e in this?this[e]:(void 0===t&&(t=null),this[e]=t)},update:function(e){for(var t in e)this[t]=e[t];return null}};s.iteritems=s.items,s.itervalues=s.values,s.iterkeys=s.keys,e.memberLookup=function(e,n,o){return e=e||{},t.isArray(e)&&r.hasOwnProperty(n)?function(){return r[n].apply(e,arguments)}:t.isObject(e)&&s.hasOwnProperty(n)?function(){return s[n].apply(e,arguments)}:i.apply(this,arguments)}}e.exports=n}]);

(function () {

    window.env = new nunjucks.Environment(new nunjucks.WebLoader('/static/views', {
    	useCache : true,
        async : true
    }), {
        autoescape: true
    });

    window.env_no_async = new nunjucks.Environment(new nunjucks.WebLoader('/static/views', {
        useCache : true,
    }), {
        autoescape: true
    });

    var nunjucksFilters = {
        format: function () {
            return window.format.apply(this, arguments);
        },

        trim: function (source) {
            return source.replace(/\s+/g, '');
        },

        choose_plural: function (num, form_1, form_2, form_3) {
            return utils.getPlural(num, [form_1, form_2, form_3]);
        },

        pluralize: function (num, form_12, form_3) {
    	   return window.pluralize(form_12, form_3, num);
        },

        min: function (args) {
            return Math.min.apply(Math, args);
        },

        max: function (args) {
            return Math.max.apply(Math, args);
        },

        split: function (str, delimiter) {
            return str.split(delimiter);
        },

        index: function (arr, index) {
            return arr[index];
        },

        indexOf: function (arr, query) {
            return arr.indexOf(query);
        },

        get_small_img_url: function (img_url, size) {
        	// Повторяем логику uritools.urisplit из Python
        	var uri_reg_exp = /^(?:([a-z]+):\/\/)?([^\/]+)(?:\/([^?]+)(?:\?([^#]+)(?:#(.*))?)?)?/,
        		uri_matches = (img_url || '').match(uri_reg_exp) || {},
        		uri_parts = {
        			scheme: uri_matches[1] || '',
        			authority: uri_matches[2] || '',
        			path: uri_matches[3] || '',
        			query: uri_matches[4] || '',
        			fragment: uri_matches[5] || ''
        		};

            if ((uri_parts.authority || '').slice(-7) !== 'std3.ru') {
            	return img_url;
            }

            path_parts = uri_parts.path.replace(/^\//, '').split('/');

            var new_path;
            if (path_parts.length === 3 && path_parts[0].length === path_parts[1].length && path_parts[0].length === 2) {
            	new_path = window.format('/{}', size) + uri_parts.path;
            } else if (path_parts.length === 4 && path_parts[1].length === path_parts[2].length && path_parts[1].length === 2) {
            	new_path = window.format('/{}/', size) + uri_parts.path.split('/', 2).slice(-1);
            } else {
            	new_path = uri_parts.path;
            }

            // Повторяем логику uritools.uriunsplit из Python
            return '' +
            	(uri_parts.scheme ? uri_parts.scheme + '://' : '') +
            	(uri_parts.authority + '/') +
            	(new_path) +
            	(uri_parts.query ? '?' + uri_parts.query : '') +
            	(uri_parts.fragment ? '#' + uri_parts.fragment : '');
        },

        encodeURIComponent: function (str) {
            return encodeURIComponent(str);
        }
    };

    var nunjucksExtensions = {
        _: function () {
            return window.gettext.apply(this, arguments);
        },

        ngettext: function (form1, form2) {
            return [form1, form2];
        },

        base_domain_url: function () {
            return globals.base_domain ? globals.base_domain.url : globals.domain.url;
        },

        get_current_year: function () {
            var now = new Date();
            return now.getFullYear();
        },

        getrandbits: function () {
            return Math.floor(Math.random() * 16).toString(16);
        },

        unread_count_caption: function (unread_count) {
            if (!unread_count || !+unread_count[0] || !+unread_count[1]) {
                return '';
            } else if (unread_count[0] > 0 && unread_count[1] > 0) {
                return window.format('{}/{}', unread_count[0], unread_count[1]);
            } else if (unread_count[0] > 0) {
                return '' + unread_count[0];
            } else {
                return '' + unread_count[1];
            }
        }
    };

    for (var f in nunjucksFilters) {
        env.addFilter(f, nunjucksFilters[f]);
        env_no_async.addFilter(f, nunjucksFilters[f]);
    }

    for (var g in nunjucksExtensions) {
        env.addGlobal(g, nunjucksExtensions[g]);
        env_no_async.addGlobal(g, nunjucksExtensions[g]);
    }

})();

var host=window.location.host,source="s.imgur.com/min/embed-controller.js";if(!window.imgurEmbed){window.imgurEmbed={tasks:0};var script=document.createElement("script");script.type="text/javascript",script.async=!0,script.src="//"+source,script.charset="utf-8",document.getElementsByTagName("head")[0].appendChild(script)}window.imgurEmbed.createIframe?imgurEmbed.createIframe():imgurEmbed.tasks++;
//# sourceMappingURL=embed.js.map